"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[7836],{748:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>i});var l=a(7462),r=(a(7294),a(3905)),n=a(2004);const s={sidebar_position:10},o="spork",p={unversionedId:"wallet/cli-wallet/commands/yerbas/spork",id:"wallet/cli-wallet/commands/yerbas/spork",title:"spork",description:'spork "command"',source:"@site/docs/wallet/cli-wallet/commands/yerbas/spork.mdx",sourceDirName:"wallet/cli-wallet/commands/yerbas",slug:"/wallet/cli-wallet/commands/yerbas/spork",permalink:"/docs/wallet/cli-wallet/commands/yerbas/spork",draft:!1,editUrl:"https://github.com/Raptor3um/docs/tree/develop/docs/wallet/cli-wallet/commands/yerbas/spork.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"sidebarWallet",previous:{title:"smartnodelist",permalink:"/docs/wallet/cli-wallet/commands/yerbas/smartnodelist"},next:{title:"voteraw",permalink:"/docs/wallet/cli-wallet/commands/yerbas/voteraw"}},m={},i=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],d={toc:i};function u(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,l.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"spork"},"spork"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},'spork "command"')),(0,r.kt)("p",null,"Shows information about current state of sporks"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"yerbas-cli spork show")),(0,r.kt)(n.Z,{playing:!0,controls:!0,url:[{src:`${a(5182).Z}`,type:"video/webm"}],mdxType:"ReactPlayer"}),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"command"'),(0,r.kt)("td",{parentName:"tr",align:null},"(string)"),(0,r.kt)("td",{parentName:"tr",align:null},"The command to execute")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Arguments:\n1. "command"        (string or set of strings, required) The command to execute\n')),(0,r.kt)("h2",{id:"output"},"Output"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Result"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"..."),(0,r.kt)("td",{parentName:"tr",align:null},"..."),(0,r.kt)("td",{parentName:"tr",align:null},"...")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Result:\nFor 'show':\n{\n  \"SPORK_NAME\" : spork_value,    (number) The value of the specific spork with the name SPORK_NAME\n  ...\n}\nFor 'active':\n{\n  \"SPORK_NAME\" : true|false,     (boolean) 'true' for time-based sporks if spork is active and 'false' otherwise\n  ...\n}\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "spork", "params": ["show"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}u.isMDXComponent=!0},5182:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/medias/spork-e62050eabbf1a107f98f25f3efdebd44.webm"}}]);