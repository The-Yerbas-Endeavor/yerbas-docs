"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[6914],{2357:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>o,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var r=a(7462),l=(a(7294),a(3905));a(2004);const n={sidebar_position:1},s="createmultisig",i={unversionedId:"wallet/cli-wallet/commands/util/createmultisig",id:"wallet/cli-wallet/commands/util/createmultisig",title:"createmultisig",description:'createmultisig nrequired ["key",...]',source:"@site/docs/wallet/cli-wallet/commands/util/createmultisig.mdx",sourceDirName:"wallet/cli-wallet/commands/util",slug:"/wallet/cli-wallet/commands/util/createmultisig",permalink:"/docs/wallet/cli-wallet/commands/util/createmultisig",draft:!1,editUrl:"https://github.com/The-Yerbas-Endeavor/yerbas-docs/tree/develop/docs/wallet/cli-wallet/commands/util/createmultisig.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"sidebarWallet",previous:{title:"signrawtransaction",permalink:"/docs/wallet/cli-wallet/commands/raw-transactions/signrawtransaction"},next:{title:"estimatefee",permalink:"/docs/wallet/cli-wallet/commands/util/estimatefee"}},u={},d=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],m={toc:d};function o(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"createmultisig"},"createmultisig"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"createmultisig nrequired ",'["key",...]')),(0,l.kt)("p",null,"Creates a multi-signature address with n signature of m keys required.\nIt returns a json object with the address and redeemScript."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# Create a multisig address from 2 addresses\nyerbas-cli createmultisig 2 "[\\"Xt4qk9uKvQYAonVGSZNXqxeDmtjaEWgfrs\\",\\"XoSoWQkpgLpppPoyyzbUFh1fq2RBvW6UK1\\"]"\n')),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"address"'),(0,l.kt)("td",{parentName:"tr",align:null},"(string)"),(0,l.kt)("td",{parentName:"tr",align:null},"The base58check encoded address")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'Arguments:\n1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\n2. "keys"       (string, required) A json array of keys which are yerbas addresses or hex-encoded public keys\n     [\n       "key"    (string) yerbas address or hex-encoded public key\n       ,...\n     ]\n')),(0,l.kt)("h2",{id:"output"},"Output"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"...")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'Result:\n{\n  "address":"multisigaddress",  (string) The value of the new multisig address.\n  "redeemScript":"script"       (string) The string value of the hex-encoded redemption script.\n}\n')),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "createmultisig", "params": [2, "[\\"Xt4qk9uKvQYAonVGSZNXqxeDmtjaEWgfrs\\",\\"XoSoWQkpgLpppPoyyzbUFh1fq2RBvW6UK1\\"]"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}o.isMDXComponent=!0}}]);