"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[4698],{2969:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>n,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=a(7462),o=(a(7294),a(3905));a(2004);const l={sidebar_position:26},n="verifytxoutproof",i={unversionedId:"wallet/cli-wallet/commands/blockchain/verifytxoutproof",id:"wallet/cli-wallet/commands/blockchain/verifytxoutproof",title:"verifytxoutproof",description:'verifytxoutproof "proof"',source:"@site/docs/wallet/cli-wallet/commands/blockchain/verifytxoutproof.mdx",sourceDirName:"wallet/cli-wallet/commands/blockchain",slug:"/wallet/cli-wallet/commands/blockchain/verifytxoutproof",permalink:"/docs/wallet/cli-wallet/commands/blockchain/verifytxoutproof",draft:!1,editUrl:"https://github.com/Raptor3um/docs/tree/develop/docs/wallet/cli-wallet/commands/blockchain/verifytxoutproof.mdx",tags:[],version:"current",sidebarPosition:26,frontMatter:{sidebar_position:26},sidebar:"sidebarWallet",previous:{title:"verifychain",permalink:"/docs/wallet/cli-wallet/commands/blockchain/verifychain"},next:{title:"debug",permalink:"/docs/wallet/cli-wallet/commands/control/debug"}},p={},s=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],c={toc:s};function u(t){let{components:e,...a}=t;return(0,o.kt)("wrapper",(0,r.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"verifytxoutproof"},"verifytxoutproof"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},'verifytxoutproof "proof"')),(0,o.kt)("p",null,"Verifies that a proof points to a transaction in a block, returning the transaction it commits to\nand throwing an RPC error if the block is not in our best chain"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'yerbas-cli verifytxoutproof "proof"')),(0,o.kt)("h2",{id:"arguments"},"Arguments"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Argument"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},'"proof"'),(0,o.kt)("td",{parentName:"tr",align:null},"(string)"),(0,o.kt)("td",{parentName:"tr",align:null},"The hex-encoded proof generated by gettxoutproof")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'Arguments:\n1. "proof"    (string, required) The hex-encoded proof generated by gettxoutproof\n')),(0,o.kt)("h2",{id:"output"},"Output"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Result"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},'"txid"'),(0,o.kt)("td",{parentName:"tr",align:null},"(array, strings)"),(0,o.kt)("td",{parentName:"tr",align:null},"The txid(s) which the proof commits to, or empty array if the proof is invalid")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'Result:\n["txid"]      (array, strings) The txid(s) which the proof commits to, or empty array if the proof is invalid\n')),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "gettxoutproof", "params": ["proof"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}u.isMDXComponent=!0}}]);