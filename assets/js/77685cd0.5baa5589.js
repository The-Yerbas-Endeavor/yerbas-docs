"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[5495],{44116:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=a(87462),l=(a(67294),a(3905)),r=a(22004);const s={sidebar_position:18},i="getspecialtxes",o={unversionedId:"wallet/cli-wallet/commands/blockchain/getspecialtxes",id:"wallet/cli-wallet/commands/blockchain/getspecialtxes",title:"getspecialtxes",description:'getspecialtxes "blockhash" ( type count skip verbosity )',source:"@site/docs/wallet/cli-wallet/commands/blockchain/getspecialtxes.mdx",sourceDirName:"wallet/cli-wallet/commands/blockchain",slug:"/wallet/cli-wallet/commands/blockchain/getspecialtxes",permalink:"/docs/wallet/cli-wallet/commands/blockchain/getspecialtxes",draft:!1,editUrl:"https://github.com/The-Yerbas-Endeavor/yerbas-docs/tree/develop/docs/wallet/cli-wallet/commands/blockchain/getspecialtxes.mdx",tags:[],version:"current",sidebarPosition:18,frontMatter:{sidebar_position:18},sidebar:"sidebarWallet",previous:{title:"getrawmempool",permalink:"/docs/wallet/cli-wallet/commands/blockchain/getrawmempool"},next:{title:"gettxout",permalink:"/docs/wallet/cli-wallet/commands/blockchain/gettxout"}},c={},p=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],d={toc:p};function m(t){let{components:e,...s}=t;return(0,l.kt)("wrapper",(0,n.Z)({},d,s,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"getspecialtxes"},"getspecialtxes"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},'getspecialtxes "blockhash" ( type count skip verbosity ) ')),(0,l.kt)("p",null,"Returns an array of special transactions found in the specified block"),(0,l.kt)("p",null,"If verbosity is 0, returns tx hash for each transaction.\nIf verbosity is 1, returns hex-encoded data for each transaction.\nIf verbosity is 2, returns an Object with information for each transaction."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'yerbas-cli getspecialtxes "00000000000fd08c2fb661d2fcb0d49abb3a91e5f27082ce64feed3b4dede2e2"')),(0,l.kt)(r.Z,{playing:!0,controls:!0,url:[{src:`${a(14907).Z}`,type:"video/webm"}],mdxType:"ReactPlayer"}),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"blockhash"'),(0,l.kt)("td",{parentName:"tr",align:null},"(string)"),(0,l.kt)("td",{parentName:"tr",align:null},"The block hash")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"type"),(0,l.kt)("td",{parentName:"tr",align:null},"(numeric)"),(0,l.kt)("td",{parentName:"tr",align:null},"Filter special txes by type, -1 means all")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"count"),(0,l.kt)("td",{parentName:"tr",align:null},"(numeric)"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of transactions to return")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"skip"),(0,l.kt)("td",{parentName:"tr",align:null},"(numeric)"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of transactions to skip")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"verbosity"),(0,l.kt)("td",{parentName:"tr",align:null},"(numeric)"),(0,l.kt)("td",{parentName:"tr",align:null},"0 for hashes, 1 for hex-encoded data, and 2")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'Arguments:\n1. "blockhash"          (string, required) The block hash\n2. type                 (numeric, optional, default=-1) Filter special txes by type, -1 means all types\n3. count                (numeric, optional, default=10) The number of transactions to return\n4. skip                 (numeric, optional, default=0) The number of transactions to skip\n5. verbosity            (numeric, optional, default=0) 0 for hashes, 1 for hex-encoded data, and 2 for json object\n')),(0,l.kt)("h2",{id:"output"},"Output"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"txid"'),(0,l.kt)("td",{parentName:"tr",align:null},"(string)"),(0,l.kt)("td",{parentName:"tr",align:null},"The transaction id")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'Result (for verbosity = 0):\n[\n  "txid" : "xxxx",    (string) The transaction id\n]\n\nResult (for verbosity = 1):\n[\n  "data",               (string) A string that is serialized, hex-encoded data for the transaction\n]\n\nResult (for verbosity = 2):\n[                       (array of Objects) The transactions in the format of the getrawtransaction RPC.\n  ...,\n]\n')),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getspecialtxes", "params": ["00000000000fd08c2fb661d2fcb0d49abb3a91e5f27082ce64feed3b4dede2e2"] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}m.isMDXComponent=!0},14907:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/medias/getspecialtxes-75f7dd5692f06227187bb2de313a749c.webm"}}]);