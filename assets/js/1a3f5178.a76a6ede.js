"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[722],{3272:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905)),a=n(2004);const l={sidebar_position:7},i="getnetworkinfo",s={unversionedId:"wallet/cli-wallet/commands/network/getnetworkinfo",id:"wallet/cli-wallet/commands/network/getnetworkinfo",title:"getnetworkinfo",description:"getnetworkinfo",source:"@site/docs/wallet/cli-wallet/commands/network/getnetworkinfo.mdx",sourceDirName:"wallet/cli-wallet/commands/network",slug:"/wallet/cli-wallet/commands/network/getnetworkinfo",permalink:"/docs/wallet/cli-wallet/commands/network/getnetworkinfo",draft:!1,editUrl:"https://github.com/Raptor3um/docs/tree/develop/docs/wallet/cli-wallet/commands/network/getnetworkinfo.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"sidebarWallet",previous:{title:"getnettotals",permalink:"/docs/wallet/cli-wallet/commands/network/getnettotals"},next:{title:"getpeerinfo",permalink:"/docs/wallet/cli-wallet/commands/network/getpeerinfo"}},m={},c=[{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],x={toc:c};function d(e){let{components:t,...l}=e;return(0,o.kt)("wrapper",(0,r.Z)({},x,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getnetworkinfo"},"getnetworkinfo"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"getnetworkinfo")),(0,o.kt)("p",null,"Returns an object containing various state info regarding P2P networking."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"yerbas-cli getnetworkinfo ")),(0,o.kt)(a.Z,{playing:!0,controls:!0,url:[{src:`${n(991).Z}`,type:"video/webm"}],mdxType:"ReactPlayer"}),(0,o.kt)("h2",{id:"output"},"Output"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Result"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},'"version"'),(0,o.kt)("td",{parentName:"tr",align:null},"(number)"),(0,o.kt)("td",{parentName:"tr",align:null},"the server version")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'Result:\n{\n  "version": xxxxx,                      (numeric) the server version\n  "subversion": "/Yerbas Core:x.x.x/",     (string) the server subversion string\n  "protocolversion": xxxxx,              (numeric) the protocol version\n  "localservices": "xxxxxxxxxxxxxxxx", (string) the services we offer to the network\n  "localrelay": true|false,              (bool) true if transaction relay is requested from peers\n  "timeoffset": xxxxx,                   (numeric) the time offset\n  "connections": xxxxx,                  (numeric) the number of connections\n  "networkactive": true|false,           (bool) whether p2p networking is enabled\n  "networks": [                          (array) information per network\n  {\n    "name": "xxx",                     (string) network (ipv4, ipv6 or onion)\n    "limited": true|false,               (boolean) is the network limited using -onlynet?\n    "reachable": true|false,             (boolean) is the network reachable?\n    "proxy": "host:port"               (string) the proxy that is used for this network, or empty if none\n    "proxy_randomize_credentials": true|false,  (string) Whether randomized credentials are used\n  }\n  ,...\n  ],\n  "relayfee": x.xxxxxxxx,                (numeric) minimum relay fee for transactions in YERB/kB\n  "incrementalfee": x.xxxxxxxx,          (numeric) minimum fee increment for mempool limiting or BIP 125 replacement in YERB/kB\n  "localaddresses": [                    (array) list of local addresses\n  {\n    "address": "xxxx",                 (string) network address\n    "port": xxx,                         (numeric) network port\n    "score": xxx                         (numeric) relative score\n  }\n  ,...\n  ]\n  "warnings": "..."                    (string) any network warnings\n}\n')),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getnetworkinfo", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}d.isMDXComponent=!0},991:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/medias/getnetworkinfo-42e9e742a7fd5fa760cd0760d0395738.webm"}}]);