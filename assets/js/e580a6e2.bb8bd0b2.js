"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[4544],{7582:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=a(7462),i=(a(7294),a(3905));a(2004);const r={sidebar_position:3},l="prioritisetransaction",s={unversionedId:"wallet/cli-wallet/commands/mining/prioritisetransaction",id:"wallet/cli-wallet/commands/mining/prioritisetransaction",title:"prioritisetransaction",description:"prioritisetransaction txid fee delta",source:"@site/docs/wallet/cli-wallet/commands/mining/prioritisetransaction.mdx",sourceDirName:"wallet/cli-wallet/commands/mining",slug:"/wallet/cli-wallet/commands/mining/prioritisetransaction",permalink:"/docs/wallet/cli-wallet/commands/mining/prioritisetransaction",draft:!1,editUrl:"https://github.com/The-Yerbas-Endeavor/docs/tree/develop/docs/wallet/cli-wallet/commands/mining/prioritisetransaction.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"sidebarWallet",previous:{title:"getnetworkhashps",permalink:"/docs/wallet/cli-wallet/commands/mining/getnetworkhashps"},next:{title:"submitblock",permalink:"/docs/wallet/cli-wallet/commands/mining/submitblock"}},o={},d=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],p={toc:d};function m(t){let{components:e,...a}=t;return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"prioritisetransaction"},"prioritisetransaction"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"prioritisetransaction txid fee delta")),(0,i.kt)("p",null,"Accepts the transaction into mined blocks at a higher (or lower) priority"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'yerbas-cli prioritisetransaction "txid" 10000')),(0,i.kt)("h2",{id:"arguments"},"Arguments"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Argument"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},'"txid"'),(0,i.kt)("td",{parentName:"tr",align:null},"(string)"),(0,i.kt)("td",{parentName:"tr",align:null},"The transaction id.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"fee_delta"),(0,i.kt)("td",{parentName:"tr",align:null},"(string)"),(0,i.kt)("td",{parentName:"tr",align:null},"The fee value (in duffs) to add (or subtract, if negative). The fee is not actually paid, only the algorithm for selecting transactions into a block considers the transaction as it would have paid a higher (or lower) fee.")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'Arguments:\n1. "txid"       (string, required) The transaction id.\n2. fee_delta      (numeric, required) The fee value (in duffs) to add (or subtract, if negative).\n                  The fee is not actually paid, only the algorithm for selecting transactions into a block\n                  considers the transaction as it would have paid a higher (or lower) fee.\n')),(0,i.kt)("h2",{id:"output"},"Output"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Result"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"true"),(0,i.kt)("td",{parentName:"tr",align:null},"(boolean)"),(0,i.kt)("td",{parentName:"tr",align:null},"Returns true")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"Result:\ntrue              (boolean) Returns true\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "prioritisetransaction", "params": ["txid", 10000] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}m.isMDXComponent=!0}}]);