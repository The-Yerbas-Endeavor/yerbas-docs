"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[229],{4476:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>k,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var n=l(7462),a=(l(7294),l(3905));const s={sidebar_position:12,title:"Asset Scripts"},r=void 0,u={unversionedId:"assets/scripts",id:"assets/scripts",title:"Asset Scripts",description:"Here is where the technical protocol-ly stuff starts.",source:"@site/docs/assets/scripts.mdx",sourceDirName:"assets",slug:"/assets/scripts",permalink:"/docs/assets/scripts",draft:!1,editUrl:"https://github.com/The-Yerbas-Endeavor/yerbas-docs/tree/develop/docs/assets/scripts.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,title:"Asset Scripts"},sidebar:"sidebarAssets",previous:{title:"Asset Fees",permalink:"/docs/assets/asset_fees"},next:{title:"Asset transaction structures",permalink:"/docs/assets/create_transactions"}},i={},d=[],o={toc:d};function k(t){let{components:e,...l}=t;return(0,a.kt)("wrapper",(0,n.Z)({},o,l,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Here is where the technical protocol-ly stuff starts."),(0,a.kt)("p",null,"The following sections assume that you are familiar with ",(0,a.kt)("a",{href:"https://en.bitcoin.it/wiki/Script"},"script")," and",(0,a.kt)("a",{href:"https://en.bitcoin.it/wiki/Transaction"},"transactions"),"."),(0,a.kt)("p",null,"We do not endorse any of the assets shown in examples."),(0,a.kt)("p",null,"There are 4 types of asset transfer scripts and 3 types of asset tag scripts. All asset scripts must be in a VOUT with a YERB value of 0."),(0,a.kt)("p",null,"If you are looking to use this as a guide to parse the yerbas chain, please see a note at the end of this section."),(0,a.kt)("h4",null,"New asset script"),(0,a.kt)("p",null,"New asset scripts are used to transfer an amount of an asset into and address during an asset create as well as associate metadata with the created asset."),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Script portion"),(0,a.kt)("th",null,"Number of bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Standard vout script (P2PKH)"),(0,a.kt)("td",null,"Var bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_YERB_ASSET (C0)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the asset data (OP_PUSH) (Not including OP_DROP)"),(0,a.kt)("td",null,"1 or 2 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"'yerb' in ascii (72766E)"),(0,a.kt)("td",null,"3 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Asset script type 'q' (71)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of asset name (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Asset name in ascii"),(0,a.kt)("td",null,"Var bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Amount in sats (little endian)"),(0,a.kt)("td",null,"8 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Divisions (00-08)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Reissuability (00-01)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Has associated data (00-01)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Associated data (Optional; only if previous byte is 01)"),(0,a.kt)("td",null,"0x12 and 0x20 if IPFS data in which case API will encode/decode as IPFS content identifier 32 bytes of user defined data")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_DROP (75)"),(0,a.kt)("td",null,"1 byte"))),(0,a.kt)("p",null,"On chain example: ",(0,a.kt)("a",{href:"https://yerb.cryptoscope.io/api/getrawtransaction/?txid=8eefce8d264d723b6b8f3cf87bcb400a009d01c2771f94e5cc07af252851aa96&decode=1"},"8eefce8d264d723b6b8f3cf87bcb400a009d01c2771f94e5cc07af252851aa96")," VOUT 3"),(0,a.kt)("h4",null,"Ownership asset script"),(0,a.kt)("p",null,"Ownership asset scripts are used in tandem with a new asset script if the new asset has an associated ownership asset. Notice how ownership assets have no extra information, not even an amount."),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Script portion"),(0,a.kt)("th",null,"Number of bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Standard vout script (P2PKH)"),(0,a.kt)("td",null,"Var bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_YERB_ASSET (C0)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the asset data (OP_PUSH) (Not including OP_DROP)"),(0,a.kt)("td",null,"1 or 2 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"'yerb' in ascii (72766E)"),(0,a.kt)("td",null,"3 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Asset script type 'o' (6F)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of asset name (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Asset name in ascii"),(0,a.kt)("td",null,"Var bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_DROP (75)"),(0,a.kt)("td",null,"1 byte"))),(0,a.kt)("p",null,"On chain example: ",(0,a.kt)("a",{href:"https://yerb.cryptoscope.io/api/getrawtransaction/?txid=8eefce8d264d723b6b8f3cf87bcb400a009d01c2771f94e5cc07af252851aa96&decode=1"},"8eefce8d264d723b6b8f3cf87bcb400a009d01c2771f94e5cc07af252851aa96")," VOUT 2"),(0,a.kt)("h4",null,"Reissue asset script"),(0,a.kt)("p",null,"Reissue asset scripts are used to change an asset's metadata. If the amount is not zero, that amount of the asset is created for the pubkey in the standard script."),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Script portion"),(0,a.kt)("th",null,"Number of bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Standard vout script (P2PKH)"),(0,a.kt)("td",null,"Var bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_YERB_ASSET (C0)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the asset data (OP_PUSH) (Not including OP_DROP)"),(0,a.kt)("td",null,"1 or 2 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"'yerb' in ascii (72766E)"),(0,a.kt)("td",null,"3 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Asset script type 'r' (72)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of asset name (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Asset name in ascii"),(0,a.kt)("td",null,"Var bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Amount in sats (little endian) (Amount to add into circulation)"),(0,a.kt)("td",null,"8 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Divisions (00-08) (FF for unchanged; can only increase)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Reissuability (00-01)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Associated data (Optional; only if associating new data)"),(0,a.kt)("td",null,"1 type byte, 1 length byte, 32 bytes user data")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_DROP (75)"),(0,a.kt)("td",null,"1 byte"))),(0,a.kt)("p",null,"On chain example: ",(0,a.kt)("a",{href:"https://yerb.cryptoscope.io/api/getrawtransaction/?txid=b9d3ba355acbf58e44e893dccbcad06a10af88727adc340eeacd10d11b026f52&decode=1"},"b9d3ba355acbf58e44e893dccbcad06a10af88727adc340eeacd10d11b026f52")," VOUT 3"),(0,a.kt)("h4",null,"Transfer asset script"),(0,a.kt)("p",null,"Transfer asset scripts are used to transfer an amount of an asset to another address. If transfering an ownership asset, use 100,000,000 (00:E1:F5:05:00:00:00:00) for the sat value."),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Script portion"),(0,a.kt)("th",null,"Number of bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Standard vout script (P2PKH)"),(0,a.kt)("td",null,"Var bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_YERB_ASSET (C0)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the asset data (OP_PUSH) (Not including OP_DROP)"),(0,a.kt)("td",null,"1 or 2 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"'yerb' in ascii (72766E)"),(0,a.kt)("td",null,"3 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Asset script type 't' (74)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of asset name (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Asset name in ascii"),(0,a.kt)("td",null,"Var bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Amount in sats (little endian)"),(0,a.kt)("td",null,"8 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Associated data (Optional; only if a broadcast)"),(0,a.kt)("td",null,"1 type byte, 1 length byte, 32 bytes user data")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_DROP (75)"),(0,a.kt)("td",null,"1 byte"))),(0,a.kt)("p",null,"On chain example: ",(0,a.kt)("a",{href:"https://yerb.cryptoscope.io/api/getrawtransaction/?txid=bae95f349f15effe42e75134ee7f4560f53462ddc19c47efdd03f85ef4ab8f40&decode=1"},"bae95f349f15effe42e75134ee7f4560f53462ddc19c47efdd03f85ef4ab8f40")," VOUT 0"),(0,a.kt)("h4",null,"Null asset tag script"),(0,a.kt)("p",null,"Dictates if an address is qualified for a restricted asset."),(0,a.kt)("p",null,"If the asset is a qualifier, a flag of 1 denotes a qualification. A flag of 0 denotes a revocation."),(0,a.kt)("p",null,"If the asset is a restricted asset, a flag of 1 denotes blacklisting the address. A flag of 0 denotes unblacklisting the address."),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Script portion"),(0,a.kt)("th",null,"Number of bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_YERB_ASSET (C0)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the pubkey h160 (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Pubkey h160"),(0,a.kt)("td",null,"20 bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the asset portion (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the asset name (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Qualifier or restricted asset name"),(0,a.kt)("td",null,"Var bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Flag (00-01)"),(0,a.kt)("td",null,"1 byte"))),(0,a.kt)("p",null,"On chain example: ",(0,a.kt)("a",{href:"https://yerb.cryptoscope.io/api/getrawtransaction/?txid=4ea3369ef6fb57fc26e176ad5903d4684a8c64f641aa0e1f02e5c7428609e060&decode=1"},"4ea3369ef6fb57fc26e176ad5903d4684a8c64f641aa0e1f02e5c7428609e060")," VOUT 1"),(0,a.kt)("h4",null,"Verifier asset tag script"),(0,a.kt)("p",null,"This script must be sent with a new asset script or a reissue asset script for a restricted asset. It associates qualifiers with the restricted asset."),(0,a.kt)("p",null,"An asset name portion of 'true' in ascii is the default to denote no associated qualifiers."),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Script portion"),(0,a.kt)("th",null,"Number of bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_YERB_ASSET (C0)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_RESERVED (50)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the asset portion (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the qualifier name(s) (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Qualifier name(s) (joined with & in ascii)"),(0,a.kt)("td",null,"Var bytes"))),(0,a.kt)("p",null,"On chain example: ",(0,a.kt)("a",{href:"https://yerb.cryptoscope.io/api/getrawtransaction/?txid=477a0b2214475d11e316524b500e29837c6763fec256594c2ca7aa369b15888b&decode=1"},"477a0b2214475d11e316524b500e29837c6763fec256594c2ca7aa369b15888b")," VOUT 2"),(0,a.kt)("h4",null,"Global restriction asset tag script"),(0,a.kt)("p",null,"If the flag is 1, this stops all movement of the restricted asset. A flag of 0 re-enables movement."),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Script portion"),(0,a.kt)("th",null,"Number of bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_YERB_ASSET (C0)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_RESERVED (50)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"OP_RESERVED (50)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the asset portion (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Length of the asset name (OP_PUSH)"),(0,a.kt)("td",null,"1 byte")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Restricted asset name"),(0,a.kt)("td",null,"Var bytes")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Flag (00-01)"),(0,a.kt)("td",null,"1 byte"))),(0,a.kt)("p",null,"On chain example: ",(0,a.kt)("a",{href:"https://yerb.cryptoscope.io/api/getrawtransaction/?txid=2fc0bb7e3a33d12ca08f72add0effc3d059cf63382bebcad96e8923e91c3c537&decode=1"},"2fc0bb7e3a33d12ca08f72add0effc3d059cf63382bebcad96e8923e91c3c537")," VOUT 2"),(0,a.kt)("br",null),(0,a.kt)("p",{id:"chain_parsing_note"},"**Chain parsing note**"),(0,a.kt)("p",null,"Just like the pirate by-laws, the OP_PUSH after OP_YERB_ASSET can be seen more as a suggestion rather than a rule-of-thumb. Currently nodes accept assets based on whether or not the \u2018yerb\u2019 is within 1 or 2 bytes after OP_YERB_ASSET instead of actually reading the OP_PUSH after OP_YERB_ASSET. Because of this, there are some transactions on the chain that have non-standard bytes after OP_YERB_ASSET. (Including lengths that are greater or less than the asset data or bytes that are greater than OP_PUSHDATA4)."),(0,a.kt)("p",null,"If you only want to track \u2018good\u2019 transactions you can ignore these, as the vast majority of transactions follow proper serialization protocols. However, these malformed transactions are in fact \u2018valid\u2019 outpoints (for now) and if you want an all-encompassing tracking of the chain, you will need to check for these edge cases."),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{href:"https://github.com/Electrum-YERB-SIG/electrumx-yerbas/blob/0dbe9496196c529ed2a92c202d6b6bc45e917a73/electrumx/server/block_processor.py#L673"},"here")," for an example of a full chain parsing or ",(0,a.kt)("a",{href:"https://github.com/Electrum-YERB-SIG/electrumx-yerbas/blob/9acf5dd1d9af7ca038a895b674bad39f0d612807/electrumx/server/mempool.py#L320"},"here")," for a best-effort parsing."))}k.isMDXComponent=!0}}]);