"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[4344],{4970:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>m,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),l=a(2004);const o={sidebar_position:2},s="protx",m={unversionedId:"wallet/cli-wallet/commands/evo/protx",id:"wallet/cli-wallet/commands/evo/protx",title:"protx",description:'protx "command" ...',source:"@site/docs/wallet/cli-wallet/commands/evo/protx.mdx",sourceDirName:"wallet/cli-wallet/commands/evo",slug:"/wallet/cli-wallet/commands/evo/protx",permalink:"/docs/wallet/cli-wallet/commands/evo/protx",draft:!1,editUrl:"https://github.com/Raptor3um/docs/tree/develop/docs/wallet/cli-wallet/commands/evo/protx.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"sidebarWallet",previous:{title:"bls",permalink:"/docs/wallet/cli-wallet/commands/evo/bls"},next:{title:"quorum",permalink:"/docs/wallet/cli-wallet/commands/evo/quorum"}},d={},p=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],i={toc:p};function u(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"protx"},"protx"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},'protx "command" ...')),(0,r.kt)("p",null,'Set of commands to execute ProTx related actions.\nTo get help on individual commands, use "help protx command".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Available commands:\n  register          - Create and send ProTx to network\n  register_fund     - Fund, create and send ProTx to network\n  register_prepare  - Create an unsigned ProTx\n  register_submit   - Sign and submit a ProTx\n  quick_setup       - register_prepare, signmessage and register_submit in one command\n  list              - List ProTxs\n  info              - Return information about a ProTx\n  update_service    - Create and send ProUpServTx to network\n  update_registrar  - Create and send ProUpRegTx to network\n  revoke            - Create and send ProUpRevTx to network\n  diff              - Calculate a diff and a proof between two smartnode lists\n")),(0,r.kt)(l.Z,{playing:!0,controls:!0,url:[{src:`${a(7064).Z}`,type:"video/webm"}],mdxType:"ReactPlayer"}),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"command"'),(0,r.kt)("td",{parentName:"tr",align:null},"(string)"),(0,r.kt)("td",{parentName:"tr",align:null},"The command to execute")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Arguments:\n1. "command"        (string, required) The command to execute\n')),(0,r.kt)("h2",{id:"output"},"Output"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Result"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"..."),(0,r.kt)("td",{parentName:"tr",align:null},"..."),(0,r.kt)("td",{parentName:"tr",align:null},"...")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Result:\n{\n  ...\n}\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "bls", "params": [yerbas+net] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}u.isMDXComponent=!0},7064:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/medias/protx-f14a13fdf6a5b661df0cf7b9f726d82c.webm"}}]);