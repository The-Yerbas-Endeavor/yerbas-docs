"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[6015],{1886:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>m,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var n=a(7462),l=(a(7294),a(3905)),r=a(2004);const o={sidebar_position:3},m="quorum",s={unversionedId:"wallet/cli-wallet/commands/evo/quorum",id:"wallet/cli-wallet/commands/evo/quorum",title:"quorum",description:'quorum "command" ...',source:"@site/docs/wallet/cli-wallet/commands/evo/quorum.mdx",sourceDirName:"wallet/cli-wallet/commands/evo",slug:"/wallet/cli-wallet/commands/evo/quorum",permalink:"/docs/wallet/cli-wallet/commands/evo/quorum",draft:!1,editUrl:"https://github.com/Raptor3um/docs/tree/develop/docs/wallet/cli-wallet/commands/evo/quorum.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"sidebarWallet",previous:{title:"protx",permalink:"/docs/wallet/cli-wallet/commands/evo/protx"},next:{title:"generate",permalink:"/docs/wallet/cli-wallet/commands/generating/generate"}},u={},i=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],d={toc:i};function c(e){let{components:t,...o}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"quorum"},"quorum"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},'quorum "command" ...')),(0,l.kt)("p",null,'Set of commands for quorums/LLMQs.\nTo get help on individual commands, use "help quorum command".'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Available commands:\n  list              - List of on-chain quorums\n  info              - Return information about a quorum\n  dkgsimerror       - Simulates DKG errors and malicious behavior\n  dkgstatus         - Return the status of the current DKG process\n  memberof          - Checks which quorums the given smartnode is a member of\n  sign              - Threshold-sign a message\n  hasrecsig         - Test if a valid recovered signature is present\n  getrecsig         - Get a recovered signature\n  isconflicting     - Test if a conflict exists\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"yerbas-cli quorum list")),(0,l.kt)(r.Z,{playing:!0,controls:!0,url:[{src:`${a(5599).Z}`,type:"video/webm"}],mdxType:"ReactPlayer"}),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"command"'),(0,l.kt)("td",{parentName:"tr",align:null},"(string)"),(0,l.kt)("td",{parentName:"tr",align:null},"The command to execute")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'Arguments:\n1. "command"        (string, required) The command to execute\n')),(0,l.kt)("h2",{id:"output"},"Output"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"...")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Result:\n{\n  ...\n}\n")),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "quorum", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}c.isMDXComponent=!0},5599:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/medias/quorum-2c58e15771f7b4e32363fb49fc8df3cf.webm"}}]);