"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[8737],{241:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>c,metadata:()=>o,toc:()=>d});var n=e(7462),l=(e(7294),e(3905)),s=e(2004);const c={sidebar_position:29},r="listaccounts",o={unversionedId:"wallet/cli-wallet/commands/wallet/listaccounts",id:"wallet/cli-wallet/commands/wallet/listaccounts",title:"listaccounts",description:"listaccounts ( minconf addlocked includewatchonly)_",source:"@site/docs/wallet/cli-wallet/commands/wallet/listaccounts.mdx",sourceDirName:"wallet/cli-wallet/commands/wallet",slug:"/wallet/cli-wallet/commands/wallet/listaccounts",permalink:"/docs/wallet/cli-wallet/commands/wallet/listaccounts",draft:!1,editUrl:"https://github.com/The-Yerbas-Endeavor/yerbas-docs/tree/develop/docs/wallet/cli-wallet/commands/wallet/listaccounts.mdx",tags:[],version:"current",sidebarPosition:29,frontMatter:{sidebar_position:29},sidebar:"sidebarWallet",previous:{title:"keypoolrefill",permalink:"/docs/wallet/cli-wallet/commands/wallet/keypoolrefill"},next:{title:"listaddressbalances",permalink:"/docs/wallet/cli-wallet/commands/wallet/listaddressbalances"}},i={},d=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],u={toc:d};function m(t){let{components:a,...c}=t;return(0,l.kt)("wrapper",(0,n.Z)({},u,c,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"listaccounts"},"listaccounts"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"listaccounts ( minconf addlocked include_watchonly)")),(0,l.kt)("p",null,"DEPRECATED. Returns Object that has account names as keys, account balances as values."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# List account balances where there at least 1 confirmation\nyerbas-cli listaccounts\n\n# List account balances including zero confirmation transactions\nyerbas-cli listaccounts 0\n\n# List account balances for 6 or more confirmations\nyerbas-cli listaccounts 6\n")),(0,l.kt)(s.Z,{playing:!0,controls:!0,url:[{src:`${e(1810).Z}`,type:"video/webm"}],mdxType:"ReactPlayer"}),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"minconf"),(0,l.kt)("td",{parentName:"tr",align:null},"(numeric)"),(0,l.kt)("td",{parentName:"tr",align:null},"nly include transactions with at least this many confirmations")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"addlocked"),(0,l.kt)("td",{parentName:"tr",align:null},"(bool)"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to include transactions locked via InstantSend.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"include_watchonly"),(0,l.kt)("td",{parentName:"tr",align:null},"(bool)"),(0,l.kt)("td",{parentName:"tr",align:null},"Include balances in watch-only addresses (see 'importaddress')")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Arguments:\n1. minconf             (numeric, optional, default=1) Only include transactions with at least this many confirmations\n2. addlocked           (bool, optional, default=false) Whether to include transactions locked via InstantSend.\n3. include_watchonly   (bool, optional, default=false) Include balances in watch-only addresses (see 'importaddress')\n")),(0,l.kt)("h2",{id:"output"},"Output"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"account"'),(0,l.kt)("td",{parentName:"tr",align:null},"(numeric)"),(0,l.kt)("td",{parentName:"tr",align:null},"The property name is the account name, and the value is the total balance for the account.")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'Result:\n{                    (json object where keys are account names, and values are numeric balances\n  "account": x.xxx,  (numeric) The property name is the account name, and the value is the total balance for the account.\n  ...\n}\n')),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "listaccounts", "params": [6] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}m.isMDXComponent=!0},1810:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/medias/listaccounts-ec96e975b1ca465e0f8747c805d2cedf.webm"}}]);