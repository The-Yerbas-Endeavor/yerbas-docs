"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[7230],{601:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>h,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var n=a(7462),l=(a(7294),a(3905)),i=a(2004);const r={sidebar_position:10},s="getchaintips",c={unversionedId:"wallet/cli-wallet/commands/blockchain/getchaintips",id:"wallet/cli-wallet/commands/blockchain/getchaintips",title:"getchaintips",description:"getchaintips ( count branchlen )",source:"@site/docs/wallet/cli-wallet/commands/blockchain/getchaintips.mdx",sourceDirName:"wallet/cli-wallet/commands/blockchain",slug:"/wallet/cli-wallet/commands/blockchain/getchaintips",permalink:"/docs/wallet/cli-wallet/commands/blockchain/getchaintips",draft:!1,editUrl:"https://github.com/The-Yerbas-Endeavor/yerbas-docs/tree/develop/docs/wallet/cli-wallet/commands/blockchain/getchaintips.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"sidebarWallet",previous:{title:"getblockstats",permalink:"/docs/wallet/cli-wallet/commands/blockchain/getblockstats"},next:{title:"getchaintxstats",permalink:"/docs/wallet/cli-wallet/commands/blockchain/getchaintxstats"}},h={},o=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],p={toc:o};function m(t){let{components:e,...r}=t;return(0,l.kt)("wrapper",(0,n.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"getchaintips"},"getchaintips"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getchaintips ( count branchlen )")),(0,l.kt)("p",null,"Return information about all known tips in the block tree, including the main chain as well as orphaned branches."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"yerbas-cli getchaintips")),(0,l.kt)(i.Z,{playing:!0,controls:!0,url:[{src:`${a(2908).Z}`,type:"video/webm"}],mdxType:"ReactPlayer"}),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"count"),(0,l.kt)("td",{parentName:"tr",align:null},"(numeric)"),(0,l.kt)("td",{parentName:"tr",align:null},"only show this much of latest tips")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"branchlen"),(0,l.kt)("td",{parentName:"tr",align:null},"(numeric)"),(0,l.kt)("td",{parentName:"tr",align:null},"only show tips that have equal or greater length of branch")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Arguments:\n1. count       (numeric, optional) only show this much of latest tips\n2. branchlen   (numeric, optional) only show tips that have equal or greater length of branch\n")),(0,l.kt)("h2",{id:"output"},"Output"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"height"'),(0,l.kt)("td",{parentName:"tr",align:null},"(numeric)"),(0,l.kt)("td",{parentName:"tr",align:null},"height of the chain tip")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'Result:\n[\n  {\n    "height": xxxx,             (numeric) height of the chain tip\n    "hash": "xxxx",             (string) block hash of the tip\n    "difficulty" : x.xxx,       (numeric) The difficulty\n    "chainwork" : "0000...1f3"  (string) Expected number of hashes required to produce the current chain (in hex)\n    "branchlen": 0              (numeric) zero for main chain\n    "forkpoint": "xxxx",        (string) same as "hash" for the main chain\n    "status": "active"          (string) "active" for the main chain\n  },\n  {\n    "height": xxxx,\n    "hash": "xxxx",\n    "difficulty" : x.xxx,\n    "chainwork" : "0000...1f3"\n    "branchlen": 1              (numeric) length of branch connecting the tip to the main chain\n    "forkpoint": "xxxx",        (string) block hash of the last common block between this tip and the main chain\n    "status": "xxxx"            (string) status of the chain (active, valid-fork, valid-headers, headers-only, invalid)\n  }\n]\n\nPossible values for status:\n1.  "invalid"               This branch contains at least one invalid block\n2.  "headers-only"          Not all blocks for this branch are available, but the headers are valid\n3.  "valid-headers"         All blocks are available for this branch, but they were never fully validated\n4.  "valid-fork"            This branch is not part of the active chain, but is fully validated\n5.  "active"                This is the tip of the active main chain, which is certainly valid\n')),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getchaintips", "params": [] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}m.isMDXComponent=!0},2908:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/medias/getchaintips-0143bc394d9d7c3c51e11c2fa812d89d.webm"}}]);