"use strict";(self.webpackChunkyerbas_docs=self.webpackChunkyerbas_docs||[]).push([[9557],{1155:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var l=a(7462),n=(a(7294),a(3905));a(2004);const r={sidebar_position:23},i="pruneblockchain",c={unversionedId:"wallet/cli-wallet/commands/blockchain/pruneblockchain",id:"wallet/cli-wallet/commands/blockchain/pruneblockchain",title:"pruneblockchain",description:"pruneblockchain",source:"@site/docs/wallet/cli-wallet/commands/blockchain/pruneblockchain.mdx",sourceDirName:"wallet/cli-wallet/commands/blockchain",slug:"/wallet/cli-wallet/commands/blockchain/pruneblockchain",permalink:"/docs/wallet/cli-wallet/commands/blockchain/pruneblockchain",draft:!1,editUrl:"https://github.com/Raptor3um/docs/tree/develop/docs/wallet/cli-wallet/commands/blockchain/pruneblockchain.mdx",tags:[],version:"current",sidebarPosition:23,frontMatter:{sidebar_position:23},sidebar:"sidebarWallet",previous:{title:"preciousblock",permalink:"/docs/wallet/cli-wallet/commands/blockchain/preciousblock"},next:{title:"reconsiderblock",permalink:"/docs/wallet/cli-wallet/commands/blockchain/reconsiderblock"}},o={},s=[{value:"Arguments",id:"arguments",level:2},{value:"Output",id:"output",level:2},{value:"Examples",id:"examples",level:2}],p={toc:s};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"pruneblockchain"},"pruneblockchain"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"pruneblockchain")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"yerbas-cli pruneblockchain 1000")),(0,n.kt)("h2",{id:"arguments"},"Arguments"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Argument"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},'"height"'),(0,n.kt)("td",{parentName:"tr",align:null},"(string)"),(0,n.kt)("td",{parentName:"tr",align:null},"The block height to prune up to. May be set to a discrete height, or a unix timestamp to prune blocks whose block time is at least 2 hours older than the provided timestamp.")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'Arguments:\n1. "height"       (numeric, required) The block height to prune up to. May be set to a discrete height, or a unix timestamp\n                  to prune blocks whose block time is at least 2 hours older than the provided timestamp.\n')),(0,n.kt)("h2",{id:"output"},"Output"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Result"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"n"),(0,n.kt)("td",{parentName:"tr",align:null},"(numeric)"),(0,n.kt)("td",{parentName:"tr",align:null},"Height of the last block pruned.")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"Result:\nn    (numeric) Height of the last block pruned.\n")),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "pruneblockchain", "params": [1000] }\' -H \'content-type: text/plain;\' http://127.0.0.1:9998/\n')))}u.isMDXComponent=!0}}]);