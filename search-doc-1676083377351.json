[{"title":"Asset Fees","type":0,"sectionRef":"#","url":"/docs/assets/asset_fees/","content":"Asset Fees In order to create an asset, a certain amount of YERB must be sent. The first two characters are due to Yerbas's P2PKH address type of 0x3C and the seeming random characters at the end of each address are the public key's checksum. Miner Reward 20%\tSmartnode Reward 80%\tAmount Issue Asset\t4\t16\t20 YERB Reissue Asset\t0.8\t3.2\t4 YERB Issue Sub-Asset\t4\t16\t20 YERB Issue Unique Asset\t0.04\t0.16\t0.2 YERB Issue Message Channel\t0.8\t3.2\t4 YERB Issue Qualifier\t8\t32\t40 YERB Issue Sub-Qualifier\t0.8\t3.2\t4 YERB Issue Restricted Asset\t13.8\t55.2\t69 YERB Add Asset Tag\t0.0008\t0.0032\t0.004 YERB","keywords":""},{"title":"Privacy and Access","type":0,"sectionRef":"#","url":"/docs/assets/privacy/","content":"Privacy and Access A common question about assets is who can see whats on an asset and is there any way to limit viewership of the asset to a recipient. The simple answer is that anyone is able to see the data associated with an asset, however there are protocols (see RIP-10, RIP-11, and RIP-14) that allow for the encryption of IPFS data such that only a recipient of an asset may view it. ","keywords":""},{"title":"Asset transaction structures","type":0,"sectionRef":"#","url":"/docs/assets/create_transactions/","content":"Asset transaction structures Similar to normal Yerbas (and bitcoin) transactions, the amount of an asset from the VINS must equal the amount in the VOUTS (Not including created assets). A YERB fee must be paid for asset-only transactions just like any other. All of the protocols pertaining to transactions are the same. The only thing that changes is the scripts. The order of the VOUTS does matter when creating and reissuing assets. When creating transactions the created ownership asset (if there is one) must be sent to the same address as the created asset. Transfer asset transaction VINS\tVOUTS YERB outpoint(s) for fee Asset outpoint(s) for transfer YERB change address(s) Asset transfer script(s) On chain example: bae95f349f15effe42e75134ee7f4560f53462ddc19c47efdd03f85ef4ab8f40 Creating a main asset transaction Note that when creating assets, you get to freely determine what address to send the assets and ownership asset to.VINS\tVOUTS YERB outpoint(s) for fees Issue asset fee address YERB change address(s) Ownership asset script New asset script On chain example: 8eefce8d264d723b6b8f3cf87bcb400a009d01c2771f94e5cc07af252851aa96 Creating a sub-asset transaction VINS\tVOUTS YERB outpoint(s) for fees Parent ownership asset outpoint Issue sub-asset fee address YERB change address(s) Transfer asset script (For parent ownership asset) Ownership asset script New asset script On chain example: 15127b9ea4c21c323dde1f2dd64b24b12efef2adec43b0b5f2e2377ad4aea369 Creating a unique asset transaction VINS\tVOUTS YERB outpoint(s) for fees Parent ownership asset outpoint Issue unique asset fee address YERB change address(s) Transfer asset script (For parent ownership asset) New asset script On chain example: 12f39ab78609e312e80c86d1ed3f25937120cbdeee6fc81b1068c400eb1c8518 Creating a reissue asset transaction VINS\tVOUTS YERB outpoint(s) for fees Ownership asset outpoint Reissue asset fee address YERB change address(s) Transfer asset script (For ownership asset) Reissue asset script On chain example: 1370040248ba64a2676f125e645a83421adb2859c8c2aacc74017d738309ebda Creating a message channel asset transaction VINS\tVOUTS YERB outpoint(s) for fees Parent ownership asset outpoint Issue message channel asset fee address YERB change address(s) Transfer asset script (For parent ownership asset) New asset script On chain example: d5a13003bff69513b1bb172164ba015afd9bd5afc0a2d654cf10daf1ae470a8c Creating a qualifier asset transaction VINS\tVOUTS YERB outpoint(s) for fees Issue qualifier asset fee address YERB change address(s) New asset script On chain example: 748c7e0996e0a4f599c51635c8fce8ddd6ae0e625be640fa4074f51f2574d7a1 Creating a sub-qualifier asset transaction VINS\tVOUTS YERB outpoint(s) for fees Parent asset outpoint Issue sub-qualifier asset fee address YERB change address(s) Transfer asset script (For parent asset) New asset script On chain example: 748c7e0996e0a4f599c51635c8fce8ddd6ae0e625be640fa4074f51f2574d7a1 Creating a restricted asset transaction VINS\tVOUTS YERB outpoint(s) for fees Issue restricted asset fee address YERB change address(s) Verifier asset tag script Ownership asset script New asset script On chain example: c1e61a69bfb3a02f15c44b530a76fee8d69c8b54b0cc69c0fab81a583e3e5c33 Creating a reissue restricted asset with new qualifiers transaction VINS\tVOUTS YERB outpoint(s) for fees Ownership asset outpoint Reissue asset fee address YERB change address(s) Verifier asset tag script Transfer asset script (For ownership asset) Reissue asset script On chain example: a2b634e160974348647484302501a64bc80a841d4a9ea833498a47e72e987628 (testnet) Creating a null asset script transaction VINS\tVOUTS YERB outpoint(s) for fees Qualifier or restricted ownership asset outpoint Tag fee address YERB change address(s) Transfer asset script (For qualifier or restricted ownership asset) Null asset tag script On chain example: 0332beef9c76cf300b166cf5f56e8acd83788201eae1fc93f05364c28cd882f2 Creating a freeze restricted asset transaction VINS\tVOUTS YERB outpoint(s) for fees Restricted ownership asset outpoint Tag fee address YERB change address(s) Transfer asset script (For restricted ownership asset) Global restriction asset tag script On chain example: cb6f7a7cf7d65d532101a259ef37cebff77ccb1e9f86823910537d6580071668","keywords":""},{"title":"Frequently Asked Questions","type":0,"sectionRef":"#","url":"/docs/faq/","content":"Frequently Asked Questions","keywords":""},{"title":"What is an Asset","type":0,"sectionRef":"#","url":"/docs/assets/whatisanasset/","content":"What is an Asset A Yerbas asset (also less commonly referred to as a token) is an on-chain way of creating, storing, and transfering custom end-user generated information. Assets come with a unique, user-chosen name which can allow for assets to be verified by name only and metadata (which we will look into later). Yerbas users have created assets to make their own 'coin', sell digital art, real estate, gem stones, security tokens, wine futures, and even incorporated it as an in-video game currency.","keywords":""},{"title":"Jargon","type":0,"sectionRef":"#","url":"/docs/assets/jargon/","content":"Jargon The jargon...​ When dealing with assets, it is inevitable that you will eventually come across some strange words denoting strange concepts. Before we move on, you should familiarize yourself with these concepts. Reissuability This is a metadata flag that denotes whether or not an asset can be reissued. Once this flag is set to false it CANNOT be changed back! If you want (or have even a sliver of belief) that you want to change your asset's information in the future, ensure that you asset is reissuable when you create it! Divisibility (Units) Units is a metadata value from zero to eight that denotes how much an asset can be broken up. Specifically this number is how many digits past the decimal this asset can be divided into (a minimum size of 10-d where d is the divisibility). . Units=0 means the tokens are not divisible at all -- whole tokens only can be transferred. Units=2 would be two decimal places like cents on a dollar it would be possible to transfer 0.01. Units=8 is the most divisible and allows tokens to be tranferred in increments of 0.00000001. Reissuing Reissuing an asset is an act that does one or both of the following: Changing the metadata associated with an asset.Creating more of an asset. In order to reissue an asset, the asset must be reissuable and you must have the associated ownership asset. When changing divisibility during a reissuance, the divisibility can only go up. (What would happen if you changed divisibility to zero when users had fractions of an asset?) When increasing divisibility, you cannot use the new lowest asset amount when creating more of the asset; the asset still has the old divisibility amount until the reissue transaction exits the mempool. Ownership Assets When creating certain types of assets, you will also receive an ownership asset. Ownship assets allow a user to reissue an asset and create &quot;child assets&quot; which we will explore in the next section. Ownership assets always come in the form of an exclamation point (!) coming after whatever you named your asset. For instance, say we create an asset named &quot;ASSET&quot;. The associated ownership asset would be &quot;ASSET!&quot;. If an asset A requires the ownership asset of asset B to be created, asset B is said to be asset A's &quot;parent&quot; and asset A is said to be asset B's &quot;child&quot;. Associated Data Or IPFS hash or associated TXID. 32 bytes of user-decided information. Generally this is used with an IPFS hash or a TXID, but it can be anything. Message Broadcasts Any owner of any asset can broadcast a 32 byte message associated with that asset. We will go more in-depth with broadcasts later. Null Asset Tags These are special scripts used by holders of qualifier assets and restricted ownership assets to define behavior between restricted assets and addresses. The relationship between qualifiers, restricted assets, tags, and addresses is fairly complicated. We will go more in-depth further down the page.","keywords":""},{"title":"Getting started","type":0,"sectionRef":"#","url":"/docs/mining/","content":"Getting started","keywords":""},{"title":"Where can I trade assets","type":0,"sectionRef":"#","url":"/docs/assets/trade/","content":"Where can I trade assets info Comming soon","keywords":""},{"title":"Find a Miner","type":0,"sectionRef":"#","url":"/docs/mining/findaminer/","content":"Find a Miner cpuminer-gr-avx2 Here is currently the latest/fastest official miner release for all intel/amd CPU's. Visit » cpuminer-gr A CPU miner for ARM based CPU's. Visit » XMRig XMRig is a high performance, open source, cross platform RandomX, KawPow, CryptoNight and AstroBWT unified CPU/GPU miner and RandomX benchmark. Visit »","keywords":""},{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/mining/introduction/","content":"Introduction In this section you will find relevant information for mining Yerbas. ⛏️ Find A Miner » Support If you encounter any problem and need assistance, join our official Discord to get support. Also please note that this documentation is subject to change as new miners are developed. As soon as a new optimized miner is available we will try to always update the documentation accordingly.","keywords":""},{"title":"Cross-compiling","type":0,"sectionRef":"#","url":"/docs/mining/compiling/crosscompiling/","content":"","keywords":""},{"title":"Video Guide​","type":1,"pageTitle":"Cross-compiling","url":"/docs/mining/compiling/crosscompiling/#video-guide","content":"Video Guide - credit @Revvz  "},{"title":"Cross-compiling Guide​","type":1,"pageTitle":"Cross-compiling","url":"/docs/mining/compiling/crosscompiling/#cross-compiling-guide","content":"note This guide will show you how to automatically cross compile EXE files for the Yerbas CPU miner through a tool that utilizes Ubuntu and WSL. The full offline guide as well as files needed for this guide are here: Cross Compile Files "},{"title":"Requirements​","type":1,"pageTitle":"Cross-compiling","url":"/docs/mining/compiling/crosscompiling/#requirements","content":"info This guide assumes that you have Ubuntu 20.04 installed and running under WSL 2. If you don't have WSL 2 and/or Ubuntu 20.04 installed, please install it. Enough computing resources and available instruction sets to compile the CPU miner (varies by system)PowerShell Script Execution Policy must be set to Unrestricted. Do it using the following (must run PowerShell as Administrator): Set-ExecutionPolicy unrestricted. To revert this change after you finished cross compiling the CPU miner, run Set-ExecutionPolicy restricted  "},{"title":"Installation​","type":1,"pageTitle":"Cross-compiling","url":"/docs/mining/compiling/crosscompiling/#installation","content":"note Before installing dependencies, it is highly recommended to update the package list and upgrade Ubuntu. This can be done using the following: sudo apt update &amp;&amp; sudo apt upgrade  Due to PowerShell not having access to the sudo command that is present in Ubuntu 20.04, you will have to install some dependencies using apt. This can simply be done using the following: sudo apt install mingw-w64 libz-mingw-w64-dev build-essential automake libssl-dev libcurl4-openssl-dev libjansson-dev libgmp-dev zlib1g-dev git unzip  "},{"title":"Compilation​","type":1,"pageTitle":"Cross-compiling","url":"/docs/mining/compiling/crosscompiling/#compilation","content":"Open cross-compile-yerb-miner.ps1 by right clicking on the file and selecting Run With PowerShell. A GUI will pop up. This GUI gives you access to everything you need to cross compile the Yerbas CPU miner (based on cpuminer-opt)   Select the output directory of the miner EXEs and the extra libraries by cliking on Click To Set. A File Explorer window will pop up asking you to pick a folder.   After the ouput directory has been set, you may click Compile. This may take a while, so please pe patient. The whole process is automated, so when the compilation is complete, a popup window will show letting you know that compilation is complete. The CPU miner EXEs will be found in the output directory you choose, assuming that is was accessible after compilation. The GUI will freeze, but you will be able to see the step it's on (Indicated by its Status) and the output of the process in the PowerShell window that opened the GUI. If you encounter any errors, please let us know!  "},{"title":"Addtional Cleanup​","type":1,"pageTitle":"Cross-compiling","url":"/docs/mining/compiling/crosscompiling/#addtional-cleanup","content":"note While the Cross Compiler does clean up the things that it can, such as the library files that are no longer needed in WSL, there are other things that require manual intervention due to file and command permissions. The following steps are optional, but highly recommended. Launch Ubuntu 20.04To remove the unnecessary source repository, run sudo rm -r cpuminer-gr-avx2. It will ask you for your user password. Enter that when prompted.To remove the packages that were used during the build (and are no longer necessary), run: sudo apt remove mingw-w64 libz-mingw-w64-dev build-essential automake libssl-dev libcurl4-openssl-dev libjansson-dev libgmp-dev zlib1g-dev git unzip sudo apt autoremove  "},{"title":"Accessing CPU Miner Binaries​","type":1,"pageTitle":"Cross-compiling","url":"/docs/mining/compiling/crosscompiling/#accessing-cpu-miner-binaries","content":"The compiled EXEs (along with the required DLLs and a README) will be found in the output directory that you choose in the GUI before clicking the Compile button.  Happy Mining! 🎉 "},{"title":"Creating Assets","type":0,"sectionRef":"#","url":"/docs/assets/creating/","content":"Creating Assets When creating an asset, you need to know what type of asset you want, the name of the asset, the amount of an asset, how much it costs to create an asset, and the metadata associated with an asset. Assets cannot be differentiated against one another except through their names. This means that all asset names must be unique; an asset creation will not be accepted by the chain if the name is not unique. Asset names are encoded via the ascii scheme. This means that asset names can currently only be in the latin alphabet. The cost of creating an asset can also be see more of as cost to &quot;reserve the name&quot;; this cost is static no matter how much of an asset you create (However, do note that it costs 100 YERB to reissue an asset). When creating a child asset the parent asset and parent ownership asset have no control over it. If you wish to have more control over assets, see restricted assets To put this information in a more readable format, all of the upcoming asset types will contain the following chart: Metadata\tInformation Asset Name\tName specifications Ownership Asset\tOwnership specifications Prerequisites\tPrerequisite specifications Asset Amount\tAmount specifications Cost\tCost specifications Reissuability\tReissuability specifications Divisibility\tDivisibility specifications Associated Data\tAssociated data specifications This table denotes the fields avaliable and their limitations. For instance, an ownership asset table looks like this: Metadata\tInformation Asset Name\tBase asset name + '!' Ownership Asset\tNo associated ownership asset Prerequisites\tCreated with another asset Asset Amount\tThere can only be 1 of some ownership asset Cost\tComes with the base asset Reissuability\tCannot be reissued Divisibility\tHas 0 divisibility Associated Data\tNo data can be associated","keywords":""},{"title":"Basic Compiling","type":0,"sectionRef":"#","url":"/docs/mining/compiling/basiccompilation/","content":"","keywords":""},{"title":"Important Notes​","type":1,"pageTitle":"Basic Compiling","url":"/docs/mining/compiling/basiccompilation/#important-notes","content":"Some important notes before we go into compiling on Windows:MMSR mod is supported on Windows and Linux based OS systems.Huge Pages are supported on Windows, WSL based OS and native Linux OS systems.To enable MSR mod you have to run the miner as root/administrator.To enable Huge Pages on WSL and Native Linux systems just execute the miner with root privilege's.To enable Huge Pages on Windows follow this guide:  https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/enable-the-lock-pages-in-memory-option-windows?view=sql-server-ver15  note This tutorial is geared for cpuminer-gr-avx2 miner - but may apply to other miners as well. Here are some advantages / reasonings why you should consider compiling your own miner using WSL: You build the code from source and not using a prebuilt binary that has potential risk of having a virus. (The executable files in the same repository are safe)The miner you build will be built for your CPU's instruction set that it supports and should be faster.Building your own miner using WSL will save you the issues with anti viruses flagging miners and you don't need to do folder exclusions. "},{"title":"Compiling using WSL / Ubuntu 20.04 LTS​","type":1,"pageTitle":"Basic Compiling","url":"/docs/mining/compiling/basiccompilation/#compiling-using-wsl--ubuntu-2004-lts","content":"note Note that Virtualization must be enabled in your BIOS settings. Detailed info for WSL setup: https://docs.microsoft.com/en-us/windows/wsl/install-win10#manual-installation-steps Update for WSL kernel package: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi info You will need to set WSL Version 2 as the default. #This enables WSL. dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart #This enables Virtual Machine Platform dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart #Restart Your System. #You will need to download WSL2 kernel update package from the link mentioned above. #Set WSL 2 as the default version (note that windows 10 is required for this to work) wsl --set-default-version 2  Open Microsoft Store and download and install Ubuntu 20.04 (you can chose other Linux based OS) You should have a CLI interface where you can set up a user name and password for your ubuntu instance. Update your Ubuntu and install the required tools to build your own binary: #Update and Upgrade ubuntu: sudo apt-get update sudo apt-get upgrade #Download build essentials: sudo apt-get install build-essential libssl-dev libcurl4-openssl-dev libjansson-dev libgmp-dev automake zlib1g-dev git #Clone the repository: git clone https://github.com/WyvernTKC/cpuminer-gr-avx2.git #Enter the folder cd cpuminer-gr-avx2 #run the autogen script ./autogen.sh #Configure to build for native CFLAGS=&quot;-O3 -march=native -Wall -mtune=native&quot; ./configure --with-curl #Build make # Now if everything went fine, you should take a look in the folder with &quot;ls&quot; command and you should have a &quot;cpuminer&quot; executable. # To make life easier you should create a start script: nano start.sh # Copy this and change pool address and your wallet address. ./cpuminer -a gr -o stratum+tcp://pool_address_goes_here -u your_wallet_address_goes_here.Worker_name -p x #CTRL+X to Save #Y to approve #Enter to write and close #give execution rights to your script: chmod +x start.sh #execute your script and happy mining: sudo ./start.sh  info Running the miner on the available platform with --help will give you the available parameters/options that you can use. Additional information can be found about the usage examples in the Readme files that can be found next to the source code in the above mentioned repositories. "},{"title":"Basic Usage After Compiling​","type":1,"pageTitle":"Basic Compiling","url":"/docs/mining/compiling/basiccompilation/#basic-usage-after-compiling","content":"If you download the pre-built miner binaries you will see that there are multiple executable files. Each executable file can mine the same algorithm with different instruction set.You can check your processor manufacturer page to see what instruction set is supported by your CPU and use that executable for mining.Test all the executable to see which miner grants you the highest hash rate (note that takes a few minutes until your hash rate stabilizes and hash rate may fluctuate). Basic usage examples: # This is the most basic setup that will get your miner up in running. # Windows .\\cpuminer-zen.exe -a gr -o stratum+tcp://pool_address_goes_here -u your_wallet_address_goes_here.Worker_name # Linux ./cpuminer -a gr -o stratum+tcp://pool_address_goes_here -u your_wallet_address_goes_here.Worker_name # -a Specifies the algorithm. # -o specifies the pool connection. # -u specifies your wallet. # Run the binary with --help for more information.  Benchmark &amp; Tuning # This first part shows how to use the benchmark # Ubuntu: sudo ./cpuminer_name -a gr --benchmark # Wait 30 seconds or more to get an avg result / thread (use CTRL+C to cancel) # Windows: # On windows start a command line with administrator rights and navigate to the folder with your executable files. cpuminer_name -a gr --benchmark # Wait 30 seconds or more to get an avg result / thread (use CTRL+C to cancel) # This second part shows how to use the tuning tool. (note that you should be using tuning method together with --benchmark instead of tuning the miner during mining on a pool to avoid fluctuation in hash rate and get more accurate results.) # Note that it should take about 30 minutes to finish the tuning process. (if using the --benchmark it will stop automatically) # Ubuntu: ./cpuminer_name -a gr --benchmark --tune # Windows: # On windows start a command line with administrator rights and navigate to the folder with your executable files ./cpuminer-INST -o stratum+tcp://pool_address_goes_here -u your_wallet_address_goes_here.Worker_name --tune-config tune_config cpuminer_name -a gr --benchmark --tune cpuminer_name -a gr -o stratum+tcp://pool_address_goes_here -u your_wallet_address_goes_here.Worker_name --tune-config tune_config  "},{"title":"About Assets","type":0,"sectionRef":"#","url":"/docs/assets/","content":"","keywords":""},{"title":"","type":1,"pageTitle":"About Assets","url":"/docs/assets/##","content":"This webpage will attempt to cover all aspects of Yerbas assets from what they are to their on-chain encodings. As you read on, this document will become increasingly technical. "},{"title":"All About Assets","type":1,"pageTitle":"About Assets","url":"/docs/assets/##","content":"This webpage will attempt to cover all aspects of Yerbas assets from what they are to their on-chain encodings. As you read on, this document will become increasingly technical. "},{"title":"Table of Contents","type":1,"pageTitle":"About Assets","url":"/docs/assets/##","content":"What is an asset?Where can I trade assets?Privacy and AccessThe JargonCreating Assets The Big ThreeBroadcasts and MessagesQualifiers, Restricted Assets, and More What is on the chain?Asset FeesStandard Asset Scripts A note on chain parsing Building Asset Transactions "},{"title":"Solo Mining","type":0,"sectionRef":"#","url":"/docs/mining/solomining/","content":"Solo Mining note Yerbas network difficulty makes it hard to solo mine a block with the wallet. If you want dependable and regular payouts it is recommended to use pool mining. Download the core wallet: https://github.com/the-yerbas-endeavor/yerbas/releases Open and sync Once done go to Help &gt; Debug Window &gt; Console and type setgenerate true 2 The number is the amount of cores (not threads) you want it to use. It will start mining and you will know when you hit a block as your balance will change.","keywords":""},{"title":"Asset Scripts","type":0,"sectionRef":"#","url":"/docs/assets/scripts/","content":"Asset Scripts Here is where the technical protocol-ly stuff starts. The following sections assume that you are familiar with script andtransactions. We do not endorse any of the assets shown in examples. There are 4 types of asset transfer scripts and 3 types of asset tag scripts. All asset scripts must be in a VOUT with a YERB value of 0. If you are looking to use this as a guide to parse the yerbas chain, please see a note at the end of this section. New asset script New asset scripts are used to transfer an amount of an asset into and address during an asset create as well as associate metadata with the created asset. Script portion\tNumber of bytes Standard vout script (P2PKH)\tVar bytes OP_YERB_ASSET (C0)\t1 byte Length of the asset data (OP_PUSH) (Not including OP_DROP)\t1 or 2 bytes 'yerb' in ascii (72766E)\t3 bytes Asset script type 'q' (71)\t1 byte Length of asset name (OP_PUSH)\t1 byte Asset name in ascii\tVar bytes Amount in sats (little endian)\t8 bytes Divisions (00-08)\t1 byte Reissuability (00-01)\t1 byte Has associated data (00-01)\t1 byte Associated data (Optional; only if previous byte is 01)\t0x12 and 0x20 if IPFS data in which case API will encode/decode as IPFS content identifier 32 bytes of user defined data OP_DROP (75)\t1 byte On chain example: 8eefce8d264d723b6b8f3cf87bcb400a009d01c2771f94e5cc07af252851aa96 VOUT 3 Ownership asset script Ownership asset scripts are used in tandem with a new asset script if the new asset has an associated ownership asset. Notice how ownership assets have no extra information, not even an amount. Script portion\tNumber of bytes Standard vout script (P2PKH)\tVar bytes OP_YERB_ASSET (C0)\t1 byte Length of the asset data (OP_PUSH) (Not including OP_DROP)\t1 or 2 bytes 'yerb' in ascii (72766E)\t3 bytes Asset script type 'o' (6F)\t1 byte Length of asset name (OP_PUSH)\t1 byte Asset name in ascii\tVar bytes OP_DROP (75)\t1 byte On chain example: 8eefce8d264d723b6b8f3cf87bcb400a009d01c2771f94e5cc07af252851aa96 VOUT 2 Reissue asset script Reissue asset scripts are used to change an asset's metadata. If the amount is not zero, that amount of the asset is created for the pubkey in the standard script. Script portion\tNumber of bytes Standard vout script (P2PKH)\tVar bytes OP_YERB_ASSET (C0)\t1 byte Length of the asset data (OP_PUSH) (Not including OP_DROP)\t1 or 2 bytes 'yerb' in ascii (72766E)\t3 bytes Asset script type 'r' (72)\t1 byte Length of asset name (OP_PUSH)\t1 byte Asset name in ascii\tVar bytes Amount in sats (little endian) (Amount to add into circulation)\t8 bytes Divisions (00-08) (FF for unchanged; can only increase)\t1 byte Reissuability (00-01)\t1 byte Associated data (Optional; only if associating new data)\t1 type byte, 1 length byte, 32 bytes user data OP_DROP (75)\t1 byte On chain example: b9d3ba355acbf58e44e893dccbcad06a10af88727adc340eeacd10d11b026f52 VOUT 3 Transfer asset script Transfer asset scripts are used to transfer an amount of an asset to another address. If transfering an ownership asset, use 100,000,000 (00:E1:F5:05:00:00:00:00) for the sat value. Script portion\tNumber of bytes Standard vout script (P2PKH)\tVar bytes OP_YERB_ASSET (C0)\t1 byte Length of the asset data (OP_PUSH) (Not including OP_DROP)\t1 or 2 bytes 'yerb' in ascii (72766E)\t3 bytes Asset script type 't' (74)\t1 byte Length of asset name (OP_PUSH)\t1 byte Asset name in ascii\tVar bytes Amount in sats (little endian)\t8 bytes Associated data (Optional; only if a broadcast)\t1 type byte, 1 length byte, 32 bytes user data OP_DROP (75)\t1 byte On chain example: bae95f349f15effe42e75134ee7f4560f53462ddc19c47efdd03f85ef4ab8f40 VOUT 0 Null asset tag script Dictates if an address is qualified for a restricted asset. If the asset is a qualifier, a flag of 1 denotes a qualification. A flag of 0 denotes a revocation. If the asset is a restricted asset, a flag of 1 denotes blacklisting the address. A flag of 0 denotes unblacklisting the address. Script portion\tNumber of bytes OP_YERB_ASSET (C0)\t1 byte Length of the pubkey h160 (OP_PUSH)\t1 byte Pubkey h160\t20 bytes Length of the asset portion (OP_PUSH)\t1 byte Length of the asset name (OP_PUSH)\t1 byte Qualifier or restricted asset name\tVar bytes Flag (00-01)\t1 byte On chain example: 4ea3369ef6fb57fc26e176ad5903d4684a8c64f641aa0e1f02e5c7428609e060 VOUT 1 Verifier asset tag script This script must be sent with a new asset script or a reissue asset script for a restricted asset. It associates qualifiers with the restricted asset. An asset name portion of 'true' in ascii is the default to denote no associated qualifiers. Script portion\tNumber of bytes OP_YERB_ASSET (C0)\t1 byte OP_RESERVED (50)\t1 byte Length of the asset portion (OP_PUSH)\t1 byte Length of the qualifier name(s) (OP_PUSH)\t1 byte Qualifier name(s) (joined with &amp; in ascii)\tVar bytes On chain example: 477a0b2214475d11e316524b500e29837c6763fec256594c2ca7aa369b15888b VOUT 2 Global restriction asset tag script If the flag is 1, this stops all movement of the restricted asset. A flag of 0 re-enables movement. Script portion\tNumber of bytes OP_YERB_ASSET (C0)\t1 byte OP_RESERVED (50)\t1 byte OP_RESERVED (50)\t1 byte Length of the asset portion (OP_PUSH)\t1 byte Length of the asset name (OP_PUSH)\t1 byte Restricted asset name\tVar bytes Flag (00-01)\t1 byte On chain example: 2fc0bb7e3a33d12ca08f72add0effc3d059cf63382bebcad96e8923e91c3c537 VOUT 2 **Chain parsing note** Just like the pirate by-laws, the OP_PUSH after OP_YERB_ASSET can be seen more as a suggestion rather than a rule-of-thumb. Currently nodes accept assets based on whether or not the ‘yerb’ is within 1 or 2 bytes after OP_YERB_ASSET instead of actually reading the OP_PUSH after OP_YERB_ASSET. Because of this, there are some transactions on the chain that have non-standard bytes after OP_YERB_ASSET. (Including lengths that are greater or less than the asset data or bytes that are greater than OP_PUSHDATA4). If you only want to track ‘good’ transactions you can ignore these, as the vast majority of transactions follow proper serialization protocols. However, these malformed transactions are in fact ‘valid’ outpoints (for now) and if you want an all-encompassing tracking of the chain, you will need to check for these edge cases. See here for an example of a full chain parsing or here for a best-effort parsing.","keywords":""},{"title":"Smartnodes","type":0,"sectionRef":"#","url":"/docs/smartnodes/","content":"Smartnodes Smartnodes are responsible for storing and executing smart contracts. They function through the use of nodes handle contracts rather than adding the smart contracts directly to blocks. Using Smartnodes for storing and executing smartnodes greatly reduces the chances of scaling issues, like Ethereum has been experiencing. Yerbas's Smartnodes benefit from a few key optimizations: Improved scalingStronger securityBetter resistance against 51% attacksLarger smart contractsWider variety of languages used to create smart contracts","keywords":""},{"title":"Mining Links","type":0,"sectionRef":"#","url":"/docs/mining/mininglinks/","content":"Mining Links GhostRider algorithm mining was implemented first in the open source cpuminer-opt mining software. Original BitcoinTalk thread: https://bitcointalk.org/index.php?topic=1326803.0 (This is a locked thread) Current BitcoinTalk thread: https://bitcointalk.org/index.php?topic=5226770.0 (This is the forum thread that is active) Since the launch of the first miner we had several forks and multiple people developing miners for GR algorithm.","keywords":""},{"title":"Broadcasts and Message Channels","type":0,"sectionRef":"#","url":"/docs/assets/creating/broadcasts_and_messages/","content":"Broadcasts and Message Channels Our next asset type is a message channel, and we cannot talk about message channels without first talking about broadcasts, and we can't talk about broadcasts without talking about messages. It is important to note that asset broadcasts and message channels are rarely used and their use-case has not been solidified by the community. Asset Messages Any user can send an asset message on any asset that they own. An asset message is 34 bytes long and is seen as directed to the asset recipient. Asset Broadcasts In an asset transaction, if the sending address is the same as the receiving address, this is seen as a broadcast. Only message channels can broadcast messages. It is important to note that the user interface for message broadcasts do not seem to be fully implemented in the core wallet yet. Message Channels A message channel requires a main or sub-asset's ownership asset. A message channel is an asset specifically made for broadcasting messages. Their purpose is to add more control to whoever might be subscribed to the message channel's parent. Metadata\tInformation Asset Name The message channel portion of the name must at most 12 characters. It can contain letters, numbers, and '_'. '_' cannot be at the beginning or end of the message channel portion and two or more '_''s cannot be next to each other. The message channel asset name takes the form [main or sub asset name]~[message channel portion]. This full name must be 30 or less characters. Ownership Asset\tMessage channel assets have no associated ownership asset Prerequisites\tA main asset or sub-asset's ownership asset Asset Amount\t1 of this asset can be created Cost\t4 YERB Reissuability\tThis asset cannot be reissued Divisibility\tDivisibility is 0 Associated Data\tThis asset cannot have associated data","keywords":""},{"title":"PoSe ban","type":0,"sectionRef":"#","url":"/docs/smartnodes/troubleshooting/pose-ban/","content":"PoSe ban","keywords":""},{"title":"What is stored on the chain","type":0,"sectionRef":"#","url":"/docs/assets/what_is_on_chain/","content":"What is stored on the chain All asset creations, reissues, transfers, and tags are special scripts and are part of normal transactions. When an asset is created, nodes store the asset name, reissuability, divisions, associated data, and respective VOUT information in a database. This is how nodes easily access metadata. During a reissuance, the ownership asset must be sent to prove ownership on-chain and the node will save the new metadata. These asset creation and reissuance transactions are the only places where the metadata is stored on the chain. This means that, say, a 3rd party wallet sends you asset information. Whatever protocol they are using will need to send the client the VOUT of asset creations or reissues so that the client may verify the integrity of the metadata. The same is true for asset tags. They only exist on the chain in one singular transaction. The node then keeps track of where that transaction is in a database for verification later. You may have been surprised earlier when learning that the associated data of an asset is only 32 bytes. You are correct in believing that is not a lot of information. This is an intentional decision to keep clutter off of the chain. Typically, users will use this field for an IPFS hash allowing for websites and files to be stored and hosted off chain whether it be on personal hardware or cloud file management hosts. IPFS hashs are unique (literally a SHA256 hash of the data) and therefore a user can be confident that an IPFS hash on an asset will always point to the correct data.","keywords":""},{"title":"Qualifiers, restricted assets, addresses, and tags","type":0,"sectionRef":"#","url":"/docs/assets/creating/qualifiers_restricted_tags/","content":"Qualifiers, restricted assets, addresses, and tags This is where things really start to get complicated. First you should know that qualifier assets, or simply qualifiers, dictate what addresses can hold a restricted asset by &quot;qualifying&quot; them with a null asset tag. A restricted asset can be associated with 0 or more qualifiers. The main factor in deciding whether or not an address can recieve a restricted asset is whether that address has been qualifier by all of the qualifiers associated with the said restricted asset. This means you DO NOT WANT TO SEND QUALIFIERS to addresses you do not trust! Qualifiers are an administrative asset much like ownership assets. *phew* Lets start out with some definitions. Asset Tags An asset tag determines whether or not an address is able to receive a restricted asset. It costs 0.1 YERB to create an asset tag. There are three types of asset tags: Null Asset Tag A null asset tag has two sub-types: Qualifying Null Asset Tag: This type of null asset tag can be created with a qualifier asset. It qualifies or unqualifies some address.Restricted Null Asset Tag: This type of null asset tag can be created with a restricted asset's ownership asset. It can add or remove an address from being blacklisted from receiving this restricted asset no matter the address's qualifications. Verifier Asset Tag A verifier asset tag can be created with a restricted asset's ownership asset. It associates this restricted asset with one or more qualifiers. (This means that to recieve this restricted asset, an address must be qualified by all of the qualifiers defined in this tag). Restricted Asset Tag Also known as a global freeze tag, a restricted asset tag can be created with a restricted asset's ownership asset. This tag can freeze or unfreeze all movements across all addresses of this restricted asset. Qualifier Asset Qualifier assets are administrative assets (in the same group as ownership assets) used to determine what addresses can receive restricted assets. Simply owning a qualifier asset gives a user this power. Metadata\tInformation Asset Name The qualifier portion of the name has the same naming rules as a main asset. The qualifier asset name takes the form #[qualifier portion]. Note how this is differentiated from unique assets with the fact that a qualifier has no parent. This full name must be less than 30 characters. Ownership Asset\tQualifier assets have no associated ownership asset Prerequisites\tNone Asset Amount\t1 - 10 of this asset can be created Cost\t40 YERB Reissuability\tThis asset cannot be reissued Divisibility\tDivisibility is 0 Associated Data\tThis asset can have associated data. Note: because qualifiers cannot be reissued, if you choose to have associated data, it cannot be changed in the future. Sub-qualifier Asset Currently, sub-qualifiers have exactly the same powers as their parents. Sub-qualifiers use a parent qualifier asset in lieu of a parent ownership asset in its creation. Metadata\tInformation Asset Name The sub-qualifier portion of the name has the same naming rules as a sub-asset. The sub-qualifier asset name takes the form #[qualifier portion]/#[sub-qualifier]. Note how this is differentiated from unique assets with the fact the the intermediary characters are '/#' This full name must be less than 30 characters. Ownership Asset\tQualifier assets have no associated ownership asset Prerequisites\tA qualifier Asset Amount\t1 - 10 of this asset can be created Cost\t4 YERB Reissuability\tThis asset cannot be reissued Divisibility\tDivisibility is 0 Associated Data\tThis asset can have associated data. Note: because qualifiers cannot be reissued, if you choose to have associated data, it cannot be changed in the future. Restricted Asset Restricted assets are comparable to main assets except for the fact that they are, well, restricted. Currently restricted assets can only be associated with main qualifiers (not sub-qualifiers). If a restricted asset is not associated with any qualifier, it cannot be transfered. Restricted assets are also somewhat unique in the fact that if they can be reissued, they are able to change what qualifiers they are associated with. Metadata\tInformation Asset Name The restricted portion of the name has the same naming rules as a main asset. The restricted asset name takes the form $[restricted protion]. This full name must be less than 30 characters. Ownership Asset\tRestricted assets have an associated ownership asset Prerequisites\tA qualifier Asset Amount\t1 - 21,000,000,000 of this asset can be created Cost\t69 YERB Reissuability\tThis asset can be reissued Divisibility (Units)\tDivisibility (Units) can be 0 - 8 Associated Data\tThis asset can have associated data.","keywords":""},{"title":"maintenance","type":0,"sectionRef":"#","url":"/docs/smartnodes/maintenance/","content":"","keywords":""},{"title":"PoSe Bans​","type":1,"pageTitle":"maintenance","url":"/docs/smartnodes/maintenance/#pose-bans","content":""},{"title":"Diagnosing​","type":1,"pageTitle":"maintenance","url":"/docs/smartnodes/maintenance/#diagnosing","content":"info If there is a problem with your Smartnode and it is not available to properly offer its services to the network it will become &quot;PoSe banned&quot; and will not receive any further payments until it is fixed. Here are some of the most common reasons for receiving a PoSe ban: yerbasd is unavailable or not functioning correctly (hung).Resource shortages (cpu, ram).Unstable network or outage. You can check if your Smartnode is banned directly in the QT wallet in the Smartnodes tab, check the &quot;My Smartnodes Only&quot;. Or by going to the Yerbas explorer &gt; Smartnodes Tab &gt; search for your Smartnode IP address. "},{"title":"Resolving​","type":1,"pageTitle":"maintenance","url":"/docs/smartnodes/maintenance/#resolving","content":"Check if yerbasd is responsive; ./yerbas-cli getblockchaininfo  If the daemon responds quickly and &quot;blocks&quot; matches the explorer block height the daemon is fine. Quite possibly the PoSe ban was caused by a temporary issue such as resource issue, or network issues. Your PoSe ban should automatically reduce until 0 and be removed. If the command from step 1 is very slow to respond or does not respond, yerbasd is in a hung state and needs to be killed. Kill it with: ps aux | grep -i yerbasd | awk '{print $2}' | xargs sudo kill -15  If you see &quot;No such process&quot; kill was successful, if you see a process listed you will need to issue the command again to change -15 to -9 which is a harsher termination. Restart yerbasd: ./yerbasd  Wait for it to fully sync (same block height as block explorer). For fun you can watch it sync with: tail -f ~/.yerbascore/debug.log # Ctrl + C to exit tail.  An alternative way to check and see when yerbasd is done syncing is to use the &quot;top&quot; command. While syncing yerbasd will consistently use nearly 100% of a core. When that use drops substantially it is done syncing. Depending on the nodes PoSe score it can take anywhere from 2 to 6 hours for PoSe ban to be lifted. To speed that process you can issue a &quot;protx update_service&quot; command and the ban will be lifted in 1-2 blocks. Here is an example of a &quot;protx update_service&quot; command, this is issued in your local wallet &gt; debug console. protx update_service &quot;7d62ce3bcf71825te84y5ca4b93a53583a8f1c9c70989e351c0f470088729a83&quot; &quot;your.smartnode.ip:10226&quot; &quot;3808471d6e52fe3b683474075cdf50192babe3b38203187ec0cg18fg54e439a4&quot;  First string in &quot;&quot; is the proTxHash. You can get this by right clicking your Smartnode in the QT wallet Smartnode list &gt; Copy proTxHash. Second is self explanatory :) Third is the Smartnodes BLS private key. This is stored on your Smartnode in ~/.yerbascore/yerbas.conf and you can retrieve it easily by doing: cat ~/.yerbascore/yerbas.conf | grep bls  After firing the protx update_service command you should see status change on your Smartnode list from PoSe_banned to ENABLED in anywhere from 1 minute to 6 minutes. Resolving resource related PoSe ban issues. Make sure yerbasd always has access to at least 2 full CPU cores. We strongly recommend against mining on your Smartnodes. Mining on them will endup in performance issues and PoSe bans. If you find yerbasd is sometimes not running this is often due to it being killed by OOM (Out Of Memory Killer) this is a process of the Linux kernel that will kill certain processes when the system is critically low on memory. Search your system logs to help diagnose the issue, as an example on ubuntu 18: grep -i 'killed process' /var/log/syslog  note As an example, if you have a VPS with 4 cores and want to also use it to mine, make sure the miner only uses max 3 cores. (Replace with) We strongly recommend against mining on your Smartnodes. Mining on them will endup in performance issues and PoSe bans. "},{"title":"Monitoring Your Smartnode​","type":1,"pageTitle":"maintenance","url":"/docs/smartnodes/maintenance/#monitoring-your-smartnode","content":"Uptime is crucial and to make sure your Smartnode is online you should monitor it, there are a few ways to do this: If you used dk808 script to setup your Smartnode it would have asked you if you wanted to monitor your Smartnode. This check script checks your Smartnode status on our block explorer every hour (VIA cronjob). If it finds that your node has been PoSe banned it will kill yerbasd and restart it. External monitoring: This uses an external monitor such as https://uptimerobot.com to check if your Smartnode port is open every 5 minutes. If port is closed you can receive notification to any device and or by email. It is easy to setup and free. Default Smartnode port is 10226. "},{"title":"Increase Smartnode Collateral​","type":1,"pageTitle":"maintenance","url":"/docs/smartnodes/maintenance/#increase-smartnode-collateral","content":"As the Yerbas network matures Smartnode collateral ramps up and you will need to recreate your Smartnode in order to increase the collateral amount. Here are the steps needed: In your local wallet that holds the Smartnode collateral go to Send &gt; Inputs. If you do not see the &quot;Inputs&quot; button you must enable coin control. Settings &gt; Options &gt; Wallet &gt; Enable coin control features. You will see there your Smartnode collateral and it will be marked with a lock. We need to unlock it, so mark the box for that input and click the &quot;toggle lock state&quot; button to unlock it. That input is now spendable and your Smartnode is deactivated. Create a new collateral receiving address, make sure to label it well.Send the full collateral amount in one transaction to the new collateral receiving address.Wait until the transaction has 2 confirmations. "},{"title":"Build the protx quick_setup command​","type":1,"pageTitle":"maintenance","url":"/docs/smartnodes/maintenance/#build-the-protx-quick_setup-command","content":"note By default the protx quick_setup command generates a Smartnode config file in the same directory as the .exe files you use to open the wallet. As an example, if you are running yerbas-qt.exe from C:\\Program Files\\ you will need to open it with Administrator privilege's (right click &gt; Run as Administrator). Otherwise it will fail to create the Smartnode configuration file. You need the following information: Smartnode Server IP.Port (default = 10226)Collateral fee address. (see below note)Collateral transaction ID.Collateral index (this is listed when doing “smartnode outputs usually it will be 1) note Collateral fee address can be any address in your wallet that has funds to pay for the transaction, the transaction fee is small as an example I just made one transaction and the cost was 0.00000525 YERB. To see which of your addresses have funds use &quot;listaddressbalances” in debug console or yerbas-cli. protx quick_setup command example: ./yerbas-cli protx quick_setup &quot;c4bbcde9771668fa640c263d4b964f688b0f039f7b684e715d92e4012369fea6&quot; &quot;1&quot; &quot;209.151.154.120:10226&quot; &quot;RFbWv94ZfueciwVVpHLMdqFayaXAS4sBxP&quot;  So structure is: transaction ID | collateral index | smartnode IP | port | collateral fee address Using QT &gt; Debug Console just remove &quot;./yerbas-cli&quot; from the above command. Fire the command and if it is successful you will see a bunch of output, the command has created the needed yerbas.conf file for your Smartnode. Check the last line of the output as it will tell you the location of the .conf file, notice that it is named differently for example: RMsneH79j9gioE1jFsuxTFUxaZ1JSp53SN_yerbas.conf That is your YERB collateral address that you created at the start of this guide and is so the .conf file is easy to identify and link to corresponding smartnode. As this is a collateral upgrade all we need from the generated .conf file is the smartnodeblsprivkey. On your Smartnode VPS / server: Stop daemon: ./yerbas-cli stop  Edit yerbas.conf: nano ~/.yerbascore/yerbas.conf  Swap out the old bls private key with the new, exit, and start yerbasd: ./yerbasd  Give it 5 minutes to catch up on any missed blocks. Check smartnode status: ./yerbas-cli smartnode status  The output you want to see is: }, &quot;state&quot;: &quot;READY&quot;, &quot;status&quot;: &quot;Ready&quot; }  If all went well you should now have a functioning Smartnode at the increased collateral. "},{"title":"YerbasCore","type":0,"sectionRef":"#","url":"/docs/wallet/","content":"","keywords":""},{"title":"Binaries​","type":1,"pageTitle":"YerbasCore","url":"/docs/wallet/#binaries","content":"yerbasd - Yerbas Daemonyerbas-qt - Yerbas Wallet GUIyerbas-cli - Yerbas Wallet CLIyerbas-tx - Yerbas Tx Utility "},{"title":"Guides​","type":1,"pageTitle":"YerbasCore","url":"/docs/wallet/#guides","content":"Official Wallet Explore the Yerbas Core wallet GUI Wallet » CLI Wallet Explore the terminal-based wallet. CLI Wallet » "},{"title":"Learn More​","type":1,"pageTitle":"YerbasCore","url":"/docs/wallet/#learn-more","content":""},{"title":"The basics​","type":1,"pageTitle":"YerbasCore","url":"/docs/wallet/#the-basics","content":"Generating a new wallet address "},{"title":"Transactions​","type":1,"pageTitle":"YerbasCore","url":"/docs/wallet/#transactions","content":"How to make a transaction How to receive a transaction How to verify a transaction Transaction confirmation on the blockchain Masternodes &amp; transaction security "},{"title":"Special features​","type":1,"pageTitle":"YerbasCore","url":"/docs/wallet/#special-features","content":"Private Sending (PrivateSend/CoinJoin)SmartnodesAssets "},{"title":"Requirements","type":0,"sectionRef":"#","url":"/docs/smartnodes/requirements/","content":"","keywords":""},{"title":"Hardware​","type":1,"pageTitle":"Requirements","url":"/docs/smartnodes/requirements/#hardware","content":""},{"title":"Minimum specifications​","type":1,"pageTitle":"Requirements","url":"/docs/smartnodes/requirements/#minimum-specifications","content":"1 CPU core with SMT or hyperthreading3 GiB of RAM15 GiB of hard drive space6 GiB of swap disk spaceFast Ethernet connection For VPS: SSH (Secure Shell) connection is required for remote administration. Processor: At a minimum, we recommend an Intel Celeron or equivalently powerful processor. Storage: The storage space required by a Smartnode increases over time. 15 GiB of storage space will only suffice for installing a Smartnode from scratch at the start. For systems with a larger amount of RAM, a smaller swapdisk can be allocated. "},{"title":"Recommended specifications​","type":1,"pageTitle":"Requirements","url":"/docs/smartnodes/requirements/#recommended-specifications","content":"2 CPU cores without SMT or hyperthreading4 GiB of RAM20 GiB of hard drive spaceAppropriate swap disk space1GBase-T Ethernet connection Using Solid State Drive powered storage (SATA or NVMe) is highly recommended. Crypto on VPS Some VPS providers explicitly or implicitly ban use of cryptocurrency software "},{"title":"Software​","type":1,"pageTitle":"Requirements","url":"/docs/smartnodes/requirements/#software","content":"Running a smartnode requires some software to be installed as well. "},{"title":"Operating system​","type":1,"pageTitle":"Requirements","url":"/docs/smartnodes/requirements/#operating-system","content":"Officially supported OS: Ubuntu 20.04ubuntu 22.04  Using any other OS may result in unexpected behavior and PoSe bans. Installing dependencies VIA Aptitude is only needed if building Yerbascore from source, if using released binaries it should not be needed. Operating system requirements are fairly simple. Some installation scripts use Aptitude for managing packages, and will thus not function without. Debian, Ubuntu, and related distributions of Debian are examples of distributions utilizing Aptitude. YerbasCore packages are built on top of Ubuntu 22.02 LTS and is hence supported by default. "},{"title":"Mining Pool Setup","type":0,"sectionRef":"#","url":"/docs/mining/miningpoolsetup/","content":"","keywords":""},{"title":"Video Guide​","type":1,"pageTitle":"Mining Pool Setup","url":"/docs/mining/miningpoolsetup/#video-guide","content":"Video Guide - credit @timy_g  "},{"title":"Procedures:​","type":1,"pageTitle":"Mining Pool Setup","url":"/docs/mining/miningpoolsetup/#procedures","content":""},{"title":"1. Begin Pool Setup​","type":1,"pageTitle":"Mining Pool Setup","url":"/docs/mining/miningpoolsetup/#1-begin-pool-setup","content":"Add a sudo user adduser yerbas  Add user to sudo group sudo usermod -aG sudo yerbas  Switch to user su - yerbas  Run system update sudo apt update -y sudo apt upgrade -y sudo reboot  Get yerbasd and get it syncing while we do the rest of the setup: wget https://github.com/The-Yerbas-Endeavor/Yerbas/releases/download/1.0.15.1/yerbas-1.0.15.1-x86_64-linux-gnu.tar.xz tar -xvf yerbas-1.0.15.1-x86_64-linux-gnu.tar.xz mv yerbas-1.0.15.1-x86_64-linux-gnu yerbas_live  Create yerbas data directory and .conf file mkdir ~/.yerbascore nano ~/.yerbascore/yerbas.conf  Add these lines changing the user and password: rpcuser=rapture rpcpassword=ehu489fkndc rpcallowip=127.0.0.1 rpcport=8777 daemon=1 listen=1  Start up yerbasd: ~/yerbas_live/./yerbasd  Get the pool: wget https://yerbas.org/rtm_easynomp.tar.gz &amp;&amp; tar xzvf rtm_easynomp.tar.gz  "},{"title":"2. Install Redis​","type":1,"pageTitle":"Mining Pool Setup","url":"/docs/mining/miningpoolsetup/#2-install-redis","content":"apt repo is usually far behind the latest stable version of Redis so we will compile from source as well as do a little tweaking. sudo apt install build-essential tcl pkg-config -y curl -O http://download.redis.io/redis-stable.tar.gz tar xzvf redis-stable.tar.gz cd redis-stable make -j2  note -j2 tells make how many cpu cores to use, default is 1 and it is slow, change it as needed depending on your available cores. Not sure how many cores? Do: lscpu | grep 'CPU(s):' make -j2 test make install sudo mkdir /etc/redis sudo cp redis.conf /etc/redis nano /etc/redis/redis.conf  Change supervised no to supervised systemd Change dir ./ to dir /var/lib/redis Create systemd file sudo nano /etc/systemd/system/redis.service  add the following: [Unit] Description=Redis In-Memory Data Store After=network.target [Service] User=redis Group=redis ExecStart=/usr/local/bin/redis-server /etc/redis/redis.conf ExecStop=/usr/local/bin/redis-cli shutdown Restart=always [Install] WantedBy=multi-user.target  Create a system user and group for redis user: sudo adduser --system --group --no-create-home redis sudo mkdir /var/lib/redis sudo chown redis:redis /var/lib/redis sudo chmod 770 /var/lib/redis  Start Redis sudo systemctl start redis  Check Redis Status: sudo systemctl status redis  If status is good, enable redis so it automatically starts on a reboot: sudo systemctl enable redis  "},{"title":"3. Tweaking Redis​","type":1,"pageTitle":"Mining Pool Setup","url":"/docs/mining/miningpoolsetup/#3-tweaking-redis","content":"Switch to root user sudo su  Run command sudo echo 1024 &gt; /proc/sys/net/core/somaxconn  note The return should be just an empty line as if you had just hit enter. If so do the following: nano /etc/sysctl.conf  Add these lines exit and save: #Redis tweak net.core.somaxconn=65535 vm.overcommit_memory=1  While we are root lets make a swap file of 2GB size: dd if=/dev/zero of=/swapfile bs=2048 count=1048576 chmod 600 /swapfile mkswap /swapfile swapon /swapfile nano /etc/fstab  Add this: /swapfile swap swap defaults 0 0  Reboot the server. "},{"title":"4. Install dependencies​","type":1,"pageTitle":"Mining Pool Setup","url":"/docs/mining/miningpoolsetup/#4-install-dependencies","content":"Install node, npm, and pm2 curl -sL https://deb.nodesource.com/setup_8.x -o nodesource_setup.sh sudo bash nodesource_setup.sh sudo apt install nodejs -y  Verify nodejs version: node --v  This will also have installed npm. Now install PM2: sudo npm i -g pm2  "},{"title":"5. Quick Pool Configuration​","type":1,"pageTitle":"Mining Pool Setup","url":"/docs/mining/miningpoolsetup/#5-quick-pool-configuration","content":"Create config file: cp config_example.json config.json  note Edit pool_configs/yerbas.json as needed, make sure user and password matches what you have in ~/.yerbascore/yerbas.conf. Install certbot and set good paths to certs in config.json: Make sure you have the a-record / sub-domain you will be using pointed at the pool server IP. If using cloudflare make sure the connection is not proxied yet (orange cloud &gt; white in DNS). Install dependencies and certbot: sudo add-apt-repository ppa:certbot/certbot sudo apt update -y sudo apt upgrade -y sudo apt install certbot -y  Before we go any further lets make sure we have UFW installed / enabled and setup correctly. I will assume here that ufw is not installed: sudo apt install ufw -y sudo ufw default deny incoming sudo ufw default allow outgoing sudo ufw allow ssh sudo ufw allow http sudo ufw allow https sudo ufw allow 3008/tcp sudo ufw allow 19979/tcp sudo ufw enable  Run certbot: sudo certbot certonly --standalone -d your.pooldomain.here  Copy the paths to your shiny new certs, mine in this guide looked like: /etc/letsencrypt/live/dpool.yerbas.com/privkey.pem /etc/letsencrypt/live/dpool.yerbas.com/fullchain.pem  note Update the existing paths in config.json to match these. Start pool from inside EasyNOMP directory: sudo pm2 start init.js --name &quot;pool&quot;  Confirm it started sudo pm2 list  info If you really don't want to run it as root there are ways around it but I am not going to cover them here. Easiest might be to change the https/http port to unprivledged ports (above 1023) and then proxy with nginx to the normal 443/80. "},{"title":"6. Secure SSH With Fail2Ban​","type":1,"pageTitle":"Mining Pool Setup","url":"/docs/mining/miningpoolsetup/#6-secure-ssh-with-fail2ban","content":"Install apt install fail2ban -y  Configure nano /etc/fail2ban/jail.local  Add the following [sshd] enabled = true port = 22 filter = sshd logpath = /var/log/auth.log maxretry = 3  Restart Fail2ban: systemctl restart fail2ban  "},{"title":"The Big Three","type":0,"sectionRef":"#","url":"/docs/assets/creating/the_big_three/","content":"The Big Three When working with Yerbas assets you will most likely be using one of these three. They are by far the most used types of assets. It can help to think of these assets as pieces of some abstract on-chain website. Main assets Running on our website analogy, a main asset is like the domain name. Metadata\tInformation Asset Name\t3-30 capital letters. '.' and '_' are also allowed, but they cannot be at the beginning or end of the asset name. More than one of these special characters also cannot be next to one another. The names YERB, YERBAS, and YERBAS are reserved. Ownership Asset\tMain assets have an associated ownership asset Prerequisites\tNone Asset Amount\t1 - 21,000,000,000 of this asset can be created Cost\t20 YERB Reissuability\tThis asset can be set to be reissued Divisibility\tDivisibility can be set from 0-8 Associated Data\tThis asset can have associated data The ownership asset of a main asset is required to create the following two assets. Sub-assets A sub-asset can be likened to a website's path. Creating a sub asset requires a main asset ownership token. Metadata\tInformation Asset Name The sub-portion of the name must be at least 1 capital letter. '.' and '_' are also allowed, but they cannot be at the beginning or end of the sub-portion. More than one of these special characters also cannot be next to one another. The full sub-asset name takes the form [main asset name]/[sub-portion]. This full name must be 30 or less characters. Ownership Asset\tSub-assets have an associated ownership asset Prerequisites\tA main asset's ownership asset Asset Amount\t1 - 21,000,000,000 of this asset can be created Cost\t20 YERB Reissuability\tThis asset can be set to be reissued Divisibility\tDivisibility can be set from 0-8 Associated Data\tThis asset can have associated data Unique assets A unique asset can be likened to a file on a website. Creating a unique asset requires a main asset ownership token or a sub-asset ownership token. There can only be 1 of a unique asset. Metadata\tInformation Asset Name\tThe unique portion of the name must be at least 1 character. The full unique asset name takes the form [main or sub asset name]#[unique portion]. This full name must be 30 or less characters. Ownership Asset\tUnique assets have no associated ownership asset Prerequisites\tA main asset or sub-asset's ownership asset Asset Amount\t1 of this asset can be created Cost\t0.2 YERB Reissuability\tThis asset cannot be reissued Divisibility\tDivisibility is 0 Associated Data\tThis asset can have associated data","keywords":""},{"title":"Using Powcache & Bootstrap","type":0,"sectionRef":"#","url":"/docs/wallet/bootstrap/","content":"","keywords":""},{"title":"Download​","type":1,"pageTitle":"Using Powcache & Bootstrap","url":"/docs/wallet/bootstrap/#download","content":"v3.0.0.1 or up POW Cache 💾 POW Cache (.dat) Classic Bootstrap 💾 Bootstrap without indexes (.tar.gz) "},{"title":"Usage​","type":1,"pageTitle":"Using Powcache & Bootstrap","url":"/docs/wallet/bootstrap/#usage","content":"Follow these steps: Delete folders and files: blocksllmqchainstateevodbpowcache.dat Extract to the appropriate data directory: Unix/Linux: ~/.yerbascoreWindows: %AppData%\\YerbasCore Restart Yerbas Daemon (yerbasd) and wait for sync Wallet.dat Do not delete your wallet.dat file without having a backup! This file holds your access to your wallet data. Losing it can mean losing your funds! "},{"title":"getaddressdeltas","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressdeltas/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getaddressdeltas","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressdeltas/#arguments","content":"Argument\tType\tDescription&quot;addresses&quot;\t(string)\t(string) The base58check encoded address &quot;start&quot;\t(number)\tThe start block height &quot;end&quot;\t(number)\tThe end block height Arguments: { &quot;addresses&quot; [ &quot;address&quot; (string) The base58check encoded address ,... ] &quot;start&quot; (number) The start block height &quot;end&quot; (number) The end block height }  "},{"title":"Output​","type":1,"pageTitle":"getaddressdeltas","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressdeltas/#output","content":"Result\tType\tDescription&quot;satoshis&quot;\t(number)\tThe current balance in duffs &quot;txid&quot;\t(string)\tThe related txid &quot;index&quot;\t(number)\tThe related input or output index &quot;blockindex&quot;\t(number)\tThe related block index &quot;height&quot;\t(number)\tThe block height &quot;address&quot;\t(string)\tThe base58check encoded address Result: [ { &quot;satoshis&quot; (number) The difference of duffs &quot;txid&quot; (string) The related txid &quot;index&quot; (number) The related input or output index &quot;blockindex&quot; (number) The related block index &quot;height&quot; (number) The block height &quot;address&quot; (string) The base58check encoded address } ]  "},{"title":"Examples​","type":1,"pageTitle":"getaddressdeltas","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressdeltas/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaddressdeltas&quot;, &quot;params&quot;: [{&quot;addresses&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg&quot;]}] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"Updating your smartnode","type":0,"sectionRef":"#","url":"/docs/smartnodes/updating/","content":"","keywords":""},{"title":"Manual update​","type":1,"pageTitle":"Updating your smartnode","url":"/docs/smartnodes/updating/#manual-update","content":"Login to your Smartnode VIA SSH client. ./yerbas-cli stop  Confirm the daemon has stopped: ps aux | grep yerbasd  Obtain update from https://github.com/the-yerbas=endeavor/latest "},{"title":"Automatic update​","type":1,"pageTitle":"Updating your smartnode","url":"/docs/smartnodes/updating/#automatic-update","content":"Yerbas community member dk808 created a great Update Script. If you installed your Smartnode using dk808's installation script, this update script is the recommended way of updating. Login with ssh and from the directory containing update.sh do: ./update.sh  "},{"title":"getbestblockhash","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getbestblockhash/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getbestblockhash","url":"/docs/wallet/cli-wallet/commands/blockchain/getbestblockhash/#output","content":"Result\tType\tDescription&quot;hex&quot;\t(string)\tThe block hash hex encoded Result: &quot;hex&quot; (string) the block hash hex encoded  "},{"title":"Examples​","type":1,"pageTitle":"getbestblockhash","url":"/docs/wallet/cli-wallet/commands/blockchain/getbestblockhash/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getbestblockhash&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getaddressbalance","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressbalance/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getaddressbalance","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressbalance/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address Arguments: { &quot;addresses&quot; [ &quot;address&quot; (string) The base58check encoded address ,... ] }  "},{"title":"Output​","type":1,"pageTitle":"getaddressbalance","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressbalance/#output","content":"Result\tType\tDescription&quot;balance&quot;\t(string)\tThe current balance in duffs &quot;received&quot;\t(string)\tThe total number of duffs received (including change) Result: { &quot;balance&quot; (string) The current balance in duffs &quot;received&quot; (string) The total number of duffs received (including change) }  "},{"title":"Examples​","type":1,"pageTitle":"getaddressbalance","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressbalance/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaddressbalance&quot;, &quot;params&quot;: [{&quot;addresses&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg&quot;]}] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"Manual Setup","type":0,"sectionRef":"#","url":"/docs/smartnodes/installation/manualsetup/","content":"","keywords":""},{"title":"Guide​","type":1,"pageTitle":"Manual Setup","url":"/docs/smartnodes/installation/manualsetup/#guide","content":""},{"title":"1. Update Server​","type":1,"pageTitle":"Manual Setup","url":"/docs/smartnodes/installation/manualsetup/#1-update-server","content":"apt update &amp;&amp; apt upgrade -y apt install unzip fail2ban -y  Unzip is required to unpack the bootstrap. "},{"title":"2. Add 4GB of SWAP​","type":1,"pageTitle":"Manual Setup","url":"/docs/smartnodes/installation/manualsetup/#2-add-4gb-of-swap","content":"First check to make sure there is not already swap active: free -h  note If no swap it will return: Swap: 0B 0B 0B  Create SWAP and Activate: dd if=/dev/zero of=/swapfile bs=1k count=4096k chmod 600 /swapfile mkswap /swapfile swapon /swapfile echo &quot;/swapfile swap swap auto 0 0&quot; | tee -a /etc/fstab sysctl -w vm.swappiness=10 echo vm.swappiness = 10 | tee -a /etc/sysctl.conf  Note: swappiness = 10 tells system only to use it if absolutely needed. "},{"title":"3. Enable UFW & Open Ports​","type":1,"pageTitle":"Manual Setup","url":"/docs/smartnodes/installation/manualsetup/#3-enable-ufw--open-ports","content":"(Optional) apt install ufw -y ufw default deny incoming ufw default allow outgoing ufw allow ssh ufw allow 15420/tcp ufw enable  "},{"title":"4. Configure Fail2Ban​","type":1,"pageTitle":"Manual Setup","url":"/docs/smartnodes/installation/manualsetup/#4-configure-fail2ban","content":"As I am not bothering with setting up SSH login with keys rather then password based login need to keep something from the bots and kiddies brute forcing our SSH service. Setup jail for bad guys hitting SSH, and set it to ban after three failed logins to SSH: nano /etc/fail2ban/jail.local  Copy and paste the following into the file: [sshd] enabled = true port = 22 filter = sshd logpath = /var/log/auth.log maxretry = 3  Reboot the server: reboot  Add a system user to run yerbasd: adduser &lt;username_here&gt;  Get Yerbas wallet / daemon and bootstrap: wget https://github.com/The-Yerbas-Endeavor/yerbas/releases/download/v2.1.1.4/yerbas-ubuntu20-2.1.1.4.tar.gz tar -xvf yerbas-ubuntu20-2.1.1.4.tar.gz cd .. mkdir ~/.yerbascore &amp;&amp; touch ~/.yerbascore/yerbas.conf echo &quot;daemon=1&quot; &gt;&gt; ~/.yerbascore/yerbas.conf cd .yerbascore wget https://github.com/The-Yerbas-Endeavor/yerbas/releases/download/v3.0.0.1/powcache.dat cd ~/yerbas-build ./yerbasd  Info You should see Yerbasd server starting. You can confirm it is running top -c it will be using 100% CPU (1 core). This shows you it is working, we will return to it later. "},{"title":"Local Wallet Setup​","type":1,"pageTitle":"Manual Setup","url":"/docs/smartnodes/installation/manualsetup/#local-wallet-setup","content":"note This part of the guide is to get your local wallet or control wallet setup. If you already have Yerbas core wallet running you can skip to next section. "},{"title":"1. Install and Sync Local Wallet:​","type":1,"pageTitle":"Manual Setup","url":"/docs/smartnodes/installation/manualsetup/#1-install-and-sync-local-wallet","content":"For this step, you will need the YerbasCore wallet installed. Follow our YerbasCore Wallet guides for detailed instructions on how to do this. To speed up the synchronization, use our POWCache or Bootstrap packages: Using Powcache &amp; Bootstrap Grab bootstrap from github release and unpack in the above directory (highly recommended as reduces sync time drastically) note If you already have a Yerbas wallet remove the following folders before using the bootstrap (make sure wallet is closed before using bootstrap) blocks chainstate evodb llmq To use the bootstrap right click &gt; unzip. Copy contents to the new directory you created above. Start wallet and let it finish syncing.Encrypt wallet (Settings &gt; Encrypt Wallet)Create new receiving addressBackup wallet.dat (File &gt; Backup Wallet). Store in multiple locations.Dump private key for receiving address (this should be printed and stored offline in multiple locations): walletpassphrase password time (in seconds) dumpprivkey &quot;address&quot; (address is the receiving address you sent the 1 million YERB to)  Send 28,000 YERB to self (this is current collateral amount)Wait for 2 confirmations note The private key only allows you to restore the matching receiving address. If you setup multiple nodes you should dump the private key for each collateral receiving address. "},{"title":"2. Build protx command for control wallet​","type":1,"pageTitle":"Manual Setup","url":"/docs/smartnodes/installation/manualsetup/#build-protx","content":"Here is an example protx quick_setup command: d7898f44c6bdc39a49b0917d5c6bcb61455270ddb9e7eb1168a6b745434daf26 1 194.113.73.87:15420 yaDfcdCupB1T5YoVRjYr8fXCvB8U5AuNX8  The structure from left to right is: Transaction ID: In your wallet go to &quot;Transactions&quot; right click the one you sent yourself earlier and &quot;Copy Transaction ID&quot;. Replace the Transaction ID in example.Collateral index: Tools &gt; Debug console. Type smartnode outputs to check if 1 or 0. Adjust example command if needed.Your smartnode server IP and port. Replace example IP with your Smartnode server IP, leave port as is.Fee address: This is any address in your wallet which contains enough YERB to pay the fee (cannot be the address which you sent the 1 million YERB to). When you enter the protx quick_setup command it is a transaction and needs to be paid for. It is a very small amount 1/2 an YERB is more than enough. In Debug console do &quot;listaddressbalances&quot; to show all addresses with a balance, choose one and replace address in example command. info Enter the protx quick_setup command in Debug console. This will create a .conf file for that node in the same directory you ran the wallet from. Open it and copy the contents. See this part in the video guide. "},{"title":"Final steps​","type":1,"pageTitle":"Manual Setup","url":"/docs/smartnodes/installation/manualsetup/#final-steps","content":"Back to the smartnode server: ~./yerbas-cli stop nano ~/.yerbascore/yerbas.conf  Paste in what you copied from the .conf file made during the protx command, save and exit. When done with this, run yerbasd from the terminal: ~/./yerbasd  When this is done, wait a couple minutes until running ~/./yerbas-cli smartnode status to check the status of your smartnode. This should return: Ready Ready Success! Your Smartnode should now be running! "},{"title":"Video guides​","type":1,"pageTitle":"Manual Setup","url":"/docs/smartnodes/installation/manualsetup/#video-guides","content":""},{"title":"getaddressutxos","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressutxos/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getaddressutxos","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressutxos/#arguments","content":"Argument\tType\tDescription&quot;addresses&quot;\t(string)\t(string) The base58check encoded address &quot;start&quot;\t(number)\tThe start block height &quot;end&quot;\t(number)\tThe end block height Arguments: { &quot;addresses&quot; [ &quot;address&quot; (string) The base58check encoded address ,... ] }  "},{"title":"Output​","type":1,"pageTitle":"getaddressutxos","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressutxos/#output","content":"Result\tType\tDescription&quot;transactionid&quot;\t(string)\tThe transaction id &quot;txid&quot;\t(string)\tThe related txid &quot;outputindex&quot;\t(number)\tThe output index &quot;satoshis&quot;\t(number)\tThe number of duffs of the output &quot;height&quot;\t(number)\tThe block height Result: [ { &quot;address&quot; (string) The address base58check encoded &quot;txid&quot; (string) The output txid &quot;outputIndex&quot; (number) The output index &quot;script&quot; (string) The script hex encoded &quot;satoshis&quot; (number) The number of duffs of the output &quot;height&quot; (number) The block height } ]  "},{"title":"Examples​","type":1,"pageTitle":"getaddressutxos","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressutxos/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaddressutxos&quot;, &quot;params&quot;: [{&quot;addresses&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg&quot;]}] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getaddressmempool","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressmempool/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getaddressmempool","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressmempool/#arguments","content":"Argument\tType\tDescription&quot;addresses&quot;\t(string)\t(string) The base58check encoded address Arguments: { &quot;addresses&quot; [ &quot;address&quot; (string) The base58check encoded address ,... ] }  "},{"title":"Output​","type":1,"pageTitle":"getaddressmempool","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressmempool/#output","content":"Result\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address &quot;txid&quot;\t(string)\tThe related txid &quot;index&quot;\t(number)\tThe related input or output index &quot;timestamp&quot;\t(number)\tThe time the transaction entered the mempool (seconds) &quot;prevtxid&quot;\t(string)\tThe previous txid (if spending) &quot;prevout&quot;\t(string)\tThe previous transaction output index (if spending) Result: [ { &quot;address&quot; (string) The base58check encoded address &quot;txid&quot; (string) The related txid &quot;index&quot; (number) The related input or output index &quot;satoshis&quot; (number) The difference of duffs &quot;timestamp&quot; (number) The time the transaction entered the mempool (seconds) &quot;prevtxid&quot; (string) The previous txid (if spending) &quot;prevout&quot; (string) The previous transaction output index (if spending) } ]  "},{"title":"Examples​","type":1,"pageTitle":"getaddressmempool","url":"/docs/wallet/cli-wallet/commands/address-index/getaddressmempool/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaddressmempool&quot;, &quot;params&quot;: [{&quot;addresses&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg&quot;]}] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getbestchainlock","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getbestchainlock/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getbestchainlock","url":"/docs/wallet/cli-wallet/commands/blockchain/getbestchainlock/#output","content":"Result\tType\tDescription\t&quot;blockhash&quot; : &quot;hash&quot;\t(string)\tThe block hash hex encoded &quot;height&quot;\t(number)\tThe block height or index &quot;known_block&quot; : true\tfalse\t(boolean)\tTrue if the block is known by our node Result: { &quot;blockhash&quot; : &quot;hash&quot;, (string) The block hash hex encoded &quot;height&quot; : n, (numeric) The block height or index &quot;known_block&quot; : true|false (boolean) True if the block is known by our node }  "},{"title":"Examples​","type":1,"pageTitle":"getbestchainlock","url":"/docs/wallet/cli-wallet/commands/blockchain/getbestchainlock/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaddressdeltas&quot;, &quot;params&quot;: [{&quot;addresses&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg&quot;]}] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getaddresstxids","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/address-index/getaddresstxids/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getaddresstxids","url":"/docs/wallet/cli-wallet/commands/address-index/getaddresstxids/#arguments","content":"Argument\tType\tDescription&quot;addresses&quot;\t(string)\t(string) The base58check encoded address &quot;start&quot;\t(number)\tThe start block height &quot;end&quot;\t(number)\tThe end block height Arguments: { &quot;addresses&quot; [ &quot;address&quot; (string) The base58check encoded address ,... ] &quot;start&quot; (number) The start block height &quot;end&quot; (number) The end block height }  "},{"title":"Output​","type":1,"pageTitle":"getaddresstxids","url":"/docs/wallet/cli-wallet/commands/address-index/getaddresstxids/#output","content":"Result\tType\tDescription&quot;transactionid&quot;\t(string)\tThe transaction id Result: [ &quot;transactionid&quot; (string) The transaction id ,... ]  "},{"title":"Examples​","type":1,"pageTitle":"getaddresstxids","url":"/docs/wallet/cli-wallet/commands/address-index/getaddresstxids/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaddresstxids&quot;, &quot;params&quot;: [{&quot;addresses&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg&quot;]}] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getblock","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getblock/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getblock","url":"/docs/wallet/cli-wallet/commands/blockchain/getblock/#arguments","content":"Argument\tType\tDescription&quot;blockhash&quot;\t(string)\tThe block hash &quot;verbosity&quot;\t(numeric)\t0 for hex-encoded data, 1 for a json object (default), and 2 for json object with transaction data Arguments: { &quot;blockhash&quot; (string, required) The block hash &quot;verbosity&quot; (numeric, optional, default=1) 0 for hex-encoded data, 1 for a json object, and 2 for json object with transaction data }  "},{"title":"Output​","type":1,"pageTitle":"getblock","url":"/docs/wallet/cli-wallet/commands/blockchain/getblock/#output","content":"Result\tType\tDescription&quot;data&quot;\t(string)\tA string that is serialized, hex-encoded data for block 'hash'. Result (for verbosity = 0): &quot;data&quot; (string) A string that is serialized, hex-encoded data for block 'hash'. Result (for verbose = 1): { &quot;hash&quot; : &quot;hash&quot;, (string) the block hash (same as provided) &quot;confirmations&quot; : n, (numeric) The number of confirmations, or -1 if the block is not on the main chain &quot;size&quot; : n, (numeric) The block size &quot;height&quot; : n, (numeric) The block height or index &quot;version&quot; : n, (numeric) The block version &quot;versionHex&quot; : &quot;00000000&quot;, (string) The block version formatted in hexadecimal &quot;merkleroot&quot; : &quot;xxxx&quot;, (string) The merkle root &quot;tx&quot; : [ (array of string) The transaction ids &quot;transactionid&quot; (string) The transaction id ,... ], &quot;cbTx&quot; : { (json object) The coinbase special transaction &quot;version&quot; (numeric) The coinbase special transaction version &quot;height&quot; (numeric) The block height &quot;merkleRootMNList&quot; : &quot;xxxx&quot;, (string) The merkle root of the smartnode list &quot;merkleRootQuorums&quot; : &quot;xxxx&quot;, (string) The merkle root of the quorum list }, &quot;time&quot; : ttt, (numeric) The block time in seconds since epoch (Jan 1 1970 GMT) &quot;mediantime&quot; : ttt, (numeric) The median block time in seconds since epoch (Jan 1 1970 GMT) &quot;nonce&quot; : n, (numeric) The nonce &quot;bits&quot; : &quot;1d00ffff&quot;, (string) The bits &quot;difficulty&quot; : x.xxx, (numeric) The difficulty &quot;chainwork&quot; : &quot;xxxx&quot;, (string) Expected number of hashes required to produce the chain up to this block (in hex) &quot;previousblockhash&quot; : &quot;hash&quot;, (string) The hash of the previous block &quot;nextblockhash&quot; : &quot;hash&quot; (string) The hash of the next block } Result (for verbosity = 2): { ..., Same output as verbosity = 1. &quot;tx&quot; : [ (array of Objects) The transactions in the format of the getrawtransaction RPC. Different from verbosity = 1 &quot;tx&quot; result. ,... ], ,... Same output as verbosity = 1. }  "},{"title":"Examples​","type":1,"pageTitle":"getblock","url":"/docs/wallet/cli-wallet/commands/blockchain/getblock/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getblock&quot;, &quot;params&quot;: [&quot;00000000000fd08c2fb661d2fcb0d49abb3a91e5f27082ce64feed3b4dede2e2&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getblockhash","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockhash/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getblockhash","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockhash/#arguments","content":"Argument\tType\tDescription&quot;height&quot;\t(numeric)\tThe height index Arguments: &quot;height&quot; (numeric, required) The height index  "},{"title":"Output​","type":1,"pageTitle":"getblockhash","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockhash/#output","content":"Result\tType\tDescription&quot;hash&quot;\t(string)\tThe block hash Result: &quot;hash&quot; (string) The block hash  "},{"title":"Examples​","type":1,"pageTitle":"getblockhash","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockhash/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getblockhash&quot;, &quot;params&quot;: [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getblockcount","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockcount/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getblockcount","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockcount/#output","content":"Result\tType\tDescription&quot;n&quot;\t(number)\tThe current block count Result: n (numeric) The current block count  "},{"title":"Examples​","type":1,"pageTitle":"getblockcount","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockcount/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getblockcount&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getblockheader","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockheader/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getblockheader","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockheader/#arguments","content":"Argument\tType\tDescription&quot;hash&quot;\t(string)\tThe block hash verbose\t(boolean)\t(default) true for a json object, false for the hex encoded data Arguments: 1. &quot;hash&quot; (string, required) The block hash 2. verbose (boolean, optional, default=true) true for a json object, false for the hex encoded data  "},{"title":"Output​","type":1,"pageTitle":"getblockheader","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockheader/#output","content":"Result\tType\tDescription&quot;hash&quot;\t(string)\tThe block hash Result (for verbose = true): { &quot;hash&quot; : &quot;hash&quot;, (string) the block hash (same as provided) &quot;confirmations&quot; : n, (numeric) The number of confirmations, or -1 if the block is not on the main chain &quot;height&quot; : n, (numeric) The block height or index &quot;version&quot; : n, (numeric) The block version &quot;versionHex&quot; : &quot;00000000&quot;, (string) The block version formatted in hexadecimal &quot;merkleroot&quot; : &quot;xxxx&quot;, (string) The merkle root &quot;time&quot; : ttt, (numeric) The block time in seconds since epoch (Jan 1 1970 GMT) &quot;mediantime&quot; : ttt, (numeric) The median block time in seconds since epoch (Jan 1 1970 GMT) &quot;nonce&quot; : n, (numeric) The nonce &quot;bits&quot; : &quot;1d00ffff&quot;, (string) The bits &quot;difficulty&quot; : x.xxx, (numeric) The difficulty &quot;chainwork&quot; : &quot;0000...1f3&quot; (string) Expected number of hashes required to produce the current chain (in hex) &quot;previousblockhash&quot; : &quot;hash&quot;, (string) The hash of the previous block &quot;nextblockhash&quot; : &quot;hash&quot;, (string) The hash of the next block } Result (for verbose=false): &quot;data&quot; (string) A string that is serialized, hex-encoded data for block 'hash'.  "},{"title":"Examples​","type":1,"pageTitle":"getblockheader","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockheader/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getblockhashes&quot;, &quot;params&quot;: [1231614698, 1231024505] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getblockhashes","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockhashes/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getblockhashes","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockhashes/#arguments","content":"Argument\tType\tDescription&quot;high&quot;\t(numeric)\tThe newer block timestamp &quot;low&quot;\t(numeric)\tThe older block timestamp Arguments: 1. high (numeric, required) The newer block timestamp 2. low (numeric, required) The older block timestamp  "},{"title":"Output​","type":1,"pageTitle":"getblockhashes","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockhashes/#output","content":"Result\tType\tDescription&quot;hash&quot;\t(string)\tThe block hash Result: [ &quot;hash&quot; (string) The block hash ]  "},{"title":"Examples​","type":1,"pageTitle":"getblockhashes","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockhashes/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getblockhashes&quot;, &quot;params&quot;: [1231614698, 1231024505] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getchaintips","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getchaintips/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getchaintips","url":"/docs/wallet/cli-wallet/commands/blockchain/getchaintips/#arguments","content":"Argument\tType\tDescriptioncount\t(numeric)\tonly show this much of latest tips branchlen\t(numeric)\tonly show tips that have equal or greater length of branch Arguments: 1. count (numeric, optional) only show this much of latest tips 2. branchlen (numeric, optional) only show tips that have equal or greater length of branch  "},{"title":"Output​","type":1,"pageTitle":"getchaintips","url":"/docs/wallet/cli-wallet/commands/blockchain/getchaintips/#output","content":"Result\tType\tDescription&quot;height&quot;\t(numeric)\theight of the chain tip Result: [ { &quot;height&quot;: xxxx, (numeric) height of the chain tip &quot;hash&quot;: &quot;xxxx&quot;, (string) block hash of the tip &quot;difficulty&quot; : x.xxx, (numeric) The difficulty &quot;chainwork&quot; : &quot;0000...1f3&quot; (string) Expected number of hashes required to produce the current chain (in hex) &quot;branchlen&quot;: 0 (numeric) zero for main chain &quot;forkpoint&quot;: &quot;xxxx&quot;, (string) same as &quot;hash&quot; for the main chain &quot;status&quot;: &quot;active&quot; (string) &quot;active&quot; for the main chain }, { &quot;height&quot;: xxxx, &quot;hash&quot;: &quot;xxxx&quot;, &quot;difficulty&quot; : x.xxx, &quot;chainwork&quot; : &quot;0000...1f3&quot; &quot;branchlen&quot;: 1 (numeric) length of branch connecting the tip to the main chain &quot;forkpoint&quot;: &quot;xxxx&quot;, (string) block hash of the last common block between this tip and the main chain &quot;status&quot;: &quot;xxxx&quot; (string) status of the chain (active, valid-fork, valid-headers, headers-only, invalid) } ] Possible values for status: 1. &quot;invalid&quot; This branch contains at least one invalid block 2. &quot;headers-only&quot; Not all blocks for this branch are available, but the headers are valid 3. &quot;valid-headers&quot; All blocks are available for this branch, but they were never fully validated 4. &quot;valid-fork&quot; This branch is not part of the active chain, but is fully validated 5. &quot;active&quot; This is the tip of the active main chain, which is certainly valid  "},{"title":"Examples​","type":1,"pageTitle":"getchaintips","url":"/docs/wallet/cli-wallet/commands/blockchain/getchaintips/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getchaintips&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getblockheaders","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockheaders/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getblockheaders","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockheaders/#arguments","content":"Argument\tType\tDescription&quot;hash&quot;\t(string)\tThe block hash verbose\t(boolean)\t(default) true for a json object, false for the hex encoded data Arguments: 1. &quot;hash&quot; (string, required) The block hash 2. count (numeric, optional, default/max=2000) 3. verbose (boolean, optional, default=true) true for a json object, false for the hex encoded data  "},{"title":"Output​","type":1,"pageTitle":"getblockheaders","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockheaders/#output","content":"Result\tType\tDescription&quot;hash&quot;\t(string)\tThe block hash Result (for verbose = true): [ { &quot;hash&quot; : &quot;hash&quot;, (string) The block hash &quot;confirmations&quot; : n, (numeric) The number of confirmations, or -1 if the block is not on the main chain &quot;height&quot; : n, (numeric) The block height or index &quot;version&quot; : n, (numeric) The block version &quot;merkleroot&quot; : &quot;xxxx&quot;, (string) The merkle root &quot;time&quot; : ttt, (numeric) The block time in seconds since epoch (Jan 1 1970 GMT) &quot;mediantime&quot; : ttt, (numeric) The median block time in seconds since epoch (Jan 1 1970 GMT) &quot;nonce&quot; : n, (numeric) The nonce &quot;bits&quot; : &quot;1d00ffff&quot;, (string) The bits &quot;difficulty&quot; : x.xxx, (numeric) The difficulty &quot;chainwork&quot; : &quot;0000...1f3&quot; (string) Expected number of hashes required to produce the current chain (in hex) &quot;previousblockhash&quot; : &quot;hash&quot;, (string) The hash of the previous block &quot;nextblockhash&quot; : &quot;hash&quot;, (string) The hash of the next block }, { ... }, ... ] Result (for verbose=false): [ &quot;data&quot;, (string) A string that is serialized, hex-encoded data for block header. ... ]  "},{"title":"Examples​","type":1,"pageTitle":"getblockheaders","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockheaders/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getblockheaders&quot;, &quot;params&quot;: [&quot;00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09&quot; 2000] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getblockchaininfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockchaininfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getblockchaininfo","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockchaininfo/#output","content":"Result\tType\tDescription&quot;chain&quot;\t(string)\tcurrent network name as defined in BIP70 (main, test, regtest) Result: { &quot;chain&quot;: &quot;xxxx&quot;, (string) current network name as defined in BIP70 (main, test, regtest) &quot;blocks&quot;: xxxxxx, (numeric) the current number of blocks processed in the server &quot;headers&quot;: xxxxxx, (numeric) the current number of headers we have validated &quot;bestblockhash&quot;: &quot;...&quot;, (string) the hash of the currently best block &quot;difficulty&quot;: xxxxxx, (numeric) the current difficulty &quot;mediantime&quot;: xxxxxx, (numeric) median time for the current best block &quot;verificationprogress&quot;: xxxx, (numeric) estimate of verification progress [0..1] &quot;chainwork&quot;: &quot;xxxx&quot; (string) total amount of work in active chain, in hexadecimal &quot;pruned&quot;: xx, (boolean) if the blocks are subject to pruning &quot;pruneheight&quot;: xxxxxx, (numeric) lowest-height complete block stored &quot;softforks&quot;: [ (array) status of softforks in progress { &quot;id&quot;: &quot;xxxx&quot;, (string) name of softfork &quot;version&quot;: xx, (numeric) block version &quot;reject&quot;: { (object) progress toward rejecting pre-softfork blocks &quot;status&quot;: xx, (boolean) true if threshold reached }, }, ... ], &quot;bip9_softforks&quot;: { (object) status of BIP9 softforks in progress &quot;xxxx&quot; : { (string) name of the softfork &quot;status&quot;: &quot;xxxx&quot;, (string) one of &quot;defined&quot;, &quot;started&quot;, &quot;locked_in&quot;, &quot;active&quot;, &quot;failed&quot; &quot;bit&quot;: xx, (numeric) the bit (0-28) in the block version field used to signal this softfork (only for &quot;started&quot; status) &quot;startTime&quot;: xx, (numeric) the minimum median time past of a block at which the bit gains its meaning &quot;timeout&quot;: xx, (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in &quot;since&quot;: xx, (numeric) height of the first block to which the status applies &quot;statistics&quot;: { (object) numeric statistics about BIP9 signalling for a softfork (only for &quot;started&quot; status) &quot;period&quot;: xx, (numeric) the length in blocks of the BIP9 signalling period &quot;threshold&quot;: xx, (numeric) the number of blocks with the version bit set required to activate the feature &quot;elapsed&quot;: xx, (numeric) the number of blocks elapsed since the beginning of the current period &quot;count&quot;: xx, (numeric) the number of blocks with the version bit set in the current period &quot;possible&quot;: xx (boolean) returns false if there are not enough blocks left in this period to pass activation threshold } } } }  "},{"title":"Examples​","type":1,"pageTitle":"getblockchaininfo","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockchaininfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getblockchaininfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getchaintxstats","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getchaintxstats/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getchaintxstats","url":"/docs/wallet/cli-wallet/commands/blockchain/getchaintxstats/#arguments","content":"Argument\tType\tDescriptionnblocks\t(numeric)\tSize of the window in number of blocks (default: one month). &quot;blockhash&quot;\t(string)\tThe hash of the block that ends the window. Arguments: 1. nblocks (numeric, optional) Size of the window in number of blocks (default: one month). 2. &quot;blockhash&quot; (string, optional) The hash of the block that ends the window.  "},{"title":"Output​","type":1,"pageTitle":"getchaintxstats","url":"/docs/wallet/cli-wallet/commands/blockchain/getchaintxstats/#output","content":"Result\tType\tDescription&quot;time&quot;\t(numeric)\tThe timestamp for the statistics in UNIX format. &quot;txcount&quot;\t(numeric)\tThe total number of transactions in the chain up to that point. &quot;txrate&quot;\t(numeric)\tThe average rate of transactions per second in the window. Result: { &quot;time&quot;: xxxxx, (numeric) The timestamp for the statistics in UNIX format. &quot;txcount&quot;: xxxxx, (numeric) The total number of transactions in the chain up to that point. &quot;txrate&quot;: x.xx, (numeric) The average rate of transactions per second in the window. }  "},{"title":"Examples​","type":1,"pageTitle":"getchaintxstats","url":"/docs/wallet/cli-wallet/commands/blockchain/getchaintxstats/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getchaintxstats&quot;, &quot;params&quot;: [2016] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getblockstats","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockstats/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getblockstats","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockstats/#arguments","content":"Argument\tType\tDescription&quot;hash_or_height&quot;\t(string or numeric)\tThe block hash or height of the target block &quot;stats&quot;\t(array)\tValues to plot, by default all values (see result below) test | Arguments: 1. &quot;hash_or_height&quot; (string or numeric, required) The block hash or height of the target block 2. &quot;stats&quot; (array, optional) Values to plot, by default all values (see result below) [ &quot;height&quot;, (string, optional) Selected statistic &quot;time&quot;, (string, optional) Selected statistic ,... ]  "},{"title":"Output​","type":1,"pageTitle":"getblockstats","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockstats/#output","content":"Result\tType\tDescription&quot;hash&quot;\t(string)\tThe block hash Result: { (json object) &quot;avgfee&quot;: xxxxx, (numeric) Average fee in the block &quot;avgfeerate&quot;: xxxxx, (numeric) Average feerate (in duffs per byte) &quot;avgtxsize&quot;: xxxxx, (numeric) Average transaction size &quot;blockhash&quot;: xxxxx, (string) The block hash (to check for potential reorgs) &quot;height&quot;: xxxxx, (numeric) The height of the block &quot;ins&quot;: xxxxx, (numeric) The number of inputs (excluding coinbase) &quot;maxfee&quot;: xxxxx, (numeric) Maximum fee in the block &quot;maxfeerate&quot;: xxxxx, (numeric) Maximum feerate (in duffs per byte) &quot;maxtxsize&quot;: xxxxx, (numeric) Maximum transaction size &quot;medianfee&quot;: xxxxx, (numeric) Truncated median fee in the block &quot;medianfeerate&quot;: xxxxx, (numeric) Truncated median feerate (in duffs per byte) &quot;mediantime&quot;: xxxxx, (numeric) The block median time past &quot;mediantxsize&quot;: xxxxx, (numeric) Truncated median transaction size &quot;minfee&quot;: xxxxx, (numeric) Minimum fee in the block &quot;minfeerate&quot;: xxxxx, (numeric) Minimum feerate (in duffs per byte) &quot;mintxsize&quot;: xxxxx, (numeric) Minimum transaction size &quot;outs&quot;: xxxxx, (numeric) The number of outputs &quot;subsidy&quot;: xxxxx, (numeric) The block subsidy &quot;time&quot;: xxxxx, (numeric) The block time &quot;total_out&quot;: xxxxx, (numeric) Total amount in all outputs (excluding coinbase and thus reward [ie subsidy + totalfee]) &quot;total_size&quot;: xxxxx, (numeric) Total size of all non-coinbase transactions &quot;totalfee&quot;: xxxxx, (numeric) The fee total &quot;txs&quot;: xxxxx, (numeric) The number of transactions (excluding coinbase) &quot;utxo_increase&quot;: xxxxx, (numeric) The increase/decrease in the number of unspent outputs &quot;utxo_size_inc&quot;: xxxxx, (numeric) The increase/decrease in size for the utxo index (not discounting op_return and similar) }  "},{"title":"Examples​","type":1,"pageTitle":"getblockstats","url":"/docs/wallet/cli-wallet/commands/blockchain/getblockstats/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getblockstats&quot;, &quot;params&quot;: [1000 '[&quot;minfeerate&quot;,&quot;avgfeerate&quot;]'] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getmempoolentry","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolentry/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getmempoolentry","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolentry/#arguments","content":"Argument\tType\tDescription&quot;txid&quot;\t(string)\tThe transaction id (must be in mempool) Arguments: 1. &quot;txid&quot; (string, required) The transaction id (must be in mempool)  "},{"title":"Output​","type":1,"pageTitle":"getmempoolentry","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolentry/#output","content":"Result\tType\tDescription&quot;transactionid&quot;\t(string)\tThe transaction id of an in-mempool ancestor transaction Result: { (json object) &quot;size&quot; : n, (numeric) transaction size in bytes &quot;fee&quot; : n, (numeric) transaction fee in YERB &quot;modifiedfee&quot; : n, (numeric) transaction fee with fee deltas used for mining priority &quot;time&quot; : n, (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT &quot;height&quot; : n, (numeric) block height when transaction entered pool &quot;descendantcount&quot; : n, (numeric) number of in-mempool descendant transactions (including this one) &quot;descendantsize&quot; : n, (numeric) size of in-mempool descendants (including this one) &quot;descendantfees&quot; : n, (numeric) modified fees (see above) of in-mempool descendants (including this one) &quot;ancestorcount&quot; : n, (numeric) number of in-mempool ancestor transactions (including this one) &quot;ancestorsize&quot; : n, (numeric) size of in-mempool ancestors (including this one) &quot;ancestorfees&quot; : n, (numeric) modified fees (see above) of in-mempool ancestors (including this one) &quot;depends&quot; : [ (array) unconfirmed transactions used as inputs for this transaction &quot;transactionid&quot;, (string) parent transaction id ... ], &quot;instantlock&quot; : true|false (boolean) True if this transaction was locked via InstantSend }  "},{"title":"Examples​","type":1,"pageTitle":"getmempoolentry","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolentry/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getmempoolentry&quot;, &quot;params&quot;: [&quot;mytxid&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getmempooldescendants","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempooldescendants/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getmempooldescendants","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempooldescendants/#arguments","content":"Argument\tType\tDescription&quot;txid&quot;\t(string)\tThe transaction id (must be in mempool) verbose\t(boolean)\tTrue for a json object, false for array of transaction ids Arguments: 1. &quot;txid&quot; (string, required) The transaction id (must be in mempool) 2. verbose (boolean, optional, default=false) True for a json object, false for array of transaction ids  "},{"title":"Output​","type":1,"pageTitle":"getmempooldescendants","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempooldescendants/#output","content":"Result\tType\tDescription&quot;transactionid&quot;\t(string)\tThe transaction id of an in-mempool ancestor transaction Result (for verbose=false): [ (json array of strings) &quot;transactionid&quot; (string) The transaction id of an in-mempool descendant transaction ,... ] Result (for verbose=true): { (json object) &quot;transactionid&quot; : { (json object) &quot;size&quot; : n, (numeric) transaction size in bytes &quot;fee&quot; : n, (numeric) transaction fee in YERB &quot;modifiedfee&quot; : n, (numeric) transaction fee with fee deltas used for mining priority &quot;time&quot; : n, (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT &quot;height&quot; : n, (numeric) block height when transaction entered pool &quot;descendantcount&quot; : n, (numeric) number of in-mempool descendant transactions (including this one) &quot;descendantsize&quot; : n, (numeric) size of in-mempool descendants (including this one) &quot;descendantfees&quot; : n, (numeric) modified fees (see above) of in-mempool descendants (including this one) &quot;ancestorcount&quot; : n, (numeric) number of in-mempool ancestor transactions (including this one) &quot;ancestorsize&quot; : n, (numeric) size of in-mempool ancestors (including this one) &quot;ancestorfees&quot; : n, (numeric) modified fees (see above) of in-mempool ancestors (including this one) &quot;depends&quot; : [ (array) unconfirmed transactions used as inputs for this transaction &quot;transactionid&quot;, (string) parent transaction id ... ], &quot;instantlock&quot; : true|false (boolean) True if this transaction was locked via InstantSend }, ... }  "},{"title":"Examples​","type":1,"pageTitle":"getmempooldescendants","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempooldescendants/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getmempooldescendants&quot;, &quot;params&quot;: [&quot;mytxid&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getmerkleblocks","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getmerkleblocks/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getmerkleblocks","url":"/docs/wallet/cli-wallet/commands/blockchain/getmerkleblocks/#arguments","content":"Argument\tType\tDescription&quot;filter&quot;\t(string)\tThe hex encoded bloom filter &quot;hash&quot;\t(string)\tThe block hash count\t(numeric)\t(optional, default/max=2000) Arguments: 1. &quot;filter&quot; (string, required) The hex encoded bloom filter 2. &quot;hash&quot; (string, required) The block hash 3. count (numeric, optional, default/max=2000)  "},{"title":"Output​","type":1,"pageTitle":"getmerkleblocks","url":"/docs/wallet/cli-wallet/commands/blockchain/getmerkleblocks/#output","content":"Result\tType\tDescription&quot;data&quot;\t(string)\tThe transaction id of an in-mempool ancestor transaction Result: [ &quot;data&quot;, (string) A string that is serialized, hex-encoded data for a merkleblock. ... ]  "},{"title":"Examples​","type":1,"pageTitle":"getmerkleblocks","url":"/docs/wallet/cli-wallet/commands/blockchain/getmerkleblocks/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getmerkleblocks&quot;, &quot;params&quot;: [&quot;2303028005802040100040000008008400048141010000f8400420800080025004000004130000000000000001&quot; &quot;00000000007e1432d2af52e8463278bf556b55cf5049262f25634557e2e91202&quot; 2000] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getdifficulty","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getdifficulty/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getdifficulty","url":"/docs/wallet/cli-wallet/commands/blockchain/getdifficulty/#output","content":"Result\tType\tDescription&quot;n.nnn&quot;\t(numeric)\tthe proof-of-work difficulty as a multiple of the minimum difficulty. Result: n.nnn (numeric) the proof-of-work difficulty as a multiple of the minimum difficulty.  "},{"title":"Examples​","type":1,"pageTitle":"getdifficulty","url":"/docs/wallet/cli-wallet/commands/blockchain/getdifficulty/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getdifficulty&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getspecialtxes","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getspecialtxes/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getspecialtxes","url":"/docs/wallet/cli-wallet/commands/blockchain/getspecialtxes/#arguments","content":"Argument\tType\tDescription&quot;blockhash&quot;\t(string)\tThe block hash type\t(numeric)\tFilter special txes by type, -1 means all count\t(numeric)\tThe number of transactions to return skip\t(numeric)\tThe number of transactions to skip verbosity\t(numeric)\t0 for hashes, 1 for hex-encoded data, and 2 Arguments: 1. &quot;blockhash&quot; (string, required) The block hash 2. type (numeric, optional, default=-1) Filter special txes by type, -1 means all types 3. count (numeric, optional, default=10) The number of transactions to return 4. skip (numeric, optional, default=0) The number of transactions to skip 5. verbosity (numeric, optional, default=0) 0 for hashes, 1 for hex-encoded data, and 2 for json object  "},{"title":"Output​","type":1,"pageTitle":"getspecialtxes","url":"/docs/wallet/cli-wallet/commands/blockchain/getspecialtxes/#output","content":"Result\tType\tDescription&quot;txid&quot;\t(string)\tThe transaction id Result (for verbosity = 0): [ &quot;txid&quot; : &quot;xxxx&quot;, (string) The transaction id ] Result (for verbosity = 1): [ &quot;data&quot;, (string) A string that is serialized, hex-encoded data for the transaction ] Result (for verbosity = 2): [ (array of Objects) The transactions in the format of the getrawtransaction RPC. ..., ]  "},{"title":"Examples​","type":1,"pageTitle":"getspecialtxes","url":"/docs/wallet/cli-wallet/commands/blockchain/getspecialtxes/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getspecialtxes&quot;, &quot;params&quot;: [&quot;00000000000fd08c2fb661d2fcb0d49abb3a91e5f27082ce64feed3b4dede2e2&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getmempoolinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolinfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getmempoolinfo","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolinfo/#output","content":"Result\tType\tDescription&quot;size&quot;\t(numeric)\tCurrent tx count Result: { &quot;size&quot;: xxxxx, (numeric) Current tx count &quot;bytes&quot;: xxxxx, (numeric) Sum of all tx sizes &quot;usage&quot;: xxxxx, (numeric) Total memory usage for the mempool &quot;maxmempool&quot;: xxxxx, (numeric) Maximum memory usage for the mempool &quot;mempoolminfee&quot;: xxxxx (numeric) Minimum feerate (YERB per KB) for tx to be accepted &quot;instantsendlocks&quot;: xxxxx, (numeric) Number of unconfirmed instant send locks }  "},{"title":"Examples​","type":1,"pageTitle":"getmempoolinfo","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getmempoolinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"pruneblockchain","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/pruneblockchain/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"pruneblockchain","url":"/docs/wallet/cli-wallet/commands/blockchain/pruneblockchain/#arguments","content":"Argument\tType\tDescription&quot;height&quot;\t(string)\tThe block height to prune up to. May be set to a discrete height, or a unix timestamp to prune blocks whose block time is at least 2 hours older than the provided timestamp. Arguments: 1. &quot;height&quot; (numeric, required) The block height to prune up to. May be set to a discrete height, or a unix timestamp to prune blocks whose block time is at least 2 hours older than the provided timestamp.  "},{"title":"Output​","type":1,"pageTitle":"pruneblockchain","url":"/docs/wallet/cli-wallet/commands/blockchain/pruneblockchain/#output","content":"Result\tType\tDescriptionn\t(numeric)\tHeight of the last block pruned. Result: n (numeric) Height of the last block pruned.  "},{"title":"Examples​","type":1,"pageTitle":"pruneblockchain","url":"/docs/wallet/cli-wallet/commands/blockchain/pruneblockchain/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;pruneblockchain&quot;, &quot;params&quot;: [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"gettxoutsetinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxoutsetinfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"gettxoutsetinfo","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxoutsetinfo/#output","content":"Result\tType\tDescriptionheight\t(numeric)\t(numeric) The current block height (index) Result: { &quot;height&quot;:n, (numeric) The current block height (index) &quot;bestblock&quot;: &quot;hex&quot;, (string) the best block hash hex &quot;transactions&quot;: n, (numeric) The number of transactions &quot;txouts&quot;: n, (numeric) The number of unspent transaction outputs &quot;bogosize&quot;: n, (numeric) A meaningless metric for UTXO set size &quot;hash_serialized_2&quot;: &quot;hash&quot;, (string) The serialized hash &quot;disk_size&quot;: n, (numeric) The estimated size of the chainstate on disk &quot;total_amount&quot;: x.xxx (numeric) The total amount }  "},{"title":"Examples​","type":1,"pageTitle":"gettxoutsetinfo","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxoutsetinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;gettxoutsetinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"preciousblock","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/preciousblock/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"preciousblock","url":"/docs/wallet/cli-wallet/commands/blockchain/preciousblock/#arguments","content":"Argument\tType\tDescription&quot;blockhash&quot;\t(string)\tthe hash of the block to mark as precious Arguments: 1. &quot;blockhash&quot; (string, required) the hash of the block to mark as precious  "},{"title":"Output​","type":1,"pageTitle":"preciousblock","url":"/docs/wallet/cli-wallet/commands/blockchain/preciousblock/#output","content":"Result\tType\tDescription...\t(...)\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"preciousblock","url":"/docs/wallet/cli-wallet/commands/blockchain/preciousblock/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;preciousblock&quot;, &quot;params&quot;: [&quot;blockhash&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"gettxoutproof","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxoutproof/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"gettxoutproof","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxoutproof/#arguments","content":"Argument\tType\tDescription&quot;txids&quot;\t(string)\tA json array of txids to filter &quot;blockhash&quot;\t(string)\tIf specified, looks for txid in the block with this hash Arguments: 1. &quot;txids&quot; (string) A json array of txids to filter [ &quot;txid&quot; (string) A transaction hash ,... ] 2. &quot;blockhash&quot; (string, optional) If specified, looks for txid in the block with this hash  "},{"title":"Output​","type":1,"pageTitle":"gettxoutproof","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxoutproof/#output","content":"Result\tType\tDescription&quot;data&quot;\t(string)\tA string that is a serialized, hex-encoded data for the proof. Result: &quot;data&quot; (string) A string that is a serialized, hex-encoded data for the proof.  "},{"title":"Examples​","type":1,"pageTitle":"gettxoutproof","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxoutproof/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;gettxoutproof&quot;, &quot;params&quot;: [[&quot;mytxid&quot;,...], &quot;blockhash&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getmempoolancestors","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolancestors/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getmempoolancestors","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolancestors/#arguments","content":"Argument\tType\tDescription&quot;txid&quot;\t(string)\tThe transaction id (must be in mempool) verbose\t(boolean)\tTrue for a json object, false for array of transaction ids Arguments: 1. &quot;txid&quot; (string, required) The transaction id (must be in mempool) 2. verbose (boolean, optional, default=false) True for a json object, false for array of transaction ids  "},{"title":"Output​","type":1,"pageTitle":"getmempoolancestors","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolancestors/#output","content":"Result\tType\tDescription&quot;transactionid&quot;\t(string)\tThe transaction id of an in-mempool ancestor transaction Result (for verbose=false): [ (json array of strings) &quot;transactionid&quot; (string) The transaction id of an in-mempool ancestor transaction ,... ] Result (for verbose=true): { (json object) &quot;transactionid&quot; : { (json object) &quot;size&quot; : n, (numeric) transaction size in bytes &quot;fee&quot; : n, (numeric) transaction fee in YERB &quot;modifiedfee&quot; : n, (numeric) transaction fee with fee deltas used for mining priority &quot;time&quot; : n, (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT &quot;height&quot; : n, (numeric) block height when transaction entered pool &quot;descendantcount&quot; : n, (numeric) number of in-mempool descendant transactions (including this one) &quot;descendantsize&quot; : n, (numeric) size of in-mempool descendants (including this one) &quot;descendantfees&quot; : n, (numeric) modified fees (see above) of in-mempool descendants (including this one) &quot;ancestorcount&quot; : n, (numeric) number of in-mempool ancestor transactions (including this one) &quot;ancestorsize&quot; : n, (numeric) size of in-mempool ancestors (including this one) &quot;ancestorfees&quot; : n, (numeric) modified fees (see above) of in-mempool ancestors (including this one) &quot;depends&quot; : [ (array) unconfirmed transactions used as inputs for this transaction &quot;transactionid&quot;, (string) parent transaction id ... ], &quot;instantlock&quot; : true|false (boolean) True if this transaction was locked via InstantSend }, ... }  "},{"title":"Examples​","type":1,"pageTitle":"getmempoolancestors","url":"/docs/wallet/cli-wallet/commands/blockchain/getmempoolancestors/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getmempoolancestors&quot;, &quot;params&quot;: [&quot;mytxid&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"reconsiderblock","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/reconsiderblock/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"reconsiderblock","url":"/docs/wallet/cli-wallet/commands/blockchain/reconsiderblock/#arguments","content":"Argument\tType\tDescription&quot;blockhash&quot;\t(string)\tThe block hash Arguments: { &quot;blockhash&quot; (string, required) The block hash }   ## Examples ```bash curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;reconsiderblock&quot;, &quot;params&quot;: [&quot;blockhash&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getrawmempool","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/getrawmempool/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getrawmempool","url":"/docs/wallet/cli-wallet/commands/blockchain/getrawmempool/#arguments","content":"Argument\tType\tDescriptionverbose\t(boolean)\tTrue for a json object, false for array of transaction ids Arguments: 1. verbose (boolean, optional, default=false) True for a json object, false for array of transaction ids  "},{"title":"Output​","type":1,"pageTitle":"getrawmempool","url":"/docs/wallet/cli-wallet/commands/blockchain/getrawmempool/#output","content":"Result\tType\tDescription&quot;transactionid&quot;\t(string)\tThe transaction id Result: (for verbose = false): [ (json array of string) &quot;transactionid&quot; (string) The transaction id ,... ] Result: (for verbose = true): { (json object) &quot;transactionid&quot; : { (json object) &quot;size&quot; : n, (numeric) transaction size in bytes &quot;fee&quot; : n, (numeric) transaction fee in YERB &quot;modifiedfee&quot; : n, (numeric) transaction fee with fee deltas used for mining priority &quot;time&quot; : n, (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT &quot;height&quot; : n, (numeric) block height when transaction entered pool &quot;descendantcount&quot; : n, (numeric) number of in-mempool descendant transactions (including this one) &quot;descendantsize&quot; : n, (numeric) size of in-mempool descendants (including this one) &quot;descendantfees&quot; : n, (numeric) modified fees (see above) of in-mempool descendants (including this one) &quot;ancestorcount&quot; : n, (numeric) number of in-mempool ancestor transactions (including this one) &quot;ancestorsize&quot; : n, (numeric) size of in-mempool ancestors (including this one) &quot;ancestorfees&quot; : n, (numeric) modified fees (see above) of in-mempool ancestors (including this one) &quot;depends&quot; : [ (array) unconfirmed transactions used as inputs for this transaction &quot;transactionid&quot;, (string) parent transaction id ... ], &quot;instantlock&quot; : true|false (boolean) True if this transaction was locked via InstantSend }, ... }  "},{"title":"Examples​","type":1,"pageTitle":"getrawmempool","url":"/docs/wallet/cli-wallet/commands/blockchain/getrawmempool/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getrawmempool&quot;, &quot;params&quot;: [true] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"gettxout","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxout/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"gettxout","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxout/#arguments","content":"Argument\tType\tDescription&quot;txid&quot;\t(string)\tThe transaction id &quot;n&quot;\t(numeric)\tvout number &quot;include_mempool&quot;\t(boolean)\tWhether to include the mempool. Default: true. Note that an unspent output that is spent in the mempool won't appear. Arguments: 1. &quot;txid&quot; (string, required) The transaction id 2. &quot;n&quot; (numeric, required) vout number 3. &quot;include_mempool&quot; (boolean, optional) Whether to include the mempool. Default: true. Note that an unspent output that is spent in the mempool won't appear.  "},{"title":"Output​","type":1,"pageTitle":"gettxout","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxout/#output","content":"Result\tType\tDescription&quot;bestblock&quot;\t(string)\tthe block hash Result: { &quot;bestblock&quot; : &quot;hash&quot;, (string) the block hash &quot;confirmations&quot; : n, (numeric) The number of confirmations &quot;value&quot; : x.xxx, (numeric) The transaction value in YERB &quot;scriptPubKey&quot; : { (json object) &quot;asm&quot; : &quot;code&quot;, (string) &quot;hex&quot; : &quot;hex&quot;, (string) &quot;reqSigs&quot; : n, (numeric) Number of required signatures &quot;type&quot; : &quot;pubkeyhash&quot;, (string) The type, eg pubkeyhash &quot;addresses&quot; : [ (array of string) array of yerbas addresses &quot;address&quot; (string) yerbas address ,... ] }, &quot;coinbase&quot; : true|false (boolean) Coinbase or not }  "},{"title":"Examples​","type":1,"pageTitle":"gettxout","url":"/docs/wallet/cli-wallet/commands/blockchain/gettxout/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;gettxout&quot;, &quot;params&quot;: [&quot;txid&quot;, 1] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"verifychain","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/verifychain/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"verifychain","url":"/docs/wallet/cli-wallet/commands/blockchain/verifychain/#arguments","content":"Argument\tType\tDescriptionchecklevel\t(numeric)\tHow thorough the block verification is. nblocks\t(numeric)\tThe number of blocks to check. Arguments: 1. checklevel (numeric, optional, 0-4, default=3) How thorough the block verification is. 2. nblocks (numeric, optional, default=50, 0=all) The number of blocks to check.  "},{"title":"Output​","type":1,"pageTitle":"verifychain","url":"/docs/wallet/cli-wallet/commands/blockchain/verifychain/#output","content":"Result\tType\tDescription\ttrue\tfalse\t(boolean)\tVerified or not Result: true|false (boolean) Verified or not  "},{"title":"Examples​","type":1,"pageTitle":"verifychain","url":"/docs/wallet/cli-wallet/commands/blockchain/verifychain/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;verifychain&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"debug","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/control/debug/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"debug","url":"/docs/wallet/cli-wallet/commands/control/debug/#arguments","content":"Argument\tType\tDescription&quot;category&quot;\t(string)\tThe name of the debug category to turn on. Arguments: 1. &quot;category&quot; (string, required) The name of the debug category to turn on.  "},{"title":"Output​","type":1,"pageTitle":"debug","url":"/docs/wallet/cli-wallet/commands/control/debug/#output","content":"Result\tType\tDescription&quot;result&quot;\t(string)\t&quot;Debug mode: &quot; followed by the specified category. Result: result (string) &quot;Debug mode: &quot; followed by the specified category.  "},{"title":"Examples​","type":1,"pageTitle":"debug","url":"/docs/wallet/cli-wallet/commands/control/debug/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;debug&quot;, &quot;params&quot;: [yerbas+net] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"stop","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/control/stop/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"stop","url":"/docs/wallet/cli-wallet/commands/control/stop/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"stop","url":"/docs/wallet/cli-wallet/commands/control/stop/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;stop&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"verifytxoutproof","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/blockchain/verifytxoutproof/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"verifytxoutproof","url":"/docs/wallet/cli-wallet/commands/blockchain/verifytxoutproof/#arguments","content":"Argument\tType\tDescription&quot;proof&quot;\t(string)\tThe hex-encoded proof generated by gettxoutproof Arguments: 1. &quot;proof&quot; (string, required) The hex-encoded proof generated by gettxoutproof  "},{"title":"Output​","type":1,"pageTitle":"verifytxoutproof","url":"/docs/wallet/cli-wallet/commands/blockchain/verifytxoutproof/#output","content":"Result\tType\tDescription&quot;txid&quot;\t(array, strings)\tThe txid(s) which the proof commits to, or empty array if the proof is invalid Result: [&quot;txid&quot;] (array, strings) The txid(s) which the proof commits to, or empty array if the proof is invalid  "},{"title":"Examples​","type":1,"pageTitle":"verifytxoutproof","url":"/docs/wallet/cli-wallet/commands/blockchain/verifytxoutproof/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;gettxoutproof&quot;, &quot;params&quot;: [&quot;proof&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"uptime","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/control/uptime/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"uptime","url":"/docs/wallet/cli-wallet/commands/control/uptime/#output","content":"Result\tType\tDescriptionttt\t(numeric)\tThe number of seconds that the server has been running Result: ttt (numeric) The number of seconds that the server has been running  "},{"title":"Examples​","type":1,"pageTitle":"uptime","url":"/docs/wallet/cli-wallet/commands/control/uptime/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;uptime&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getmemoryinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/control/getmemoryinfo/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getmemoryinfo","url":"/docs/wallet/cli-wallet/commands/control/getmemoryinfo/#arguments","content":"Argument\tType\tDescription&quot;mode&quot;\t(string)\tDetermines what kind of information is returned. Arguments: 1. &quot;mode&quot; (string, optional, default: &quot;stats&quot;) Determines what kind of information is returned. - &quot;stats&quot; returns general statistics about memory usage in the daemon. - &quot;mallocinfo&quot; returns an XML string describing low-level heap state (only available if compiled with glibc 2.10+).  "},{"title":"Output​","type":1,"pageTitle":"getmemoryinfo","url":"/docs/wallet/cli-wallet/commands/control/getmemoryinfo/#output","content":"Result\tType\tDescription&quot;result&quot;\t(string)\t&quot;Debug mode: &quot; followed by the specified category. # Result (mode &quot;stats&quot;): { &quot;locked&quot;: { (json object) Information about locked memory manager &quot;used&quot;: xxxxx, (numeric) Number of bytes used &quot;free&quot;: xxxxx, (numeric) Number of bytes available in current arenas &quot;total&quot;: xxxxxxx, (numeric) Total number of bytes managed &quot;locked&quot;: xxxxxx, (numeric) Amount of bytes that succeeded locking. If this number is smaller than total, locking pages failed at some point and key data could be swapped to disk. &quot;chunks_used&quot;: xxxxx, (numeric) Number allocated chunks &quot;chunks_free&quot;: xxxxx, (numeric) Number unused chunks } } # Result (mode &quot;mallocinfo&quot;): &quot;&lt;malloc version=&quot;1&quot;&gt;...&quot;  "},{"title":"Examples​","type":1,"pageTitle":"getmemoryinfo","url":"/docs/wallet/cli-wallet/commands/control/getmemoryinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getmemoryinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/control/getinfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getinfo","url":"/docs/wallet/cli-wallet/commands/control/getinfo/#output","content":"Result\tType\tDescription&quot;deprecation-warning&quot;\t(string)\twarning that the getinfo command is deprecated and will be removed in a future version Result: { &quot;deprecation-warning&quot;: &quot;...&quot; (string) warning that the getinfo command is deprecated and will be removed in a future version &quot;version&quot;: xxxxx, (numeric) the server version &quot;protocolversion&quot;: xxxxx, (numeric) the protocol version &quot;walletversion&quot;: xxxxx, (numeric) the wallet version &quot;balance&quot;: xxxxxxx, (numeric) the total yerbas balance of the wallet &quot;privatesend_balance&quot;: xxxxxx, (numeric) the PrivateSend balance in YERB &quot;blocks&quot;: xxxxxx, (numeric) the current number of blocks processed in the server &quot;timeoffset&quot;: xxxxx, (numeric) the time offset &quot;connections&quot;: xxxxx, (numeric) the number of connections &quot;proxy&quot;: &quot;host:port&quot;, (string, optional) the proxy used by the server &quot;difficulty&quot;: xxxxxx, (numeric) the current difficulty &quot;testnet&quot;: true|false, (boolean) if the server is using testnet or not &quot;keypoololdest&quot;: xxxxxx, (numeric) the timestamp (seconds since Unix epoch) of the oldest pre-generated key in the key pool &quot;keypoolsize&quot;: xxxx, (numeric) how many new keys are pre-generated &quot;unlocked_until&quot;: ttt, (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked &quot;paytxfee&quot;: x.xxxx, (numeric) the transaction fee set in YERB/kB &quot;relayfee&quot;: x.xxxx, (numeric) minimum relay fee for transactions in YERB/kB &quot;errors&quot;: &quot;...&quot; (string) any error messages }  "},{"title":"Examples​","type":1,"pageTitle":"getinfo","url":"/docs/wallet/cli-wallet/commands/control/getinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"protx","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/evo/protx/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"protx","url":"/docs/wallet/cli-wallet/commands/evo/protx/#arguments","content":"Argument\tType\tDescription&quot;command&quot;\t(string)\tThe command to execute Arguments: 1. &quot;command&quot; (string, required) The command to execute  "},{"title":"Output​","type":1,"pageTitle":"protx","url":"/docs/wallet/cli-wallet/commands/evo/protx/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"protx","url":"/docs/wallet/cli-wallet/commands/evo/protx/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;bls&quot;, &quot;params&quot;: [yerbas+net] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"quorum","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/evo/quorum/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"quorum","url":"/docs/wallet/cli-wallet/commands/evo/quorum/#arguments","content":"Argument\tType\tDescription&quot;command&quot;\t(string)\tThe command to execute Arguments: 1. &quot;command&quot; (string, required) The command to execute  "},{"title":"Output​","type":1,"pageTitle":"quorum","url":"/docs/wallet/cli-wallet/commands/evo/quorum/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"quorum","url":"/docs/wallet/cli-wallet/commands/evo/quorum/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;quorum&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"help","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/control/help/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"help","url":"/docs/wallet/cli-wallet/commands/control/help/#arguments","content":"Argument\tType\tDescription&quot;command&quot;\t(string)\tThe command to get help on &quot;subCommand&quot;\t(string)\tThe subcommand to get help on. Please not that not all subcommands support this at the moment Arguments: 1. &quot;command&quot; (string, optional) The command to get help on 2. &quot;subCommand&quot; (string, optional) The subcommand to get help on. Please not that not all subcommands support this at the moment  "},{"title":"Output​","type":1,"pageTitle":"help","url":"/docs/wallet/cli-wallet/commands/control/help/#output","content":"Result\tType\tDescription&quot;result&quot;\t(string)\t&quot;Debug mode: &quot; followed by the specified category. Result: &quot;text&quot; (string) The help text  "},{"title":"Examples​","type":1,"pageTitle":"help","url":"/docs/wallet/cli-wallet/commands/control/help/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;help&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getgenerate","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/generating/getgenerate/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getgenerate","url":"/docs/wallet/cli-wallet/commands/generating/getgenerate/#output","content":"Result\tType\tDescription\ttrue\tfalse\t(boolean)\tIf the server is set to generate coins or not Result true|false (boolean) If the server is set to generate coins or not  "},{"title":"Examples​","type":1,"pageTitle":"getgenerate","url":"/docs/wallet/cli-wallet/commands/generating/getgenerate/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getgenerate&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"bls","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/evo/bls/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"bls","url":"/docs/wallet/cli-wallet/commands/evo/bls/#arguments","content":"Argument\tType\tDescription&quot;command&quot;\t(string)\tThe command to execute Arguments: 1. &quot;command&quot; (string, required) The command to execute  "},{"title":"Output​","type":1,"pageTitle":"bls","url":"/docs/wallet/cli-wallet/commands/evo/bls/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"bls","url":"/docs/wallet/cli-wallet/commands/evo/bls/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;bls&quot;, &quot;params&quot;: [yerbas+net] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"submitblock","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/mining/submitblock/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"submitblock","url":"/docs/wallet/cli-wallet/commands/mining/submitblock/#arguments","content":"Argument\tType\tDescription&quot;hexdata&quot;\t(string)\t(string) the hex-encoded block data to submit &quot;dummy&quot;\t(number)\tdummy value, for compatibility with BIP22. This value is ignored. Arguments: 1. &quot;hexdata&quot; (string, required) the hex-encoded block data to submit 2. &quot;dummy&quot; (optional) dummy value, for compatibility with BIP22. This value is ignored.  "},{"title":"Output​","type":1,"pageTitle":"submitblock","url":"/docs/wallet/cli-wallet/commands/mining/submitblock/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"submitblock","url":"/docs/wallet/cli-wallet/commands/mining/submitblock/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;submitblock&quot;, &quot;params&quot;: [&quot;mydata&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"generatetoaddress","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/generating/generatetoaddress/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"generatetoaddress","url":"/docs/wallet/cli-wallet/commands/generating/generatetoaddress/#arguments","content":"Argument\tType\tDescriptionnblocks\t(numeric)\tHow many blocks are generated immediately. address\t(string)\tThe address to send the newly generated Yerbas to. maxtries\t(numeric)\tHow many iterations to try (default = 1000000). Arguments: 1. nblocks (numeric, required) How many blocks are generated immediately. 2. address (string, required) The address to send the newly generated Yerbas to. 3. maxtries (numeric, optional) How many iterations to try (default = 1000000).  "},{"title":"Output​","type":1,"pageTitle":"generatetoaddress","url":"/docs/wallet/cli-wallet/commands/generating/generatetoaddress/#output","content":"Result\tType\tDescription&quot;blockhashes&quot;\t(array)\thashes of blocks generated Result: [ blockhashes ] (array) hashes of blocks generated  "},{"title":"Examples​","type":1,"pageTitle":"generatetoaddress","url":"/docs/wallet/cli-wallet/commands/generating/generatetoaddress/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;generatetoaddress&quot;, &quot;params&quot;: [11, &quot;address&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getnetworkhashps","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/mining/getnetworkhashps/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getnetworkhashps","url":"/docs/wallet/cli-wallet/commands/mining/getnetworkhashps/#arguments","content":"Argument\tType\tDescriptionnblocks\t(numeric)\tThe number of blocks, or -1 for blocks since last difficulty change. height\t(numeric)\tTo estimate at the time of the given height.  Arguments: 1. nblocks (numeric, optional, default=120) The number of blocks, or -1 for blocks since last difficulty change. 2. height (numeric, optional, default=-1) To estimate at the time of the given height.  "},{"title":"Output​","type":1,"pageTitle":"getnetworkhashps","url":"/docs/wallet/cli-wallet/commands/mining/getnetworkhashps/#output","content":"Result\tType\tDescriptionx\t(numeric)\tHashes per second estimated Result: x (numeric) Hashes per second estimated  "},{"title":"Examples​","type":1,"pageTitle":"getnetworkhashps","url":"/docs/wallet/cli-wallet/commands/mining/getnetworkhashps/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getnetworkhashps&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"generate","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/generating/generate/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"generate","url":"/docs/wallet/cli-wallet/commands/generating/generate/#arguments","content":"Argument\tType\tDescriptionnblocks\t(numeric)\tHow many blocks are generated immediately. maxtries\t(numeric)\tHow many iterations to try (default = 1000000). Arguments: 1. nblocks (numeric, required) How many blocks are generated immediately. 2. maxtries (numeric, optional) How many iterations to try (default = 1000000).  "},{"title":"Output​","type":1,"pageTitle":"generate","url":"/docs/wallet/cli-wallet/commands/generating/generate/#output","content":"Result\tType\tDescriptionblockhashes\t(array)\thashes of blocks generated Result: [ blockhashes ] (array) hashes of blocks generated  "},{"title":"Examples​","type":1,"pageTitle":"generate","url":"/docs/wallet/cli-wallet/commands/generating/generate/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;generate&quot;, &quot;params&quot;: [&quot;11&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"setgenerate","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/generating/setgenerate/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"setgenerate","url":"/docs/wallet/cli-wallet/commands/generating/setgenerate/#arguments","content":"Argument\tType\tDescriptiongenerate\t(boolean)\tSet to true to turn on generation, false to turn off. genproclimit\t(number)\tSet the processor limit for when generation is on. Can be -1 for unlimited. Arguments: 1. generate (boolean, required) Set to true to turn on generation, false to turn off. 2. genproclimit (numeric, optional) Set the processor limit for when generation is on. Can be -1 for unlimited.  "},{"title":"Output​","type":1,"pageTitle":"setgenerate","url":"/docs/wallet/cli-wallet/commands/generating/setgenerate/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"setgenerate","url":"/docs/wallet/cli-wallet/commands/generating/setgenerate/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;setgenerate&quot;, &quot;params&quot;: [true, 1] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"prioritisetransaction","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/mining/prioritisetransaction/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"prioritisetransaction","url":"/docs/wallet/cli-wallet/commands/mining/prioritisetransaction/#arguments","content":"Argument\tType\tDescription&quot;txid&quot;\t(string)\tThe transaction id. fee_delta\t(string)\tThe fee value (in duffs) to add (or subtract, if negative). The fee is not actually paid, only the algorithm for selecting transactions into a block considers the transaction as it would have paid a higher (or lower) fee. Arguments: 1. &quot;txid&quot; (string, required) The transaction id. 2. fee_delta (numeric, required) The fee value (in duffs) to add (or subtract, if negative). The fee is not actually paid, only the algorithm for selecting transactions into a block considers the transaction as it would have paid a higher (or lower) fee.  "},{"title":"Output​","type":1,"pageTitle":"prioritisetransaction","url":"/docs/wallet/cli-wallet/commands/mining/prioritisetransaction/#output","content":"Result\tType\tDescriptiontrue\t(boolean)\tReturns true Result: true (boolean) Returns true  "},{"title":"Examples​","type":1,"pageTitle":"prioritisetransaction","url":"/docs/wallet/cli-wallet/commands/mining/prioritisetransaction/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;prioritisetransaction&quot;, &quot;params&quot;: [&quot;txid&quot;, 10000] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getmininginfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/mining/getmininginfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getmininginfo","url":"/docs/wallet/cli-wallet/commands/mining/getmininginfo/#output","content":"Result\tType\tDescription&quot;blocks&quot;\t(number)\tThe current block Result: { &quot;blocks&quot;: nnn, (numeric) The current block &quot;currentblocksize&quot;: nnn, (numeric) The last block size &quot;currentblocktx&quot;: nnn, (numeric) The last block transaction &quot;difficulty&quot;: xxx.xxxxx (numeric) The current difficulty &quot;errors&quot;: &quot;...&quot; (string) Current errors &quot;networkhashps&quot;: nnn, (numeric) The network hashes per second &quot;hashespersec&quot;: nnn, (numeric) Your current hashes per second &quot;algos&quot;: nnn, (string) Current solving block algos orders &quot;pooledtx&quot;: n (numeric) The size of the mempool &quot;chain&quot;: &quot;xxxx&quot;, (string) current network name as defined in BIP70 (main, test, regtest) }  "},{"title":"Examples​","type":1,"pageTitle":"getmininginfo","url":"/docs/wallet/cli-wallet/commands/mining/getmininginfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getmininginfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getconnectioncount","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/getconnectioncount/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getconnectioncount","url":"/docs/wallet/cli-wallet/commands/network/getconnectioncount/#output","content":"Result\tType\tDescriptionn\t(number)\tThe connection count Result: n (numeric) The connection count  "},{"title":"Examples​","type":1,"pageTitle":"getconnectioncount","url":"/docs/wallet/cli-wallet/commands/network/getconnectioncount/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getconnectioncount&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getnettotals","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/getnettotals/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getnettotals","url":"/docs/wallet/cli-wallet/commands/network/getnettotals/#output","content":"Result\tType\tDescription&quot;totalbytesrecv&quot;\t(number)\tTotal bytes received Result: { &quot;totalbytesrecv&quot;: n, (numeric) Total bytes received &quot;totalbytessent&quot;: n, (numeric) Total bytes sent &quot;timemillis&quot;: t, (numeric) Current UNIX time in milliseconds &quot;uploadtarget&quot;: { &quot;timeframe&quot;: n, (numeric) Length of the measuring timeframe in seconds &quot;target&quot;: n, (numeric) Target in bytes &quot;target_reached&quot;: true|false, (boolean) True if target is reached &quot;serve_historical_blocks&quot;: true|false, (boolean) True if serving historical blocks &quot;bytes_left_in_cycle&quot;: t, (numeric) Bytes left in current time cycle &quot;time_left_in_cycle&quot;: t (numeric) Seconds left in current time cycle } }  "},{"title":"Examples​","type":1,"pageTitle":"getnettotals","url":"/docs/wallet/cli-wallet/commands/network/getnettotals/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getnettotals&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"disconnectnode","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/disconnectnode/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"disconnectnode","url":"/docs/wallet/cli-wallet/commands/network/disconnectnode/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\t(string) The IP address/port of the node &quot;nodeid&quot;\t(string)\t(string) The node ID (see getpeerinfo for node IDs) Arguments: Arguments: 1. &quot;address&quot; (string, optional) The IP address/port of the node 2. &quot;nodeid&quot; (number, optional) The node ID (see getpeerinfo for node IDs)  "},{"title":"Output​","type":1,"pageTitle":"disconnectnode","url":"/docs/wallet/cli-wallet/commands/network/disconnectnode/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"disconnectnode","url":"/docs/wallet/cli-wallet/commands/network/disconnectnode/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;disconnectnode&quot;, &quot;params&quot;: [&quot;192.168.0.6:9999&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/ curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;disconnectnode&quot;, &quot;params&quot;: [&quot;&quot;, 1] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getnetworkinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/getnetworkinfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getnetworkinfo","url":"/docs/wallet/cli-wallet/commands/network/getnetworkinfo/#output","content":"Result\tType\tDescription&quot;version&quot;\t(number)\tthe server version Result: { &quot;version&quot;: xxxxx, (numeric) the server version &quot;subversion&quot;: &quot;/Yerbas Core:x.x.x/&quot;, (string) the server subversion string &quot;protocolversion&quot;: xxxxx, (numeric) the protocol version &quot;localservices&quot;: &quot;xxxxxxxxxxxxxxxx&quot;, (string) the services we offer to the network &quot;localrelay&quot;: true|false, (bool) true if transaction relay is requested from peers &quot;timeoffset&quot;: xxxxx, (numeric) the time offset &quot;connections&quot;: xxxxx, (numeric) the number of connections &quot;networkactive&quot;: true|false, (bool) whether p2p networking is enabled &quot;networks&quot;: [ (array) information per network { &quot;name&quot;: &quot;xxx&quot;, (string) network (ipv4, ipv6 or onion) &quot;limited&quot;: true|false, (boolean) is the network limited using -onlynet? &quot;reachable&quot;: true|false, (boolean) is the network reachable? &quot;proxy&quot;: &quot;host:port&quot; (string) the proxy that is used for this network, or empty if none &quot;proxy_randomize_credentials&quot;: true|false, (string) Whether randomized credentials are used } ,... ], &quot;relayfee&quot;: x.xxxxxxxx, (numeric) minimum relay fee for transactions in YERB/kB &quot;incrementalfee&quot;: x.xxxxxxxx, (numeric) minimum fee increment for mempool limiting or BIP 125 replacement in YERB/kB &quot;localaddresses&quot;: [ (array) list of local addresses { &quot;address&quot;: &quot;xxxx&quot;, (string) network address &quot;port&quot;: xxx, (numeric) network port &quot;score&quot;: xxx (numeric) relative score } ,... ] &quot;warnings&quot;: &quot;...&quot; (string) any network warnings }  "},{"title":"Examples​","type":1,"pageTitle":"getnetworkinfo","url":"/docs/wallet/cli-wallet/commands/network/getnetworkinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getnetworkinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"listbanned","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/listbanned/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"listbanned","url":"/docs/wallet/cli-wallet/commands/network/listbanned/#output","content":"Result\tType\tDescription...\t...\t... Result: { }  "},{"title":"Examples​","type":1,"pageTitle":"listbanned","url":"/docs/wallet/cli-wallet/commands/network/listbanned/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listbanned&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"addnode","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/addnode/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"addnode","url":"/docs/wallet/cli-wallet/commands/network/addnode/#arguments","content":"Argument\tType\tDescription&quot;node&quot;\t(string)\tThe node (see getpeerinfo for nodes) &quot;command&quot;\t(string)\t'add' to add a node to the list, 'remove' to remove a node from the list, 'onetry' to try a connection to the node once  Arguments: 1. &quot;node&quot; (string, required) The node (see getpeerinfo for nodes) 2. &quot;command&quot; (string, required) 'add' to add a node to the list, 'remove' to remove a node from the list, 'onetry' to try a connection to the node once  "},{"title":"Output​","type":1,"pageTitle":"addnode","url":"/docs/wallet/cli-wallet/commands/network/addnode/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"addnode","url":"/docs/wallet/cli-wallet/commands/network/addnode/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;addnode&quot;, &quot;params&quot;: [&quot;192.168.0.6:9999&quot;, &quot;onetry&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"setnetworkactive","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/setnetworkactive/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"setnetworkactive","url":"/docs/wallet/cli-wallet/commands/network/setnetworkactive/#arguments","content":"Argument\tType\tDescription&quot;state&quot;\t(boolean)\ttrue to enable networking, false to disable Arguments: 1. &quot;state&quot; (boolean, required) true to enable networking, false to disable  "},{"title":"Output​","type":1,"pageTitle":"setnetworkactive","url":"/docs/wallet/cli-wallet/commands/network/setnetworkactive/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"setnetworkactive","url":"/docs/wallet/cli-wallet/commands/network/setnetworkactive/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;setnetworkactive&quot;, &quot;params&quot;: [true] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getaddednodeinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/getaddednodeinfo/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getaddednodeinfo","url":"/docs/wallet/cli-wallet/commands/network/getaddednodeinfo/#arguments","content":"Argument\tType\tDescription&quot;node&quot;\t(string)\tIf provided, return information about this specific node, otherwise all nodes are returned. Arguments: 1. &quot;node&quot; (string, optional) If provided, return information about this specific node, otherwise all nodes are returned.  "},{"title":"Output​","type":1,"pageTitle":"getaddednodeinfo","url":"/docs/wallet/cli-wallet/commands/network/getaddednodeinfo/#output","content":"Result\tType\tDescription&quot;addednode&quot;\t(string)\the node IP address or name (as provided to addnode) Result: [ { &quot;addednode&quot; : &quot;192.168.0.201&quot;, (string) The node IP address or name (as provided to addnode) &quot;connected&quot; : true|false, (boolean) If connected &quot;addresses&quot; : [ (list of objects) Only when connected = true { &quot;address&quot; : &quot;192.168.0.201:9999&quot;, (string) The yerbas server IP and port we're connected to &quot;connected&quot; : &quot;outbound&quot; (string) connection, inbound or outbound } ] } ,... ]  "},{"title":"Examples​","type":1,"pageTitle":"getaddednodeinfo","url":"/docs/wallet/cli-wallet/commands/network/getaddednodeinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaddednodeinfo&quot;, &quot;params&quot;: [&quot;192.168.0.201&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"clearbanned","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/clearbanned/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"clearbanned","url":"/docs/wallet/cli-wallet/commands/network/clearbanned/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"clearbanned","url":"/docs/wallet/cli-wallet/commands/network/clearbanned/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;clearbanned&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"combinerawtransaction","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/raw-transactions/combinerawtransaction/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"combinerawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/combinerawtransaction/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address Arguments: 1. &quot;txs&quot; (string) A json array of hex strings of partially signed transactions [ &quot;hexstring&quot; (string) A transaction hash ,... ]  "},{"title":"Output​","type":1,"pageTitle":"combinerawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/combinerawtransaction/#output","content":"Argument\tType\tDescription&quot;hexstring&quot;\t(string)\tThe hex-encoded raw transaction with signature(s) Result: &quot;hex&quot; (string) The hex-encoded raw transaction with signature(s)  "},{"title":"Examples​","type":1,"pageTitle":"combinerawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/combinerawtransaction/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;combinerawtransaction&quot;, &quot;params&quot;: [&quot;hex1&quot;, &quot;hex2&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"createrawtransaction","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/raw-transactions/createrawtransaction/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"createrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/createrawtransaction/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address Arguments: 1. &quot;inputs&quot; (array, required) A json array of json objects [ { &quot;txid&quot;:&quot;id&quot;, (string, required) The transaction id &quot;vout&quot;:n, (numeric, required) The output number &quot;sequence&quot;:n (numeric, optional) The sequence number } ,... ] 2. &quot;outputs&quot; (object, required) a json object with outputs { &quot;address&quot;: x.xxx, (numeric or string, required) The key is the yerbas address, the numeric value (can be string) is the YERB amount &quot;data&quot;: &quot;hex&quot; (string, required) The key is &quot;data&quot;, the value is hex encoded data ,... } 3. locktime (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs  "},{"title":"Output​","type":1,"pageTitle":"createrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/createrawtransaction/#output","content":"Result\tType\tDescription&quot;transaction&quot;\t(string)\thex string of the transaction Result: &quot;transaction&quot; (string) hex string of the transaction  "},{"title":"Examples​","type":1,"pageTitle":"createrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/createrawtransaction/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;createrawtransaction&quot;, &quot;params&quot;: [&quot;[{\\&quot;txid\\&quot;:\\&quot;myid\\&quot;,\\&quot;vout\\&quot;:0}]&quot;, &quot;{\\&quot;address\\&quot;:0.01}&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/ curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;createrawtransaction&quot;, &quot;params&quot;: [&quot;[{\\&quot;txid\\&quot;:\\&quot;myid\\&quot;,\\&quot;vout\\&quot;:0}]&quot;, &quot;{\\&quot;data\\&quot;:\\&quot;00010203\\&quot;}&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"ping","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/ping/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"ping","url":"/docs/wallet/cli-wallet/commands/network/ping/#output","content":"Result\tType\tDescription...\t...\t... Result: { }  "},{"title":"Examples​","type":1,"pageTitle":"ping","url":"/docs/wallet/cli-wallet/commands/network/ping/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;ping&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getpeerinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/getpeerinfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getpeerinfo","url":"/docs/wallet/cli-wallet/commands/network/getpeerinfo/#output","content":"Result\tType\tDescription&quot;id&quot;\t(number)\tPeer index Result: [ { &quot;id&quot;: n, (numeric) Peer index &quot;addr&quot;:&quot;host:port&quot;, (string) The IP address and port of the peer &quot;addrbind&quot;:&quot;ip:port&quot;, (string) Bind address of the connection to the peer &quot;addrlocal&quot;:&quot;ip:port&quot;, (string) Local address as reported by the peer &quot;services&quot;:&quot;xxxxxxxxxxxxxxxx&quot;, (string) The services offered &quot;verified_proregtx_hash&quot;: h, (hex) Only present when the peer is a smartnode and succesfully autheticated via MNAUTH. In this case, this field contains the protx hash of the smartnode &quot;relaytxes&quot;:true|false, (boolean) Whether peer has asked us to relay transactions to it &quot;lastsend&quot;: ttt, (numeric) The time in seconds since epoch (Jan 1 1970 GMT) of the last send &quot;lastrecv&quot;: ttt, (numeric) The time in seconds since epoch (Jan 1 1970 GMT) of the last receive &quot;bytessent&quot;: n, (numeric) The total bytes sent &quot;bytesrecv&quot;: n, (numeric) The total bytes received &quot;conntime&quot;: ttt, (numeric) The connection time in seconds since epoch (Jan 1 1970 GMT) &quot;timeoffset&quot;: ttt, (numeric) The time offset in seconds &quot;pingtime&quot;: n, (numeric) ping time (if available) &quot;minping&quot;: n, (numeric) minimum observed ping time (if any at all) &quot;pingwait&quot;: n, (numeric) ping wait (if non-zero) &quot;version&quot;: v, (numeric) The peer version, such as 7001 &quot;subver&quot;: &quot;/Yerbas Core:x.x.x/&quot;, (string) The string version &quot;inbound&quot;: true|false, (boolean) Inbound (true) or Outbound (false) &quot;addnode&quot;: true|false, (boolean) Whether connection was due to addnode/-connect or if it was an automatic/inbound connection &quot;startingheight&quot;: n, (numeric) The starting height (block) of the peer &quot;banscore&quot;: n, (numeric) The ban score &quot;synced_headers&quot;: n, (numeric) The last header we have in common with this peer &quot;synced_blocks&quot;: n, (numeric) The last block we have in common with this peer &quot;inflight&quot;: [ n, (numeric) The heights of blocks we're currently asking from this peer ... ], &quot;whitelisted&quot;: true|false, (boolean) Whether the peer is whitelisted &quot;bytessent_per_msg&quot;: { &quot;addr&quot;: n, (numeric) The total bytes sent aggregated by message type ... }, &quot;bytesrecv_per_msg&quot;: { &quot;addr&quot;: n, (numeric) The total bytes received aggregated by message type ... } } ,... ]  "},{"title":"Examples​","type":1,"pageTitle":"getpeerinfo","url":"/docs/wallet/cli-wallet/commands/network/getpeerinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getpeerinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getblocktemplate","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/mining/getblocktemplate/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getblocktemplate","url":"/docs/wallet/cli-wallet/commands/mining/getblocktemplate/#arguments","content":"Argument\tType\tDescription&quot;template_request&quot;\t(json object)\tA json object in the following spec Arguments: 1. template_request (json object, optional) A json object in the following spec { &quot;mode&quot;:&quot;template&quot; (string, optional) This must be set to &quot;template&quot;, &quot;proposal&quot; (see BIP 23), or omitted &quot;capabilities&quot;:[ (array, optional) A list of strings &quot;support&quot; (string) client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid' ,... ], &quot;rules&quot;:[ (array, optional) A list of strings &quot;support&quot; (string) client side supported softfork deployment ,... ] }  "},{"title":"Output​","type":1,"pageTitle":"getblocktemplate","url":"/docs/wallet/cli-wallet/commands/mining/getblocktemplate/#output","content":"Result\tType\tDescription&quot;capabilities&quot;\t(string)\tspecific client side supported features Result: { &quot;capabilities&quot; : [ &quot;capability&quot;, ... ], (array of strings) specific client side supported features &quot;version&quot; : n, (numeric) The preferred block version &quot;rules&quot; : [ &quot;rulename&quot;, ... ], (array of strings) specific block rules that are to be enforced &quot;vbavailable&quot; : { (json object) set of pending, supported versionbit (BIP 9) softfork deployments &quot;rulename&quot; : bitnumber (numeric) identifies the bit number as indicating acceptance and readiness for the named softfork rule ,... }, &quot;vbrequired&quot; : n, (numeric) bit mask of versionbits the server requires set in submissions &quot;previousblockhash&quot; : &quot;xxxx&quot;, (string) The hash of current highest block &quot;transactions&quot; : [ (array) contents of non-coinbase transactions that should be included in the next block { &quot;data&quot; : &quot;xxxx&quot;, (string) transaction data encoded in hexadecimal (byte-for-byte) &quot;hash&quot; : &quot;xxxx&quot;, (string) hash/id encoded in little-endian hexadecimal &quot;depends&quot; : [ (array) array of numbers n (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is ,... ], &quot;fee&quot;: n, (numeric) difference in value between transaction inputs and outputs (in duffs); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one &quot;sigops&quot; : n, (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any &quot;required&quot; : true|false (boolean) if provided and true, this transaction must be in the final block } ,... ], &quot;coinbaseaux&quot; : { (json object) data that should be included in the coinbase's scriptSig content &quot;flags&quot; : &quot;xx&quot; (string) key name is to be ignored, and value included in scriptSig }, &quot;coinbasevalue&quot; : n, (numeric) maximum allowable input to coinbase transaction, including the generation award and transaction fees (in duffs) &quot;coinbasetxn&quot; : { ... }, (json object) information for coinbase transaction &quot;target&quot; : &quot;xxxx&quot;, (string) The hash target &quot;mintime&quot; : xxx, (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT) &quot;mutable&quot; : [ (array of string) list of ways the block template may be changed &quot;value&quot; (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock' ,... ], &quot;noncerange&quot; : &quot;00000000ffffffff&quot;,(string) A range of valid nonces &quot;sigoplimit&quot; : n, (numeric) limit of sigops in blocks &quot;sizelimit&quot; : n, (numeric) limit of block size &quot;curtime&quot; : ttt, (numeric) current timestamp in seconds since epoch (Jan 1 1970 GMT) &quot;bits&quot; : &quot;xxxxxxxx&quot;, (string) compressed target of next block &quot;previousbits&quot; : &quot;xxxxxxxx&quot;, (string) compressed target of current highest block &quot;height&quot; : n (numeric) The height of the next block &quot;smartnode&quot; : [ (array) required smartnode payments that must be included in the next block { &quot;payee&quot; : &quot;xxxx&quot;, (string) payee address &quot;script&quot; : &quot;xxxx&quot;, (string) payee scriptPubKey &quot;amount&quot;: n (numeric) required amount to pay } }, &quot;smartnode_payments_started&quot; : true|false, (boolean) true, if smartnode payments started &quot;smartnode_payments_enforced&quot; : true|false, (boolean) true, if smartnode payments are enforced &quot;superblock&quot; : [ (array) required superblock payees that must be included in the next block { &quot;payee&quot; : &quot;xxxx&quot;, (string) payee address &quot;script&quot; : &quot;xxxx&quot;, (string) payee scriptPubKey &quot;amount&quot;: n (numeric) required amount to pay } ,... ], &quot;superblocks_started&quot; : true|false, (boolean) true, if superblock payments started &quot;superblocks_enabled&quot; : true|false, (boolean) true, if superblock payments are enabled &quot;coinbase_payload&quot; : &quot;xxxxxxxx&quot; (string) coinbase transaction payload data encoded in hexadecimal }  "},{"title":"Examples​","type":1,"pageTitle":"getblocktemplate","url":"/docs/wallet/cli-wallet/commands/mining/getblocktemplate/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getblocktemplate&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"decoderawtransaction","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/raw-transactions/decoderawtransaction/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"decoderawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/decoderawtransaction/#arguments","content":"Argument\tType\tDescription&quot;hexstring&quot;\t(string)\tThe transaction hex string Arguments: 1. &quot;hexstring&quot; (string, required) The transaction hex string  "},{"title":"Output​","type":1,"pageTitle":"decoderawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/decoderawtransaction/#output","content":"Result\tType\tDescription...\t...\t... Result: { &quot;txid&quot; : &quot;id&quot;, (string) The transaction id &quot;size&quot; : n, (numeric) The transaction size &quot;version&quot; : n, (numeric) The version &quot;type&quot; : n, (numeric) The type &quot;locktime&quot; : ttt, (numeric) The lock time &quot;vin&quot; : [ (array of json objects) { &quot;txid&quot;: &quot;id&quot;, (string) The transaction id &quot;vout&quot;: n, (numeric) The output number &quot;scriptSig&quot;: { (json object) The script &quot;asm&quot;: &quot;asm&quot;, (string) asm &quot;hex&quot;: &quot;hex&quot; (string) hex }, &quot;sequence&quot;: n (numeric) The script sequence number } ,... ], &quot;vout&quot; : [ (array of json objects) { &quot;value&quot; : x.xxx, (numeric) The value in YERB &quot;n&quot; : n, (numeric) index &quot;scriptPubKey&quot; : { (json object) &quot;asm&quot; : &quot;asm&quot;, (string) the asm &quot;hex&quot; : &quot;hex&quot;, (string) the hex &quot;reqSigs&quot; : n, (numeric) The required sigs &quot;type&quot; : &quot;pubkeyhash&quot;, (string) The type, eg 'pubkeyhash' &quot;addresses&quot; : [ (json array of string) &quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG&quot; (string) Yerbas address ,... ] } } ,... ], &quot;extraPayloadSize&quot; : n (numeric) Size of DIP2 extra payload. Only present if it's a special TX &quot;extraPayload&quot; : &quot;hex&quot; (string) Hex encoded DIP2 extra payload data. Only present if it's a special TX }  "},{"title":"Examples​","type":1,"pageTitle":"decoderawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/decoderawtransaction/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;decoderawtransaction&quot;, &quot;params&quot;: [&quot;hexstring&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"decodescript","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/raw-transactions/decodescript/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"decodescript","url":"/docs/wallet/cli-wallet/commands/raw-transactions/decodescript/#arguments","content":"Argument\tType\tDescription&quot;hexstring&quot;\t(string)\tthe hex encoded script Arguments: 1. &quot;hexstring&quot; (string) the hex encoded script  "},{"title":"Output​","type":1,"pageTitle":"decodescript","url":"/docs/wallet/cli-wallet/commands/raw-transactions/decodescript/#output","content":"Result\tType\tDescription...\t...\t... Result: { &quot;asm&quot;:&quot;asm&quot;, (string) Script public key &quot;hex&quot;:&quot;hex&quot;, (string) hex encoded public key &quot;type&quot;:&quot;type&quot;, (string) The output type &quot;reqSigs&quot;: n, (numeric) The required signatures &quot;addresses&quot;: [ (json array of string) &quot;address&quot; (string) yerbas address ,... ], &quot;p2sh&quot;,&quot;address&quot; (string) address of P2SH script wrapping this redeem script (not returned if the script is already a P2SH). }  "},{"title":"Examples​","type":1,"pageTitle":"decodescript","url":"/docs/wallet/cli-wallet/commands/raw-transactions/decodescript/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;decodescript&quot;, &quot;params&quot;: [&quot;hexstring&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"createmultisig","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/util/createmultisig/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"createmultisig","url":"/docs/wallet/cli-wallet/commands/util/createmultisig/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address Arguments: 1. nrequired (numeric, required) The number of required signatures out of the n keys or addresses. 2. &quot;keys&quot; (string, required) A json array of keys which are yerbas addresses or hex-encoded public keys [ &quot;key&quot; (string) yerbas address or hex-encoded public key ,... ]  "},{"title":"Output​","type":1,"pageTitle":"createmultisig","url":"/docs/wallet/cli-wallet/commands/util/createmultisig/#output","content":"Result\tType\tDescription...\t...\t... Result: { &quot;address&quot;:&quot;multisigaddress&quot;, (string) The value of the new multisig address. &quot;redeemScript&quot;:&quot;script&quot; (string) The string value of the hex-encoded redemption script. }  "},{"title":"Examples​","type":1,"pageTitle":"createmultisig","url":"/docs/wallet/cli-wallet/commands/util/createmultisig/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;createmultisig&quot;, &quot;params&quot;: [2, &quot;[\\&quot;Xt4qk9uKvQYAonVGSZNXqxeDmtjaEWgfrs\\&quot;,\\&quot;XoSoWQkpgLpppPoyyzbUFh1fq2RBvW6UK1\\&quot;]&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"estimatefee","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/util/estimatefee/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"estimatefee","url":"/docs/wallet/cli-wallet/commands/util/estimatefee/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address Arguments: 1. nblocks (numeric, required)  "},{"title":"Output​","type":1,"pageTitle":"estimatefee","url":"/docs/wallet/cli-wallet/commands/util/estimatefee/#output","content":"Result\tType\tDescription...\t...\t... Result: n (numeric) estimated fee-per-kilobyte  "},{"title":"Examples​","type":1,"pageTitle":"estimatefee","url":"/docs/wallet/cli-wallet/commands/util/estimatefee/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;estimatefee&quot;, &quot;params&quot;: [6] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"setban","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/network/setban/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"setban","url":"/docs/wallet/cli-wallet/commands/network/setban/#arguments","content":"Argument\tType\tDescription&quot;subnet&quot;\t(string)\tThe IP/Subnet (see getpeerinfo for nodes IP) with an optional netmask (default is /32 = single IP) &quot;command&quot;\t(string)\t'add' to add an IP/Subnet to the list, 'remove' to remove an IP/Subnet from the list &quot;bantime&quot;\t(string)\ttime in seconds how long (or until when if [absolute] is set) the IP is banned (0 or empty means using the default time of 24h which can also be overwritten by the -bantime startup argument) &quot;absolute&quot;\t(string)\tIf set, the bantime must be an absolute timestamp in seconds since epoch (Jan 1 1970 GMT) Arguments: 1. &quot;subnet&quot; (string, required) The IP/Subnet (see getpeerinfo for nodes IP) with an optional netmask (default is /32 = single IP) 2. &quot;command&quot; (string, required) 'add' to add an IP/Subnet to the list, 'remove' to remove an IP/Subnet from the list 3. &quot;bantime&quot; (numeric, optional) time in seconds how long (or until when if [absolute] is set) the IP is banned (0 or empty means using the default time of 24h which can also be overwritten by the -bantime startup argument) 4. &quot;absolute&quot; (boolean, optional) If set, the bantime must be an absolute timestamp in seconds since epoch (Jan 1 1970 GMT)  "},{"title":"Output​","type":1,"pageTitle":"setban","url":"/docs/wallet/cli-wallet/commands/network/setban/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"setban","url":"/docs/wallet/cli-wallet/commands/network/setban/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;setban&quot;, &quot;params&quot;: [&quot;192.168.0.6&quot;, &quot;add&quot;, 86400] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getrawtransaction","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/raw-transactions/getrawtransaction/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/getrawtransaction/#arguments","content":"Argument\tType\tDescription&quot;txid&quot;\t(string)\tThe transaction id Arguments: 1. &quot;txid&quot; (string, required) The transaction id 2. verbose (bool, optional, default=false) If false, return a string, otherwise return a json object  "},{"title":"Output​","type":1,"pageTitle":"getrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/getrawtransaction/#output","content":"Result\tType\tDescription&quot;data&quot;\t(string)\tThe serialized, hex-encoded data for 'txid' Result (if verbose is not set or set to false): &quot;data&quot; (string) The serialized, hex-encoded data for 'txid' Result (if verbose is set to true): { &quot;txid&quot; : &quot;id&quot;, (string) The transaction id (same as provided) &quot;size&quot; : n, (numeric) The transaction size &quot;version&quot; : n, (numeric) The version &quot;locktime&quot; : ttt, (numeric) The lock time &quot;vin&quot; : [ (array of json objects) { &quot;txid&quot;: &quot;id&quot;, (string) The transaction id &quot;vout&quot;: n, (numeric) &quot;scriptSig&quot;: { (json object) The script &quot;asm&quot;: &quot;asm&quot;, (string) asm &quot;hex&quot;: &quot;hex&quot; (string) hex }, &quot;sequence&quot;: n (numeric) The script sequence number } ,... ], &quot;vout&quot; : [ (array of json objects) { &quot;value&quot; : x.xxx, (numeric) The value in YERB &quot;n&quot; : n, (numeric) index &quot;scriptPubKey&quot; : { (json object) &quot;asm&quot; : &quot;asm&quot;, (string) the asm &quot;hex&quot; : &quot;hex&quot;, (string) the hex &quot;reqSigs&quot; : n, (numeric) The required sigs &quot;type&quot; : &quot;pubkeyhash&quot;, (string) The type, eg 'pubkeyhash' &quot;addresses&quot; : [ (json array of string) &quot;address&quot; (string) yerbas address ,... ] } } ,... ], &quot;extraPayloadSize&quot; : n (numeric) Size of DIP2 extra payload. Only present if it's a special TX &quot;extraPayload&quot; : &quot;hex&quot; (string) Hex encoded DIP2 extra payload data. Only present if it's a special TX &quot;hex&quot; : &quot;data&quot;, (string) The serialized, hex-encoded data for 'txid' &quot;blockhash&quot; : &quot;hash&quot;, (string) the block hash &quot;height&quot; : n, (numeric) The block height &quot;confirmations&quot; : n, (numeric) The confirmations &quot;time&quot; : ttt, (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT) &quot;blocktime&quot; : ttt (numeric) The block time in seconds since epoch (Jan 1 1970 GMT) &quot;instantlock&quot; : true|false, (bool) Current transaction lock state &quot;instantlock_internal&quot; : true|false, (bool) Current internal transaction lock state &quot;chainlock&quot; : true|false, (bool) The state of the corresponding block chainlock }  "},{"title":"Examples​","type":1,"pageTitle":"getrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/getrawtransaction/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getrawtransaction&quot;, &quot;params&quot;: [&quot;mytxid&quot;, true] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"signmessagewithprivkey","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/util/signmessagewithprivkey/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"signmessagewithprivkey","url":"/docs/wallet/cli-wallet/commands/util/signmessagewithprivkey/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address Arguments: 1. &quot;privkey&quot; (string, required) The private key to sign the message with. 2. &quot;message&quot; (string, required) The message to create a signature of.  "},{"title":"Output​","type":1,"pageTitle":"signmessagewithprivkey","url":"/docs/wallet/cli-wallet/commands/util/signmessagewithprivkey/#output","content":"Result\tType\tDescription...\t...\t... Result: &quot;signature&quot; (string) The signature of the message encoded in base 64  "},{"title":"Examples​","type":1,"pageTitle":"signmessagewithprivkey","url":"/docs/wallet/cli-wallet/commands/util/signmessagewithprivkey/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;signmessagewithprivkey&quot;, &quot;params&quot;: [&quot;privkey&quot;, &quot;my message&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"fundrawtransaction","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/raw-transactions/fundrawtransaction/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"fundrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/fundrawtransaction/#arguments","content":"Argument\tType\tDescription&quot;hexstring&quot;\t(string)\tThe hex string of the raw transaction Arguments: 1. &quot;hexstring&quot; (string, required) The hex string of the raw transaction 2. options (object, optional) { &quot;changeAddress&quot; (string, optional, default pool address) The yerbas address to receive the change &quot;changePosition&quot; (numeric, optional, default random) The index of the change output &quot;includeWatching&quot; (boolean, optional, default false) Also select inputs which are watch only &quot;lockUnspents&quot; (boolean, optional, default false) Lock selected unspent outputs &quot;feeRate&quot; (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (YERB per KB) &quot;subtractFeeFromOutputs&quot; (array, optional) A json array of integers. The fee will be equally deducted from the amount of each specified output. The outputs are specified by their zero-based index, before any change output is added. Those recipients will receive less yerbas than you enter in their corresponding amount field. If no outputs are specified here, the sender pays the fee. [vout_index,...] &quot;conf_target&quot; (numeric, optional) Confirmation target (in blocks) &quot;estimate_mode&quot; (string, optional, default=UNSET) The fee estimate mode, must be one of: &quot;UNSET&quot; &quot;ECONOMICAL&quot; &quot;CONSERVATIVE&quot; } for backward compatibility: passing in a true instead of an object will result in {&quot;includeWatching&quot;:true}  "},{"title":"Output​","type":1,"pageTitle":"fundrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/fundrawtransaction/#output","content":"Result\tType\tDescription&quot;hex&quot;\t(string)\tThe resulting raw transaction (hex-encoded string) &quot;fee&quot;\t(numeric)\tFee in YERB the resulting transaction pays &quot;changepos&quot;\t(numeric)\tThe position of the added change output, or -1 Result: { &quot;hex&quot;: &quot;value&quot;, (string) The resulting raw transaction (hex-encoded string) &quot;fee&quot;: n, (numeric) Fee in YERB the resulting transaction pays &quot;changepos&quot;: n (numeric) The position of the added change output, or -1 }  "},{"title":"Examples​","type":1,"pageTitle":"fundrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/fundrawtransaction/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaddressbalance&quot;, &quot;params&quot;: [{&quot;addresses&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg&quot;]}] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"dumphdinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/dumphdinfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"dumphdinfo","url":"/docs/wallet/cli-wallet/commands/wallet/dumphdinfo/#output","content":"Result\tType\tDescription&quot;hdseed&quot;\t(string)\tThe HD seed (bip32, in hex) &quot;mnemonic&quot;\t(string)\tThe mnemonic for this HD wallet (bip39, english &quot;mnemonicpassphrase&quot;\t(string)\tThe mnemonic passphrase for this HD wallet (bip39) Result: { &quot;hdseed&quot;: &quot;seed&quot;, (string) The HD seed (bip32, in hex) &quot;mnemonic&quot;: &quot;words&quot;, (string) The mnemonic for this HD wallet (bip39, english words) &quot;mnemonicpassphrase&quot;: &quot;passphrase&quot;, (string) The mnemonic passphrase for this HD wallet (bip39) }  "},{"title":"Examples​","type":1,"pageTitle":"dumphdinfo","url":"/docs/wallet/cli-wallet/commands/wallet/dumphdinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;dumphdinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"sendrawtransaction","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/raw-transactions/sendrawtransaction/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"sendrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/sendrawtransaction/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address Arguments: 1. &quot;hexstring&quot; (string, required) The hex string of the raw transaction) 2. allowhighfees (boolean, optional, default=false) Allow high fees 3. instantsend (boolean, optional, default=false) Deprecated and ignored 4. bypasslimits (boolean, optional, default=false) Bypass transaction policy limits  "},{"title":"Output​","type":1,"pageTitle":"sendrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/sendrawtransaction/#output","content":"Result\tType\tDescription&quot;hex&quot;\t(string)\tThe transaction hash in hex Result: &quot;hex&quot; (string) The transaction hash in hex  "},{"title":"Examples​","type":1,"pageTitle":"sendrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/sendrawtransaction/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;sendrawtransaction&quot;, &quot;params&quot;: [&quot;signedhex&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"verifymessage","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/util/verifymessage/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"verifymessage","url":"/docs/wallet/cli-wallet/commands/util/verifymessage/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address Arguments: 1. &quot;address&quot; (string, required) The yerbas address to use for the signature. 2. &quot;signature&quot; (string, required) The signature provided by the signer in base 64 encoding (see signmessage). 3. &quot;message&quot; (string, required) The message that was signed.  "},{"title":"Output​","type":1,"pageTitle":"verifymessage","url":"/docs/wallet/cli-wallet/commands/util/verifymessage/#output","content":"Result\tType\tDescription...\t...\t... Result: true|false (boolean) If the signature is verified or not.  "},{"title":"Examples​","type":1,"pageTitle":"verifymessage","url":"/docs/wallet/cli-wallet/commands/util/verifymessage/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;verifymessage&quot;, &quot;params&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG&quot;, &quot;signature&quot;, &quot;my message&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"abortrescan","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/abortrescan/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"abortrescan","url":"/docs/wallet/cli-wallet/commands/wallet/abortrescan/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"abortrescan","url":"/docs/wallet/cli-wallet/commands/wallet/abortrescan/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;abortrescan&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"signrawtransaction","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/raw-transactions/signrawtransaction/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"signrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/signrawtransaction/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address Arguments: 1. &quot;hexstring&quot; (string, required) The transaction hex string 2. &quot;prevtxs&quot; (string, optional) An json array of previous dependent transaction outputs [ (json array of json objects, or 'null' if none provided) { &quot;txid&quot;:&quot;id&quot;, (string, required) The transaction id &quot;vout&quot;:n, (numeric, required) The output number &quot;scriptPubKey&quot;: &quot;hex&quot;, (string, required) script key &quot;redeemScript&quot;: &quot;hex&quot;, (string, required for P2SH) redeem script &quot;amount&quot;: value (numeric, required) The amount spent } ,... ] 3. &quot;privkeys&quot; (string, optional) A json array of base58-encoded private keys for signing [ (json array of strings, or 'null' if none provided) &quot;privatekey&quot; (string) private key in base58-encoding ,... ] 4. &quot;sighashtype&quot; (string, optional, default=ALL) The signature hash type. Must be one of &quot;ALL&quot; &quot;NONE&quot; &quot;SINGLE&quot; &quot;ALL|ANYONECANPAY&quot; &quot;NONE|ANYONECANPAY&quot; &quot;SINGLE|ANYONECANPAY&quot;  "},{"title":"Output​","type":1,"pageTitle":"signrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/signrawtransaction/#output","content":"Result\tType\tDescription...\t...\t... Result: { &quot;hex&quot; : &quot;value&quot;, (string) The hex-encoded raw transaction with signature(s) &quot;complete&quot; : true|false, (boolean) If the transaction has a complete set of signatures &quot;errors&quot; : [ (json array of objects) Script verification errors (if there are any) { &quot;txid&quot; : &quot;hash&quot;, (string) The hash of the referenced, previous transaction &quot;vout&quot; : n, (numeric) The index of the output to spent and used as input &quot;scriptSig&quot; : &quot;hex&quot;, (string) The hex-encoded signature script &quot;sequence&quot; : n, (numeric) Script sequence number &quot;error&quot; : &quot;text&quot; (string) Verification or signing error related to the input } ,... ] }  "},{"title":"Examples​","type":1,"pageTitle":"signrawtransaction","url":"/docs/wallet/cli-wallet/commands/raw-transactions/signrawtransaction/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;signrawtransaction&quot;, &quot;params&quot;: [&quot;myhex&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"addmultisigaddress","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/addmultisigaddress/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"addmultisigaddress","url":"/docs/wallet/cli-wallet/commands/wallet/addmultisigaddress/#arguments","content":"Argument\tType\tDescriptionnrequired\t(number)\tThe number of required signatures out of the n keys or &quot;keys&quot;\t(string)\tA json array of yerbas addresses or hex-encoded public keys &quot;account&quot;\t(string)\tDEPRECATED. An account to assign the addresses to. Arguments: 1. nrequired (numeric, required) The number of required signatures out of the n keys or addresses. 2. &quot;keys&quot; (string, required) A json array of yerbas addresses or hex-encoded public keys [ &quot;address&quot; (string) yerbas address or hex-encoded public key ..., ] 3. &quot;account&quot; (string, optional) DEPRECATED. An account to assign the addresses to.  "},{"title":"Output​","type":1,"pageTitle":"addmultisigaddress","url":"/docs/wallet/cli-wallet/commands/wallet/addmultisigaddress/#output","content":"Result\tType\tDescription&quot;address&quot;\t(string)\tA yerbas address associated with the keys.  Result: &quot;address&quot; (string) A yerbas address associated with the keys.  "},{"title":"Examples​","type":1,"pageTitle":"addmultisigaddress","url":"/docs/wallet/cli-wallet/commands/wallet/addmultisigaddress/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;addmultisigaddress&quot;, &quot;params&quot;: [2, &quot;[\\&quot;Xt4qk9uKvQYAonVGSZNXqxeDmtjaEWgfrS\\&quot;,\\&quot;XoSoWQkpgLpppPoyyzbUFh1fq2RBvW6UK2\\&quot;]&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"encryptwallet","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/encryptwallet/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"encryptwallet","url":"/docs/wallet/cli-wallet/commands/wallet/encryptwallet/#arguments","content":"Argument\tType\tDescription&quot;passphrase&quot;\t(string)\tThe pass phrase to encrypt the wallet with. It must be at least 1 character, but should be long. Arguments: 1. &quot;passphrase&quot; (string) The pass phrase to encrypt the wallet with. It must be at least 1 character, but should be long.  "},{"title":"Output​","type":1,"pageTitle":"encryptwallet","url":"/docs/wallet/cli-wallet/commands/wallet/encryptwallet/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"encryptwallet","url":"/docs/wallet/cli-wallet/commands/wallet/encryptwallet/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;encryptwallet&quot;, &quot;params&quot;: [&quot;my pass phrase&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getaccountaddress","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/getaccountaddress/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getaccountaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getaccountaddress/#arguments","content":"Argument\tType\tDescription&quot;account&quot;\t(string)\tThe account name for the address. It can also be set to the empty string &quot;&quot; to represent the default account. The account does not need to exist, it will be created and a new address created if there is no account by the given name. Arguments: 1. &quot;account&quot; (string, required) The account name for the address. It can also be set to the empty string &quot;&quot; to represent the default account. The account does not need to exist, it will be created and a new address created if there is no account by the given name.  "},{"title":"Output​","type":1,"pageTitle":"getaccountaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getaccountaddress/#output","content":"Result\tType\tDescription&quot;address&quot;\t(string)\tThe account yerbas address Result: &quot;address&quot; (string) The account yerbas address  "},{"title":"Examples​","type":1,"pageTitle":"getaccountaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getaccountaddress/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaccount&quot;, &quot;params&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getaddressesbyaccount","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/getaddressesbyaccount/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getaddressesbyaccount","url":"/docs/wallet/cli-wallet/commands/wallet/getaddressesbyaccount/#arguments","content":"Argument\tType\tDescription&quot;account&quot;\t(string)\tThe account name.  Arguments: 1. &quot;account&quot; (string, required) The account name.  "},{"title":"Output​","type":1,"pageTitle":"getaddressesbyaccount","url":"/docs/wallet/cli-wallet/commands/wallet/getaddressesbyaccount/#output","content":"Result\tType\tDescription&quot;address&quot;\t(string)\ta yerbas address associated with the given account Result: [ (json array of string) &quot;address&quot; (string) a yerbas address associated with the given account ,... ]  "},{"title":"Examples​","type":1,"pageTitle":"getaddressesbyaccount","url":"/docs/wallet/cli-wallet/commands/wallet/getaddressesbyaccount/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaddressesbyaccount&quot;, &quot;params&quot;: [&quot;tabby&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"estimatesmartfee","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/util/estimatesmartfee/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"estimatesmartfee","url":"/docs/wallet/cli-wallet/commands/util/estimatesmartfee/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe base58check encoded address Arguments: 1. conf_target (numeric) Confirmation target in blocks (1 - 1008) 2. &quot;estimate_mode&quot; (string, optional, default=CONSERVATIVE) The fee estimate mode. Whether to return a more conservative estimate which also satisfies a longer history. A conservative estimate potentially returns a higher feerate and is more likely to be sufficient for the desired target, but is not as responsive to short term drops in the prevailing fee market. Must be one of: &quot;UNSET&quot; (defaults to CONSERVATIVE) &quot;ECONOMICAL&quot; &quot;CONSERVATIVE&quot;  "},{"title":"Output​","type":1,"pageTitle":"estimatesmartfee","url":"/docs/wallet/cli-wallet/commands/util/estimatesmartfee/#output","content":"Result\tType\tDescription...\t...\t... Result: { &quot;feerate&quot; : x.x, (numeric, optional) estimate fee-per-kilobyte (in YERB) &quot;errors&quot;: [ str... ] (json array of strings, optional) Errors encountered during processing &quot;blocks&quot; : n (numeric) block number where estimate was found }  "},{"title":"Examples​","type":1,"pageTitle":"estimatesmartfee","url":"/docs/wallet/cli-wallet/commands/util/estimatesmartfee/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;estimatesmartfee&quot;, &quot;params&quot;: [5] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"dumpwallet","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/dumpwallet/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"dumpwallet","url":"/docs/wallet/cli-wallet/commands/wallet/dumpwallet/#arguments","content":"Argument\tType\tDescription&quot;filename&quot;\t(string)\tThe filename Arguments: 1. &quot;filename&quot; (string, required) The filename  "},{"title":"Output​","type":1,"pageTitle":"dumpwallet","url":"/docs/wallet/cli-wallet/commands/wallet/dumpwallet/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"dumpwallet","url":"/docs/wallet/cli-wallet/commands/wallet/dumpwallet/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;dumpwallet&quot;, &quot;params&quot;: [&quot;test&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"validateaddress","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/util/validateaddress/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"validateaddress","url":"/docs/wallet/cli-wallet/commands/util/validateaddress/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe yerbas address to validate Arguments: 1. &quot;address&quot; (string, required) The yerbas address to validate  "},{"title":"Output​","type":1,"pageTitle":"validateaddress","url":"/docs/wallet/cli-wallet/commands/util/validateaddress/#output","content":"Result\tType\tDescription...\t...\t... Result: { &quot;isvalid&quot; : true|false, (boolean) If the address is valid or not. If not, this is the only property returned. &quot;address&quot; : &quot;address&quot;, (string) The yerbas address validated &quot;scriptPubKey&quot; : &quot;hex&quot;, (string) The hex encoded scriptPubKey generated by the address &quot;ismine&quot; : true|false, (boolean) If the address is yours or not &quot;iswatchonly&quot; : true|false, (boolean) If the address is watchonly &quot;isscript&quot; : true|false, (boolean) If the key is a script &quot;script&quot; : &quot;type&quot; (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata &quot;hex&quot; : &quot;hex&quot;, (string, optional) The redeemscript for the p2sh address &quot;addresses&quot; (string, optional) Array of addresses associated with the known redeemscript [ &quot;address&quot; ,... ] &quot;sigsrequired&quot; : xxxxx (numeric, optional) Number of signatures required to spend multisig output &quot;pubkey&quot; : &quot;publickeyhex&quot;, (string) The hex value of the raw public key &quot;iscompressed&quot; : true|false, (boolean) If the address is compressed &quot;account&quot; : &quot;account&quot; (string) DEPRECATED. The account associated with the address, &quot;&quot; is the default account &quot;timestamp&quot; : timestamp, (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT) &quot;hdkeypath&quot; : &quot;keypath&quot; (string, optional) The HD keypath if the key is HD and available &quot;hdchainid&quot; : &quot;&lt;hash&gt;&quot; (string, optional) The ID of the HD chain }  "},{"title":"Examples​","type":1,"pageTitle":"validateaddress","url":"/docs/wallet/cli-wallet/commands/util/validateaddress/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;validateaddress&quot;, &quot;params&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getaccount","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/getaccount/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getaccount","url":"/docs/wallet/cli-wallet/commands/wallet/getaccount/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe yerbas address for account lookup. Arguments: 1. &quot;address&quot; (string, required) The yerbas address for account lookup.  "},{"title":"Output​","type":1,"pageTitle":"getaccount","url":"/docs/wallet/cli-wallet/commands/wallet/getaccount/#output","content":"Result\tType\tDescription&quot;accountname&quot;\t(string)\tthe account address Result: &quot;accountname&quot; (string) the account address  "},{"title":"Examples​","type":1,"pageTitle":"getaccount","url":"/docs/wallet/cli-wallet/commands/wallet/getaccount/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaccount&quot;, &quot;params&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getrawchangeaddress","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/getrawchangeaddress/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getrawchangeaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getrawchangeaddress/#arguments","content":"Argument\tType\tDescription&quot;account&quot;\t(string)\tThe account name for the address to be linked to. If not provided, the default account &quot;&quot; is used. It can also be set to the empty string &quot;&quot; to represent the default account. The account does not need to exist, it will be created if there is no account by the given name. Arguments: 1. &quot;account&quot; (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account &quot;&quot; is used. It can also be set to the empty string &quot;&quot; to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.  "},{"title":"Output​","type":1,"pageTitle":"getrawchangeaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getrawchangeaddress/#output","content":"Result\tType\tDescription&quot;address&quot;\t(string)\tThe address Result: &quot;address&quot; (string) The address  "},{"title":"Examples​","type":1,"pageTitle":"getrawchangeaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getrawchangeaddress/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getrawchangeaddress&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getnewaddress","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/getnewaddress/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getnewaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getnewaddress/#arguments","content":"Argument\tType\tDescription&quot;account&quot;\t(string)\tThe account name for the address to be linked to. If not provided, the default account &quot;&quot; is used. It can also be set to the empty string &quot;&quot; to represent the default account. The account does not need to exist, it will be created if there is no account by the given name. Arguments: 1. &quot;account&quot; (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account &quot;&quot; is used. It can also be set to the empty string &quot;&quot; to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.  "},{"title":"Output​","type":1,"pageTitle":"getnewaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getnewaddress/#output","content":"Result\tType\tDescription&quot;address&quot;\t(string)\tThe new yerbas address Result: &quot;address&quot; (string) The new yerbas address  "},{"title":"Examples​","type":1,"pageTitle":"getnewaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getnewaddress/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getnewaddress&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"dumpprivkey","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/dumpprivkey/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"dumpprivkey","url":"/docs/wallet/cli-wallet/commands/wallet/dumpprivkey/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe yerbas address for the private key Arguments: 1. &quot;address&quot; (string, required) The yerbas address for the private key  "},{"title":"Output​","type":1,"pageTitle":"dumpprivkey","url":"/docs/wallet/cli-wallet/commands/wallet/dumpprivkey/#output","content":"Result\tType\tDescription&quot;key&quot;\t(string)\tThe private key Result: &quot;key&quot; (string) The private key  "},{"title":"Examples​","type":1,"pageTitle":"dumpprivkey","url":"/docs/wallet/cli-wallet/commands/wallet/dumpprivkey/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;dumpprivkey&quot;, &quot;params&quot;: [&quot;myaddress&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"abandontransaction","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/abandontransaction/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"abandontransaction","url":"/docs/wallet/cli-wallet/commands/wallet/abandontransaction/#arguments","content":"Argument\tType\tDescription&quot;txid&quot;\t(string)\tThe transaction id Arguments: 1. &quot;txid&quot; (string, required) The transaction id  "},{"title":"Output​","type":1,"pageTitle":"abandontransaction","url":"/docs/wallet/cli-wallet/commands/wallet/abandontransaction/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"abandontransaction","url":"/docs/wallet/cli-wallet/commands/wallet/abandontransaction/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;abandontransaction&quot;, &quot;params&quot;: [&quot;1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getreceivedbyaccount","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/getreceivedbyaccount/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getreceivedbyaccount","url":"/docs/wallet/cli-wallet/commands/wallet/getreceivedbyaccount/#arguments","content":"Argument\tType\tDescription&quot;account&quot;\t(string)\tThe selected account, may be the default account using &quot;&quot;. minconf\t(numeric)\tOnly include transactions confirmed at least this many times. addlocked\t(boolean)\tWhether to include transactions locked via InstantSend. Arguments: 1. &quot;account&quot; (string, required) The selected account, may be the default account using &quot;&quot;. 2. minconf (numeric, optional, default=1) Only include transactions confirmed at least this many times. 3. addlocked (bool, optional, default=false) Whether to include transactions locked via InstantSend.  "},{"title":"Output​","type":1,"pageTitle":"getreceivedbyaccount","url":"/docs/wallet/cli-wallet/commands/wallet/getreceivedbyaccount/#output","content":"Result\tType\tDescriptionamount\t(numeric)\tThe total amount in YERB received for this account. Result: amount (numeric) The total amount in YERB received for this account.  "},{"title":"Examples​","type":1,"pageTitle":"getreceivedbyaccount","url":"/docs/wallet/cli-wallet/commands/wallet/getreceivedbyaccount/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getreceivedbyaccount&quot;, &quot;params&quot;: [&quot;tabby&quot;, 6] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getreceivedbyaddress","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/getreceivedbyaddress/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getreceivedbyaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getreceivedbyaddress/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe yerbas address for transactions. minconf\t(numeric)\tOnly include transactions confirmed at least this many times. addlocked\t(boolean)\tWhether to include transactions locked via InstantSend. Arguments: 1. &quot;address&quot; (string, required) The yerbas address for transactions. 2. minconf (numeric, optional, default=1) Only include transactions confirmed at least this many times. 3. addlocked (bool, optional, default=false) Whether to include transactions locked via InstantSend.  "},{"title":"Output​","type":1,"pageTitle":"getreceivedbyaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getreceivedbyaddress/#output","content":"Result\tType\tDescriptionamount\t(numeric)\tThe total amount in YERB received for this address. Result: amount (numeric) The total amount in YERB received at this address.  "},{"title":"Examples​","type":1,"pageTitle":"getreceivedbyaddress","url":"/docs/wallet/cli-wallet/commands/wallet/getreceivedbyaddress/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getreceivedbyaddress&quot;, &quot;params&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG&quot;, 6] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"backupwallet","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/backupwallet/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"backupwallet","url":"/docs/wallet/cli-wallet/commands/wallet/backupwallet/#arguments","content":"Argument\tType\tDescription&quot;destination&quot;\t(string)\tThe destination directory or file Arguments: 1. &quot;destination&quot; (string) The destination directory or file  "},{"title":"Output​","type":1,"pageTitle":"backupwallet","url":"/docs/wallet/cli-wallet/commands/wallet/backupwallet/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"backupwallet","url":"/docs/wallet/cli-wallet/commands/wallet/backupwallet/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;backupwallet&quot;, &quot;params&quot;: [&quot;backup.dat&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getbalance","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/getbalance/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getbalance","url":"/docs/wallet/cli-wallet/commands/wallet/getbalance/#arguments","content":"Argument\tType\tDescription&quot;account&quot;\t(string)\tDEPRECATED. The selected account, or &quot;*&quot; for entire wallet. It may be the default account using &quot;&quot;. minconf\t(number)\tOnly include transactions confirmed at least this many times. addlocked\t(boolean)\tWhether to include the value of transactions locked via InstantSend in the wallet's balance. include_watchonly\t(boolean)\tAlso include balance in watch-only addresses (see 'importaddress') Arguments: 1. &quot;account&quot; (string, optional) DEPRECATED. The selected account, or &quot;*&quot; for entire wallet. It may be the default account using &quot;&quot;. 2. minconf (numeric, optional, default=1) Only include transactions confirmed at least this many times. 3. addlocked (bool, optional, default=false) Whether to include the value of transactions locked via InstantSend in the wallet's balance. 4. include_watchonly (bool, optional, default=false) Also include balance in watch-only addresses (see 'importaddress')  "},{"title":"Output​","type":1,"pageTitle":"getbalance","url":"/docs/wallet/cli-wallet/commands/wallet/getbalance/#output","content":"Result\tType\tDescriptionamount\t(number)\tThe total amount in YERB received for this account. Result: amount (numeric) The total amount in YERB received for this account.  "},{"title":"Examples​","type":1,"pageTitle":"getbalance","url":"/docs/wallet/cli-wallet/commands/wallet/getbalance/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getbalance&quot;, &quot;params&quot;: [&quot;*&quot;, 6] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"importelectrumwallet","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/importelectrumwallet/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"importelectrumwallet","url":"/docs/wallet/cli-wallet/commands/wallet/importelectrumwallet/#arguments","content":"Argument\tType\tDescription&quot;filename&quot;\t(string)\tThe Electrum wallet export file, should be in csv or json format index\t(numeric)\tRescan the wallet for transactions starting from this block index Arguments: 1. &quot;filename&quot; (string, required) The Electrum wallet export file, should be in csv or json format 2. index (numeric, optional, default=0) Rescan the wallet for transactions starting from this block index  "},{"title":"Output​","type":1,"pageTitle":"importelectrumwallet","url":"/docs/wallet/cli-wallet/commands/wallet/importelectrumwallet/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"importelectrumwallet","url":"/docs/wallet/cli-wallet/commands/wallet/importelectrumwallet/#examples","content":"# Import using the json rpc call curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;importelectrumwallet&quot;, &quot;params&quot;: [&quot;test.csv&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/ curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;importelectrumwallet&quot;, &quot;params&quot;: [&quot;test.json&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"importmulti","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/importmulti/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"importmulti","url":"/docs/wallet/cli-wallet/commands/wallet/importmulti/#arguments","content":"Argument\tType\tDescription...\t...\t... Arguments: 1. requests (array, required) Data to be imported [ (array of json objects) { &quot;scriptPubKey&quot;: &quot;&lt;script&gt;&quot; | { &quot;address&quot;:&quot;&lt;address&gt;&quot; }, (string / json, required) Type of scriptPubKey (string for script, json for address) &quot;timestamp&quot;: timestamp | &quot;now&quot; , (integer / string, required) Creation time of the key in seconds since epoch (Jan 1 1970 GMT), or the string &quot;now&quot; to substitute the current synced blockchain time. The timestamp of the oldest key will determine how far back blockchain rescans need to begin for missing wallet transactions. &quot;now&quot; can be specified to bypass scanning, for keys which are known to never have been used, and 0 can be specified to scan the entire blockchain. Blocks up to 2 hours before the earliest key creation time of all keys being imported by the importmulti call will be scanned. &quot;redeemscript&quot;: &quot;&lt;script&gt;&quot; , (string, optional) Allowed only if the scriptPubKey is a P2SH address or a P2SH scriptPubKey &quot;pubkeys&quot;: [&quot;&lt;pubKey&gt;&quot;, ... ] , (array, optional) Array of strings giving pubkeys that must occur in the output or redeemscript &quot;keys&quot;: [&quot;&lt;key&gt;&quot;, ... ] , (array, optional) Array of strings giving private keys whose corresponding public keys must occur in the output or redeemscript &quot;internal&quot;: &lt;true&gt; , (boolean, optional, default: false) Stating whether matching outputs should be treated as not incoming payments &quot;watchonly&quot;: &lt;true&gt; , (boolean, optional, default: false) Stating whether matching outputs should be considered watched even when they're not spendable, only allowed if keys are empty &quot;label&quot;: &lt;label&gt; , (string, optional, default: '') Label to assign to the address (aka account name, for now), only allowed with internal=false } ,... ] 2. options (json, optional) { &quot;rescan&quot;: &lt;false&gt;, (boolean, optional, default: true) Stating if should rescan the blockchain after all imports }  "},{"title":"Output​","type":1,"pageTitle":"importmulti","url":"/docs/wallet/cli-wallet/commands/wallet/importmulti/#output","content":"Result\tType\tDescription...\t...\t... # Response is an array with the same size as the input that has the execution result : [{ &quot;success&quot;: true } , { &quot;success&quot;: false, &quot;error&quot;: { &quot;code&quot;: -1, &quot;message&quot;: &quot;Internal Server Error&quot;} }, ... ]  "},{"title":"Examples​","type":1,"pageTitle":"importmulti","url":"/docs/wallet/cli-wallet/commands/wallet/importmulti/#examples","content":"# Import using the json rpc call curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;importelectrumwallet&quot;, &quot;params&quot;: [&quot;test.csv&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/ curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;importelectrumwallet&quot;, &quot;params&quot;: [&quot;test.json&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"importaddress","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/importaddress/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"importaddress","url":"/docs/wallet/cli-wallet/commands/wallet/importaddress/#arguments","content":"Argument\tType\tDescription&quot;script&quot;\t(string)\tThe hex-encoded script (or address) &quot;label&quot;\t(bool)\tAn optional label rescan\t(bool)\tRescan the wallet for transactions p2sh\t(bool)\tAdd the P2SH version of the script as well Arguments: 1. &quot;script&quot; (string, required) The hex-encoded script (or address) 2. &quot;label&quot; (string, optional, default=&quot;&quot;) An optional label 3. rescan (boolean, optional, default=true) Rescan the wallet for transactions 4. p2sh (boolean, optional, default=false) Add the P2SH version of the script as well  "},{"title":"Output​","type":1,"pageTitle":"importaddress","url":"/docs/wallet/cli-wallet/commands/wallet/importaddress/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"importaddress","url":"/docs/wallet/cli-wallet/commands/wallet/importaddress/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;importaddress&quot;, &quot;params&quot;: [&quot;myscript&quot;, &quot;testing&quot;, false] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getwalletinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/getwalletinfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getwalletinfo","url":"/docs/wallet/cli-wallet/commands/wallet/getwalletinfo/#output","content":"Result\tType\tDescription&quot;walletname&quot;\t(string)\tthe wallet name Result: { &quot;walletname&quot;: xxxxx, (string) the wallet name &quot;walletversion&quot;: xxxxx, (numeric) the wallet version &quot;balance&quot;: xxxxxxx, (numeric) the total confirmed balance of the wallet in YERB &quot;privatesend_balance&quot;: xxxxxx, (numeric) the PrivateSend balance in YERB &quot;unconfirmed_balance&quot;: xxx, (numeric) the total unconfirmed balance of the wallet in YERB &quot;immature_balance&quot;: xxxxxx, (numeric) the total immature balance of the wallet in YERB &quot;txcount&quot;: xxxxxxx, (numeric) the total number of transactions in the wallet &quot;keypoololdest&quot;: xxxxxx, (numeric) the timestamp (seconds since Unix epoch) of the oldest pre-generated key in the key pool &quot;keypoolsize&quot;: xxxx, (numeric) how many new keys are pre-generated (only counts external keys) &quot;keypoolsize_hd_internal&quot;: xxxx, (numeric) how many new keys are pre-generated for internal use (used for change outputs, only appears if the wallet is using this feature, otherwise external keys are used) &quot;keys_left&quot;: xxxx, (numeric) how many new keys are left since last automatic backup &quot;unlocked_until&quot;: ttt, (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked &quot;paytxfee&quot;: x.xxxx, (numeric) the transaction fee configuration, set in YERB/kB &quot;hdchainid&quot;: &quot;&lt;hash&gt;&quot;, (string) the ID of the HD chain &quot;hdaccountcount&quot;: xxx, (numeric) how many accounts of the HD chain are in this wallet [ { &quot;hdaccountindex&quot;: xxx, (numeric) the index of the account &quot;hdexternalkeyindex&quot;: xxxx, (numeric) current external childkey index &quot;hdinternalkeyindex&quot;: xxxx, (numeric) current internal childkey index } ,... ] }  "},{"title":"Examples​","type":1,"pageTitle":"getwalletinfo","url":"/docs/wallet/cli-wallet/commands/wallet/getwalletinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getwalletinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"importprivkey","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/importprivkey/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"importprivkey","url":"/docs/wallet/cli-wallet/commands/wallet/importprivkey/#arguments","content":"Argument\tType\tDescription&quot;privkey&quot;\t(string)\tTThe private key (see dumpprivkey) &quot;label&quot;\t(string)\tAn optional label rescan\t(boolean)\tRescan the wallet for transactions Arguments: 1. &quot;privkey&quot; (string, required) The private key (see dumpprivkey) 2. &quot;label&quot; (string, optional, default=&quot;&quot;) An optional label 3. rescan (boolean, optional, default=true) Rescan the wallet for transactions  "},{"title":"Output​","type":1,"pageTitle":"importprivkey","url":"/docs/wallet/cli-wallet/commands/wallet/importprivkey/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"importprivkey","url":"/docs/wallet/cli-wallet/commands/wallet/importprivkey/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;importprivkey&quot;, &quot;params&quot;: [&quot;mykey&quot;, &quot;testing&quot;, false] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"gettransaction","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/gettransaction/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"gettransaction","url":"/docs/wallet/cli-wallet/commands/wallet/gettransaction/#arguments","content":"Argument\tType\tDescription&quot;txid&quot;\t(string)\tThe transaction id &quot;include_watchonly&quot;\t(bool)\tWhether to include watch-only addresses in balance calculation and details[] Arguments: 1. &quot;txid&quot; (string, required) The transaction id 2. &quot;include_watchonly&quot; (bool, optional, default=false) Whether to include watch-only addresses in balance calculation and details[]  "},{"title":"Output​","type":1,"pageTitle":"gettransaction","url":"/docs/wallet/cli-wallet/commands/wallet/gettransaction/#output","content":"Result\tType\tDescription&quot;amount&quot;\t(numeric)\tThe transaction amount in YERB Result: { &quot;amount&quot; : x.xxx, (numeric) The transaction amount in YERB &quot;fee&quot;: x.xxx, (numeric) The amount of the fee in YERB. This is negative and only available for the 'send' category of transactions. &quot;instantlock&quot; : true|false, (bool) Current transaction lock state &quot;instantlock_internal&quot; : true|false, (bool) Current internal transaction lock state &quot;chainlock&quot; : true|false, (bool) The state of the corresponding block chainlock &quot;confirmations&quot; : n, (numeric) The number of blockchain confirmations &quot;blockhash&quot; : &quot;hash&quot;, (string) The block hash &quot;blockindex&quot; : xx, (numeric) The index of the transaction in the block that includes it &quot;blocktime&quot; : ttt, (numeric) The time in seconds since epoch (1 Jan 1970 GMT) &quot;txid&quot; : &quot;transactionid&quot;, (string) The transaction id. &quot;time&quot; : ttt, (numeric) The transaction time in seconds since epoch (1 Jan 1970 GMT) &quot;timereceived&quot; : ttt, (numeric) The time received in seconds since epoch (1 Jan 1970 GMT) &quot;details&quot; : [ { &quot;account&quot; : &quot;accountname&quot;, (string) DEPRECATED. The account name involved in the transaction, can be &quot;&quot; for the default account. &quot;address&quot; : &quot;address&quot;, (string) The yerbas address involved in the transaction &quot;category&quot; : &quot;send|receive&quot;, (string) The category, either 'send' or 'receive' &quot;amount&quot; : x.xxx, (numeric) The amount in YERB &quot;label&quot; : &quot;label&quot;, (string) A comment for the address/transaction, if any &quot;vout&quot; : n, (numeric) the vout value &quot;fee&quot;: x.xxx, (numeric) The amount of the fee in YERB. This is negative and only available for the 'send' category of transactions. &quot;abandoned&quot;: xxx (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the 'send' category of transactions. } ,... ], &quot;hex&quot; : &quot;data&quot; (string) Raw data for transaction }  "},{"title":"Examples​","type":1,"pageTitle":"gettransaction","url":"/docs/wallet/cli-wallet/commands/wallet/gettransaction/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;gettransaction&quot;, &quot;params&quot;: [&quot;1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"importpubkey","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/importpubkey/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"importpubkey","url":"/docs/wallet/cli-wallet/commands/wallet/importpubkey/#arguments","content":"Argument\tType\tDescription&quot;privkey&quot;\t(string)\tTThe private key (see dumpprivkey) &quot;label&quot;\t(string)\tAn optional label rescan\t(boolean)\tRescan the wallet for transactions Arguments: 1. &quot;pubkey&quot; (string, required) The hex-encoded public key 2. &quot;label&quot; (string, optional, default=&quot;&quot;) An optional label 3. rescan (boolean, optional, default=true) Rescan the wallet for transactions  "},{"title":"Output​","type":1,"pageTitle":"importpubkey","url":"/docs/wallet/cli-wallet/commands/wallet/importpubkey/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"importpubkey","url":"/docs/wallet/cli-wallet/commands/wallet/importpubkey/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;importpubkey&quot;, &quot;params&quot;: [&quot;mypubkey&quot;, &quot;testing&quot;, false] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getunconfirmedbalance","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/getunconfirmedbalance/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getunconfirmedbalance","url":"/docs/wallet/cli-wallet/commands/wallet/getunconfirmedbalance/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"getunconfirmedbalance","url":"/docs/wallet/cli-wallet/commands/wallet/getunconfirmedbalance/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getunconfirmedbalance&quot;, -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"listaccounts","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/listaccounts/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"listaccounts","url":"/docs/wallet/cli-wallet/commands/wallet/listaccounts/#arguments","content":"Argument\tType\tDescriptionminconf\t(numeric)\tnly include transactions with at least this many confirmations addlocked\t(bool)\tWhether to include transactions locked via InstantSend. include_watchonly\t(bool)\tInclude balances in watch-only addresses (see 'importaddress') Arguments: 1. minconf (numeric, optional, default=1) Only include transactions with at least this many confirmations 2. addlocked (bool, optional, default=false) Whether to include transactions locked via InstantSend. 3. include_watchonly (bool, optional, default=false) Include balances in watch-only addresses (see 'importaddress')  "},{"title":"Output​","type":1,"pageTitle":"listaccounts","url":"/docs/wallet/cli-wallet/commands/wallet/listaccounts/#output","content":"Result\tType\tDescription&quot;account&quot;\t(numeric)\tThe property name is the account name, and the value is the total balance for the account. Result: { (json object where keys are account names, and values are numeric balances &quot;account&quot;: x.xxx, (numeric) The property name is the account name, and the value is the total balance for the account. ... }  "},{"title":"Examples​","type":1,"pageTitle":"listaccounts","url":"/docs/wallet/cli-wallet/commands/wallet/listaccounts/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listaccounts&quot;, &quot;params&quot;: [6] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"importwallet","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/importwallet/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"importwallet","url":"/docs/wallet/cli-wallet/commands/wallet/importwallet/#arguments","content":"Argument\tType\tDescription&quot;filename&quot;\t(string)\tThe wallet file Arguments: 1. &quot;filename&quot; (string, required) The wallet file  "},{"title":"Output​","type":1,"pageTitle":"importwallet","url":"/docs/wallet/cli-wallet/commands/wallet/importwallet/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"importwallet","url":"/docs/wallet/cli-wallet/commands/wallet/importwallet/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;importwallet&quot;, &quot;params&quot;: [&quot;test&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"listaddressbalances","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/listaddressbalances/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"listaddressbalances","url":"/docs/wallet/cli-wallet/commands/wallet/listaddressbalances/#arguments","content":"Argument\tType\tDescriptionminamount\t(numeric)\tMinimum balance in YERB an address should have to be shown in the list Arguments: 1. minamount (numeric, optional, default=0) Minimum balance in YERB an address should have to be shown in the list  "},{"title":"Output​","type":1,"pageTitle":"listaddressbalances","url":"/docs/wallet/cli-wallet/commands/wallet/listaddressbalances/#output","content":"Result\tType\tDescription&quot;address&quot;\t(string)\tThe yerbas address and the amount in YERB Result: { &quot;address&quot;: amount, (string) The yerbas address and the amount in YERB ,... }  "},{"title":"Examples​","type":1,"pageTitle":"listaddressbalances","url":"/docs/wallet/cli-wallet/commands/wallet/listaddressbalances/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listaddressbalances&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/ curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listaddressbalances&quot;, &quot;params&quot;: [10] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"importprunedfunds","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/importprunedfunds/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"importprunedfunds","url":"/docs/wallet/cli-wallet/commands/wallet/importprunedfunds/#arguments","content":"Argument\tType\tDescription&quot;rawtransaction&quot;\t(string)\tA raw transaction in hex funding an already-existing address in wallet &quot;txoutproof&quot;\t(string)\tThe hex output from gettxoutproof that contains the transaction Arguments: 1. &quot;rawtransaction&quot; (string, required) A raw transaction in hex funding an already-existing address in wallet 2. &quot;txoutproof&quot; (string, required) The hex output from gettxoutproof that contains the transaction  "},{"title":"Output​","type":1,"pageTitle":"importprunedfunds","url":"/docs/wallet/cli-wallet/commands/wallet/importprunedfunds/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"importprunedfunds","url":"/docs/wallet/cli-wallet/commands/wallet/importprunedfunds/#examples","content":"...  "},{"title":"keypoolrefill","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/keypoolrefill/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"keypoolrefill","url":"/docs/wallet/cli-wallet/commands/wallet/keypoolrefill/#arguments","content":"Argument\tType\tDescriptionnewsize\t(numeric)\tThe new keypool size Arguments: 1. newsize (numeric, optional, default=1000) The new keypool size  "},{"title":"Output​","type":1,"pageTitle":"keypoolrefill","url":"/docs/wallet/cli-wallet/commands/wallet/keypoolrefill/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"keypoolrefill","url":"/docs/wallet/cli-wallet/commands/wallet/keypoolrefill/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;keypoolrefill&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"keepass","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/keepass/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"keepass","url":"/docs/wallet/cli-wallet/commands/wallet/keepass/#arguments","content":"Argument\tType\tDescription&quot;argument&quot;\t(string)\tKeepass argument Arguments: 1. &quot;argument&quot; (string) Argument for Keepass genkey|init|setpassphrase  "},{"title":"Output​","type":1,"pageTitle":"keepass","url":"/docs/wallet/cli-wallet/commands/wallet/keepass/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"keepass","url":"/docs/wallet/cli-wallet/commands/wallet/keepass/#examples","content":"...  "},{"title":"listreceivedbyaccount","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/listreceivedbyaccount/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"listreceivedbyaccount","url":"/docs/wallet/cli-wallet/commands/wallet/listreceivedbyaccount/#arguments","content":"Argument\tType\tDescriptionminconf\t(numeric)\tnly include transactions with at least this many confirmations addlocked\t(bool)\tWhether to include transactions locked via InstantSend. include_empty\t(bool)\tWhether to include accounts that haven't received any payments. include_watchonly\t(bool)\tInclude balances in watch-only addresses (see 'importaddress') Arguments: 1. minconf (numeric, optional, default=1) The minimum number of confirmations before payments are included. 2. addlocked (bool, optional, default=false) Whether to include transactions locked via InstantSend. 3. include_empty (bool, optional, default=false) Whether to include accounts that haven't received any payments. 4. include_watchonly (bool, optional, default=false) Whether to include watch-only addresses (see 'importaddress').  "},{"title":"Output​","type":1,"pageTitle":"listreceivedbyaccount","url":"/docs/wallet/cli-wallet/commands/wallet/listreceivedbyaccount/#output","content":"Result\tType\tDescription&quot;involvesWatchonly&quot;\t(bool)\tOnly returned if imported addresses were involved in transaction Result: [ { &quot;involvesWatchonly&quot; : true, (bool) Only returned if imported addresses were involved in transaction &quot;account&quot; : &quot;accountname&quot;, (string) The account name of the receiving account &quot;amount&quot; : x.xxx, (numeric) The total amount received by addresses with this account &quot;confirmations&quot; : n (numeric) The number of blockchain confirmations of the most recent transaction included &quot;label&quot; : &quot;label&quot; (string) A comment for the address/transaction, if any } ,... ]  "},{"title":"Examples​","type":1,"pageTitle":"listreceivedbyaccount","url":"/docs/wallet/cli-wallet/commands/wallet/listreceivedbyaccount/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listreceivedbyaccount&quot;, &quot;params&quot;: [6, false, true, true] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"lockunspent","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/lockunspent/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"lockunspent","url":"/docs/wallet/cli-wallet/commands/wallet/lockunspent/#arguments","content":"Argument\tType\tDescriptionunlock\t(boolean)\tThe number of transactions to return &quot;transactions&quot;\t(object)\tA json array of objects. Each object the txid (string) vout Arguments: 1. unlock (boolean, required) Whether to unlock (true) or lock (false) the specified transactions 2. &quot;transactions&quot; (string, optional) A json array of objects. Each object the txid (string) vout (numeric) [ (json array of json objects) { &quot;txid&quot;:&quot;id&quot;, (string) The transaction id &quot;vout&quot;: n (numeric) The output number } ,... ]  "},{"title":"Output​","type":1,"pageTitle":"lockunspent","url":"/docs/wallet/cli-wallet/commands/wallet/lockunspent/#output","content":"Result\tType\tDescription\ttrue\tfalse\t(boolean)\tWhether the command was successful or not Result: true|false (boolean) Whether the command was successful or not  "},{"title":"Examples​","type":1,"pageTitle":"lockunspent","url":"/docs/wallet/cli-wallet/commands/wallet/lockunspent/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;lockunspent&quot;, &quot;params&quot;: [false, &quot;[{\\&quot;txid\\&quot;:\\&quot;a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\&quot;,\\&quot;vout\\&quot;:1}]&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"listwallets","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/listwallets/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"listwallets","url":"/docs/wallet/cli-wallet/commands/wallet/listwallets/#output","content":"Result\tType\tDescription&quot;walletname&quot;\t(string)\t(string) the wallet name Result: [ (json array of strings) &quot;walletname&quot; (string) the wallet name ... ]  "},{"title":"Examples​","type":1,"pageTitle":"listwallets","url":"/docs/wallet/cli-wallet/commands/wallet/listwallets/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listwallets&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"listreceivedbyaddress","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/listreceivedbyaddress/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"listreceivedbyaddress","url":"/docs/wallet/cli-wallet/commands/wallet/listreceivedbyaddress/#arguments","content":"Argument\tType\tDescriptionminconf\t(numeric)\tnly include transactions with at least this many confirmations addlocked\t(bool)\tWhether to include transactions locked via InstantSend. include_empty\t(bool)\tWhether to include accounts that haven't received any payments. include_watchonly\t(bool)\tInclude balances in watch-only addresses (see 'importaddress') Arguments: 1. minconf (numeric, optional, default=1) The minimum number of confirmations before payments are included. 2. addlocked (bool, optional, default=false) Whether to include transactions locked via InstantSend. 3. include_empty (bool, optional, default=false) Whether to include addresses that haven't received any payments. 4. include_watchonly (bool, optional, default=false) Whether to include watch-only addresses (see 'importaddress').  "},{"title":"Output​","type":1,"pageTitle":"listreceivedbyaddress","url":"/docs/wallet/cli-wallet/commands/wallet/listreceivedbyaddress/#output","content":"Result\tType\tDescription&quot;involvesWatchonly&quot;\t(bool)\tOnly returned if imported addresses were involved in transaction Result: [ { &quot;involvesWatchonly&quot; : true, (bool) Only returned if imported addresses were involved in transaction &quot;address&quot; : &quot;receivingaddress&quot;, (string) The receiving address &quot;account&quot; : &quot;accountname&quot;, (string) DEPRECATED. The account of the receiving address. The default account is &quot;&quot;. &quot;amount&quot; : x.xxx, (numeric) The total amount in YERB received by the address &quot;confirmations&quot; : n (numeric) The number of confirmations of the most recent transaction included. If 'addlocked' is true, the number of confirmations can be less than configured for transactions locked via InstantSend &quot;label&quot; : &quot;label&quot;, (string) A comment for the address/transaction, if any &quot;txids&quot;: [ n, (numeric) The ids of transactions received with the address ... ] } ,... ]  "},{"title":"Examples​","type":1,"pageTitle":"listreceivedbyaddress","url":"/docs/wallet/cli-wallet/commands/wallet/listreceivedbyaddress/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listreceivedbyaddress&quot;, &quot;params&quot;: [6, false, true, true] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"listlockunspent","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/listlockunspent/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"listlockunspent","url":"/docs/wallet/cli-wallet/commands/wallet/listlockunspent/#output","content":"Result\tType\tDescription&quot;txid&quot;\t(string)\tThe transaction id locked Result: [ { &quot;txid&quot; : &quot;transactionid&quot;, (string) The transaction id locked &quot;vout&quot; : n (numeric) The vout value } ,... ]  "},{"title":"Examples​","type":1,"pageTitle":"listlockunspent","url":"/docs/wallet/cli-wallet/commands/wallet/listlockunspent/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listlockunspent&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"listsinceblock","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/listsinceblock/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"listsinceblock","url":"/docs/wallet/cli-wallet/commands/wallet/listsinceblock/#arguments","content":"Argument\tType\tDescription&quot;blockhash&quot;\t(string)\tThe block hash to list transactions since target_confirmations\t(numeric)\tWhether to include transactions locked via InstantSend. include_watchonly\t(bool)\tInclude balances in watch-only addresses (see 'importaddress') include_removed\t(bool)\tShow transactions that were removed due to a reorg in the &quot;removed&quot; array Arguments: 1. &quot;blockhash&quot; (string, optional) The block hash to list transactions since 2. target_confirmations: (numeric, optional, default=1) Return the nth block hash from the main chain. e.g. 1 would mean the best block hash. Note: this is not used as a filter, but only affects [lastblock] in the return value 3. include_watchonly: (bool, optional, default=false) Include transactions to watch-only addresses (see 'importaddress') 4. include_removed: (bool, optional, default=true) Show transactions that were removed due to a reorg in the &quot;removed&quot; array (not guaranteed to work on pruned nodes)  "},{"title":"Output​","type":1,"pageTitle":"listsinceblock","url":"/docs/wallet/cli-wallet/commands/wallet/listsinceblock/#output","content":"Result\tType\tDescription&quot;transactions&quot;\t(array)\t[] Result: { &quot;transactions&quot;: [ &quot;account&quot;:&quot;accountname&quot;, (string) DEPRECATED. The account name associated with the transaction. Will be &quot;&quot; for the default account. &quot;address&quot;:&quot;address&quot;, (string) The yerbas address of the transaction. Not present for move transactions (category = move). &quot;category&quot;:&quot;send|receive&quot;, (string) The transaction category. 'send' has negative amounts, 'receive' has positive amounts. &quot;amount&quot;: x.xxx, (numeric) The amount in YERB. This is negative for the 'send' category, and for the 'move' category for moves outbound. It is positive for the 'receive' category, and for the 'move' category for inbound funds. &quot;vout&quot; : n, (numeric) the vout value &quot;fee&quot;: x.xxx, (numeric) The amount of the fee in YERB. This is negative and only available for the 'send' category of transactions. &quot;confirmations&quot; : n, (numeric) The number of blockchain confirmations for the transaction. Available for 'send' and 'receive' category of transactions. When it's &lt; 0, it means the transaction conflicted that many blocks ago. &quot;instantlock&quot; : true|false, (bool) Current transaction lock state. Available for 'send' and 'receive' category of transactions. &quot;instantlock_internal&quot; : true|false, (bool) Current internal transaction lock state. Available for 'send' and 'receive' category of transactions. &quot;chainlock&quot; : true|false, (bool) The state of the corresponding block chainlock &quot;blockhash&quot;: &quot;hashvalue&quot;, (string) The block hash containing the transaction. Available for 'send' and 'receive' category of transactions. &quot;blockindex&quot;: n, (numeric) The index of the transaction in the block that includes it. Available for 'send' and 'receive' category of transactions. &quot;blocktime&quot;: xxx, (numeric) The block time in seconds since epoch (1 Jan 1970 GMT). &quot;txid&quot;: &quot;transactionid&quot;, (string) The transaction id. Available for 'send' and 'receive' category of transactions. &quot;time&quot;: xxx, (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT). &quot;timereceived&quot;: xxx, (numeric) The time received in seconds since epoch (Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions. &quot;abandoned&quot;: xxx, (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the 'send' category of transactions. &quot;comment&quot;: &quot;...&quot;, (string) If a comment is associated with the transaction. &quot;label&quot; : &quot;label&quot; (string) A comment for the address/transaction, if any &quot;to&quot;: &quot;...&quot;, (string) If a comment to is associated with the transaction. ], &quot;removed&quot;: [ &lt;structure is the same as &quot;transactions&quot; above, only present if include_removed=true&gt; Note: transactions that were readded in the active chain will appear as-is in this array, and may thus have a positive confirmation count. ], &quot;lastblock&quot;: &quot;lastblockhash&quot; (string) The hash of the block (target_confirmations-1) from the best block on the main chain. This is typically used to feed back into listsinceblock the next time you call it. So you would generally use a target_confirmations of say 6, so you will be continually re-notified of transactions until they've reached 6 confirmations plus any new ones }  "},{"title":"Examples​","type":1,"pageTitle":"listsinceblock","url":"/docs/wallet/cli-wallet/commands/wallet/listsinceblock/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listsinceblock&quot;, &quot;params&quot;: [&quot;000000000000000bacf66f7497b7dc45ef753ee9a7d38571037cdb1a57f663ad&quot;, 6] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"listaddressgroupings","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/listaddressgroupings/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"listaddressgroupings","url":"/docs/wallet/cli-wallet/commands/wallet/listaddressgroupings/#output","content":"Result\tType\tDescription&quot;address&quot;\t(string)\tThe yerbas address Result: [ [ [ &quot;address&quot;, (string) The yerbas address amount, (numeric) The amount in YERB &quot;account&quot; (string, optional) DEPRECATED. The account ] ,... ] ,... ]  "},{"title":"Examples​","type":1,"pageTitle":"listaddressgroupings","url":"/docs/wallet/cli-wallet/commands/wallet/listaddressgroupings/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listaddressgroupings&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"sendmany","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/sendmany/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"sendmany","url":"/docs/wallet/cli-wallet/commands/wallet/sendmany/#arguments","content":"Argument\tType\tDescription&quot;fromaccount&quot;\t(string)\tThe name of the account to send funds from. May be the default account using &quot;&quot;. Arguments: 1. &quot;fromaccount&quot; (string, required) DEPRECATED. The account to send the funds from. Should be &quot;&quot; for the default account 2. &quot;amounts&quot; (string, required) A json object with addresses and amounts { &quot;address&quot;:amount (numeric or string) The yerbas address is the key, the numeric amount (can be string) in YERB is the value ,... } 3. minconf (numeric, optional, default=1) Only use the balance confirmed at least this many times. 4. addlocked (bool, optional, default=false) Whether to include transactions locked via InstantSend. 5. &quot;comment&quot; (string, optional) A comment 6. subtractfeefrom (array, optional) A json array with addresses. The fee will be equally deducted from the amount of each selected address. Those recipients will receive less yerbas than you enter in their corresponding amount field. If no addresses are specified here, the sender pays the fee. [ &quot;address&quot; (string) Subtract fee from this address ,... ] 7. &quot;use_is&quot; (bool, optional, default=false) Deprecated and ignored 8. &quot;use_ps&quot; (bool, optional, default=false) Use PrivateSend funds only 9. conf_target (numeric, optional) Confirmation target (in blocks) 10. &quot;estimate_mode&quot; (string, optional, default=UNSET) The fee estimate mode, must be one of: &quot;UNSET&quot; &quot;ECONOMICAL&quot; &quot;CONSERVATIVE&quot;  "},{"title":"Output​","type":1,"pageTitle":"sendmany","url":"/docs/wallet/cli-wallet/commands/wallet/sendmany/#output","content":"Result\tType\tDescription\ttrue\tfalse\t(boolean)\tWhether the command was successful or not Result: &quot;txid&quot; (string) The transaction id for the send. Only 1 transaction is created regardless of the number of addresses.  "},{"title":"Examples​","type":1,"pageTitle":"sendmany","url":"/docs/wallet/cli-wallet/commands/wallet/sendmany/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;sendmany&quot;, &quot;params&quot;: [&quot;tabby&quot;, &quot;{\\&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG\\&quot;:0.01,\\&quot;XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcG\\&quot;:0.02}&quot;, 6, false, &quot;testing&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"move","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/move/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"move","url":"/docs/wallet/cli-wallet/commands/wallet/move/#arguments","content":"Argument\tType\tDescription&quot;fromaccount&quot;\t(string)\tThe name of the account to move funds from. May be the default account using &quot;&quot;. &quot;toaccount&quot;\t(string)\tThe name of the account to move funds to. May be the default account using &quot;&quot;. amount\t(numeric)\tQuantity of YERB to move between accounts. dummy\t(numeric)\tIgnored. Remains for backward compatibility. &quot;comment&quot;\t(string)\tAn optional comment, stored in the wallet only. Arguments: 1. &quot;fromaccount&quot; (string, required) The name of the account to move funds from. May be the default account using &quot;&quot;. 2. &quot;toaccount&quot; (string, required) The name of the account to move funds to. May be the default account using &quot;&quot;. 3. amount (numeric) Quantity of YERB to move between accounts. 4. (dummy) (numeric, optional) Ignored. Remains for backward compatibility. 5. &quot;comment&quot; (string, optional) An optional comment, stored in the wallet only.  "},{"title":"Output​","type":1,"pageTitle":"move","url":"/docs/wallet/cli-wallet/commands/wallet/move/#output","content":"Result\tType\tDescription\ttrue\tfalse\t(boolean)\tWhether the command was successful or not Result: true|false (boolean) true if successful.  "},{"title":"Examples​","type":1,"pageTitle":"move","url":"/docs/wallet/cli-wallet/commands/wallet/move/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;move&quot;, &quot;params&quot;: [&quot;timotei&quot;, &quot;akiko&quot;, 0.01, 6, &quot;happy birthday!&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"setaccount","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/setaccount/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"setaccount","url":"/docs/wallet/cli-wallet/commands/wallet/setaccount/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe yerbas address to send to. Arguments: 1. &quot;address&quot; (string, required) The yerbas address to be associated with an account. 2. &quot;account&quot; (string, required) The account to assign the address to. &quot;CONSERVATIVE&quot;  "},{"title":"Output​","type":1,"pageTitle":"setaccount","url":"/docs/wallet/cli-wallet/commands/wallet/setaccount/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"setaccount","url":"/docs/wallet/cli-wallet/commands/wallet/setaccount/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;setaccount&quot;, &quot;params&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG&quot;, &quot;tabby&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"setprivatesendamount","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/setprivatesendamount/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"setprivatesendamount","url":"/docs/wallet/cli-wallet/commands/wallet/setprivatesendamount/#arguments","content":"Argument\tType\tDescriptionamount\t(numeric)\tThe default amount is 1000 Cannot be more than 21000000 nor less than 2 Arguments: 1. amount (numeric, required) The default amount is 1000 Cannot be more than 21000000 nor less than 2  "},{"title":"Output​","type":1,"pageTitle":"setprivatesendamount","url":"/docs/wallet/cli-wallet/commands/wallet/setprivatesendamount/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"setprivatesendamount","url":"/docs/wallet/cli-wallet/commands/wallet/setprivatesendamount/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;setprivatesendamount&quot;, &quot;params&quot;: [208] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"settxfee","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/settxfee/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"settxfee","url":"/docs/wallet/cli-wallet/commands/wallet/settxfee/#arguments","content":"Argument\tType\tDescriptionamount\t(numeric)\tThe transaction fee in YERB/kB Arguments: 1. amount (numeric or string, required) The transaction fee in YERB/kB  "},{"title":"Output​","type":1,"pageTitle":"settxfee","url":"/docs/wallet/cli-wallet/commands/wallet/settxfee/#output","content":"Result\tType\tDescription\ttrue\tfalse\t(boolean)\tReturns true if successful Result: true|false (boolean) Returns true if successful  "},{"title":"Examples​","type":1,"pageTitle":"settxfee","url":"/docs/wallet/cli-wallet/commands/wallet/settxfee/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;settxfee&quot;, &quot;params&quot;: [0.00001] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"signmessage","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/signmessage/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"signmessage","url":"/docs/wallet/cli-wallet/commands/wallet/signmessage/#arguments","content":"Argument\tType\tDescription&quot;address&quot;\t(string)\tThe yerbas address to use for the private key. &quot;message&quot;\t(string)\tThe message to create a signature of. Arguments: 1. &quot;address&quot; (string, required) The yerbas address to use for the private key. 2. &quot;message&quot; (string, required) The message to create a signature of.  "},{"title":"Output​","type":1,"pageTitle":"signmessage","url":"/docs/wallet/cli-wallet/commands/wallet/signmessage/#output","content":"Result\tType\tDescription&quot;signature&quot;\t(string)\tThe signature of the message encoded in base 64 Result: &quot;signature&quot; (string) The signature of the message encoded in base 64  "},{"title":"Examples​","type":1,"pageTitle":"signmessage","url":"/docs/wallet/cli-wallet/commands/wallet/signmessage/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;signmessage&quot;, &quot;params&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG&quot;, &quot;my message&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"walletlock","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/walletlock/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"walletlock","url":"/docs/wallet/cli-wallet/commands/wallet/walletlock/#output","content":"Result\tType\tDescription&quot;signature&quot;\t(string)\tThe signature of the message encoded in base 64 Result: &quot;signature&quot; (string) The signature of the message encoded in base 64  "},{"title":"Examples​","type":1,"pageTitle":"walletlock","url":"/docs/wallet/cli-wallet/commands/wallet/walletlock/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;walletlock&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"sendfrom","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/sendfrom/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"sendfrom","url":"/docs/wallet/cli-wallet/commands/wallet/sendfrom/#arguments","content":"Argument\tType\tDescription&quot;fromaccount&quot;\t(string)\tThe name of the account to send funds from. May be the default account using &quot;&quot;. Arguments: 1. &quot;fromaccount&quot; (string, required) The name of the account to send funds from. May be the default account using &quot;&quot;. Specifying an account does not influence coin selection, but it does associate the newly created transaction with the account, so the account's balance computation and transaction history can reflect the spend. 2. &quot;toaddress&quot; (string, required) The yerbas address to send funds to. 3. amount (numeric or string, required) The amount in YERB (transaction fee is added on top). 4. minconf (numeric, optional, default=1) Only use funds with at least this many confirmations. 5. addlocked (bool, optional, default=false) Whether to include transactions locked via InstantSend. 6. &quot;comment&quot; (string, optional) A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet. 7. &quot;comment_to&quot; (string, optional) An optional comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, it is just kept in your wallet.  "},{"title":"Output​","type":1,"pageTitle":"sendfrom","url":"/docs/wallet/cli-wallet/commands/wallet/sendfrom/#output","content":"Result\tType\tDescription\ttrue\tfalse\t(boolean)\tWhether the command was successful or not Result: &quot;txid&quot; (string) The transaction id.  "},{"title":"Examples​","type":1,"pageTitle":"sendfrom","url":"/docs/wallet/cli-wallet/commands/wallet/sendfrom/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;sendfrom&quot;, &quot;params&quot;: [&quot;tabby&quot;, &quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG&quot;, 0.01, 6, false, &quot;donation&quot;, &quot;seans outpost&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"sendtoaddress","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/sendtoaddress/","content":"","keywords":""},{"title":"Basic syntax​","type":1,"pageTitle":"sendtoaddress","url":"/docs/wallet/cli-wallet/commands/wallet/sendtoaddress/#basic-syntax","content":"sendtoaddress &lt;address&gt; &lt;amount&gt; [&lt;own_note&gt; &lt;recipient_note&gt;] "},{"title":"Arguments​","type":1,"pageTitle":"sendtoaddress","url":"/docs/wallet/cli-wallet/commands/wallet/sendtoaddress/#arguments","content":"Argument\tType\tDescription\taddress\tstring\tDestination address\tRequired amount\tnumber\tDesired amount in Yerbas\tRequired future:\t{json}\t'{&quot;future_maturity&quot;: n, &quot;future_locktime&quot;: n}'\tOptional ↳ future_maturity: n\tnumber\tnumber of confirmation for this future to mature. ↳ future_locktime: n\tnumber\ttime in seconds from first confirmation for future to mature comment\tstring\tA comment about the transaction (private)\tOptional comment_to\tstring\tA comment about the receiving person or organization (private)\tOptional "},{"title":"yerbas-cli​","type":1,"pageTitle":"sendtoaddress","url":"/docs/wallet/cli-wallet/commands/wallet/sendtoaddress/#yerbas-cli","content":"yerbas-cli help sendtoaddress output: Arguments: 1. &quot;address&quot; (string, required) The yerbas address to send to. 2. &quot;amount&quot; (numeric or string, required) The amount in YERB to send. eg 0.1 3. &quot;future&quot; (string, optional) future transaction is mature when it has enough confirmation or locktime in seconds has past from its first confirm { &quot;future_maturity&quot;:n, (numeric, required) number of confirmation for this future to mature. &quot;future_locktime&quot;:n (numeric, required) total time in seconds from its first confirmation for this future to mature } 4. &quot;comment&quot; (string, optional) A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet. 5. &quot;comment_to&quot; (string, optional) A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet. 6. subtractfeefromamount (boolean, optional, default=false) The fee will be deducted from the amount being sent. The recipient will receive less amount of Yerbas than you enter in the amount field. 7. &quot;use_is&quot; (bool, optional, default=false) Deprecated and ignored 8. &quot;use_cj&quot; (bool, optional, default=false) Use CoinJoin funds only 9. conf_target (numeric, optional) Confirmation target (in blocks) 10. &quot;estimate_mode&quot; (string, optional, default=UNSET) The fee estimate mode, must be one of: &quot;UNSET&quot; &quot;ECONOMICAL&quot; &quot;CONSERVATIVE&quot;  "},{"title":"Output​","type":1,"pageTitle":"sendtoaddress","url":"/docs/wallet/cli-wallet/commands/wallet/sendtoaddress/#output","content":"Result\tType\tDescriptiontxid\tstring\tThe transaction id of the submitted transaction "},{"title":"Examples​","type":1,"pageTitle":"sendtoaddress","url":"/docs/wallet/cli-wallet/commands/wallet/sendtoaddress/#examples","content":""},{"title":"Using the Yerbas-CLI:​","type":1,"pageTitle":"sendtoaddress","url":"/docs/wallet/cli-wallet/commands/wallet/sendtoaddress/#using-the-yerbas-cli","content":"Sending a simple 100 YERB transaction to a friend, with a note:​ yerbasium-cli sendtoaddress &lt;address&gt; &lt;amount&gt; &lt;&quot;own_note&quot;&gt; &lt;&quot;recipient_note&quot;&gt; yerbasium-cli sendtoaddress XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG 100 &quot;donation to you&quot; &quot;friend from club&quot; Sending a 50 YERB Futures transaction with a note, set to release after 100 block verifications and after 7 days (60s x 60m x 24h x 7d = 604800s):​ yerbasium-cli sendtoaddress &lt;address&gt; &lt;amount&gt; '{&quot;future_maturity&quot;: unlock_time_blocks, &quot;future_locktime&quot;: unlock_time_seconds}' &lt;&quot;own_note&quot;&gt; yerbasium-cli sendtoaddress XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG 100 '{&quot;future_maturity&quot;:100, &quot;future_locktime&quot;: 604800}' &quot;This will unlock in 7 days&quot;  "},{"title":"Using the RPC API:​","type":1,"pageTitle":"sendtoaddress","url":"/docs/wallet/cli-wallet/commands/wallet/sendtoaddress/#using-the-rpc-api","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;sendtoaddress&quot;, &quot;params&quot;: [&quot;XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwG&quot;, 0.1, &quot;donation&quot;, &quot;seans outpost&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/ "},{"title":"setprivatesendrounds","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/setprivatesendrounds/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"setprivatesendrounds","url":"/docs/wallet/cli-wallet/commands/wallet/setprivatesendrounds/#arguments","content":"Argument\tType\tDescriptionamount\t(numeric)\tThe default amount is 1000 Cannot be more than 21000000 nor less than 2 Arguments: 1. rounds (numeric, required) The default number of rounds is 4 Cannot be more than 16 nor less than 2  "},{"title":"Output​","type":1,"pageTitle":"setprivatesendrounds","url":"/docs/wallet/cli-wallet/commands/wallet/setprivatesendrounds/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"setprivatesendrounds","url":"/docs/wallet/cli-wallet/commands/wallet/setprivatesendrounds/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;setprivatesendrounds&quot;, &quot;params&quot;: [16] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"removeprunedfunds","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/removeprunedfunds/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"removeprunedfunds","url":"/docs/wallet/cli-wallet/commands/wallet/removeprunedfunds/#arguments","content":"Argument\tType\tDescription&quot;txid&quot;\t(string)\tThe hex-encoded id of the transaction you are deleting Arguments: 1. &quot;txid&quot; (string, required) The hex-encoded id of the transaction you are deleting  "},{"title":"Output​","type":1,"pageTitle":"removeprunedfunds","url":"/docs/wallet/cli-wallet/commands/wallet/removeprunedfunds/#output","content":"Result\tType\tDescription\ttrue\tfalse\t(boolean)\tWhether the command was successful or not Result: true|false (boolean) true if successful.  "},{"title":"Examples​","type":1,"pageTitle":"removeprunedfunds","url":"/docs/wallet/cli-wallet/commands/wallet/removeprunedfunds/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;removeprunedfunds&quot;, &quot;params&quot;: [&quot;a8d0c0184dde994a09ec054286f1ce581bebf46446a512166eae7628734ea0a5&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getpoolinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/getpoolinfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getpoolinfo","url":"/docs/wallet/cli-wallet/commands/yerbas/getpoolinfo/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"getpoolinfo","url":"/docs/wallet/cli-wallet/commands/yerbas/getpoolinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getpoolinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getgovernanceinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/getgovernanceinfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getgovernanceinfo","url":"/docs/wallet/cli-wallet/commands/yerbas/getgovernanceinfo/#output","content":"Result\tType\tDescription...\t...\t... Result: { &quot;governanceminquorum&quot;: xxxxx, (numeric) the absolute minimum number of votes needed to trigger a governance action &quot;proposalfee&quot;: xxx.xx, (numeric) the collateral transaction fee which must be paid to create a proposal in YERB &quot;superblockcycle&quot;: xxxxx, (numeric) the number of blocks between superblocks &quot;lastsuperblock&quot;: xxxxx, (numeric) the block number of the last superblock &quot;nextsuperblock&quot;: xxxxx, (numeric) the block number of the next superblock }  "},{"title":"Examples​","type":1,"pageTitle":"getgovernanceinfo","url":"/docs/wallet/cli-wallet/commands/yerbas/getgovernanceinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getgovernanceinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getsuperblockbudget","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/getsuperblockbudget/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"getsuperblockbudget","url":"/docs/wallet/cli-wallet/commands/yerbas/getsuperblockbudget/#arguments","content":"Argument\tType\tDescriptionindex\t(number)\tThe block index Arguments: 1. index (numeric, required) The block index  "},{"title":"Output​","type":1,"pageTitle":"getsuperblockbudget","url":"/docs/wallet/cli-wallet/commands/yerbas/getsuperblockbudget/#output","content":"Result\tType\tDescriptionn\t(number)\tThe absolute maximum sum of superblock payments allowed, in YERB Result: n (numeric) The absolute maximum sum of superblock payments allowed, in YERB  "},{"title":"Examples​","type":1,"pageTitle":"getsuperblockbudget","url":"/docs/wallet/cli-wallet/commands/yerbas/getsuperblockbudget/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getsuperblockbudget&quot;, &quot;params&quot;: [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"mnsync","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/mnsync/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"mnsync","url":"/docs/wallet/cli-wallet/commands/yerbas/mnsync/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"mnsync","url":"/docs/wallet/cli-wallet/commands/yerbas/mnsync/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;mnsync&quot;, &quot;params&quot;: [&quot;status&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"listtransactions","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/listtransactions/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"listtransactions","url":"/docs/wallet/cli-wallet/commands/wallet/listtransactions/#arguments","content":"Argument\tType\tDescription&quot;account&quot;\t(string)\tDEPRECATED. The account name. Should be &quot;*&quot;. count\t(numeric)\tThe number of transactions to return skip\t(numeric)\tThe number of transactions to skip include_watchonly\t(bool)\tInclude balances in watch-only addresses (see 'importaddress') Arguments: 1. &quot;account&quot; (string, optional) DEPRECATED. The account name. Should be &quot;*&quot;. 2. count (numeric, optional, default=10) The number of transactions to return 3. skip (numeric, optional, default=0) The number of transactions to skip 4. include_watchonly (bool, optional, default=false) Include transactions to watch-only addresses (see 'importaddress')  "},{"title":"Output​","type":1,"pageTitle":"listtransactions","url":"/docs/wallet/cli-wallet/commands/wallet/listtransactions/#output","content":"Result\tType\tDescription&quot;account&quot;\t(string)\tDEPRECATED. The account name associated with the transaction. It will be &quot;&quot; for the default account. Result: [ { &quot;account&quot;:&quot;accountname&quot;, (string) DEPRECATED. The account name associated with the transaction. It will be &quot;&quot; for the default account. &quot;address&quot;:&quot;address&quot;, (string) The yerbas address of the transaction. Not present for move transactions (category = move). &quot;category&quot;:&quot;send|receive|move&quot;, (string) The transaction category. 'move' is a local (off blockchain) transaction between accounts, and not associated with an address, transaction id or block. 'send' and 'receive' transactions are associated with an address, transaction id and block details &quot;amount&quot;: x.xxx, (numeric) The amount in YERB. This is negative for the 'send' category, and for the 'move' category for moves outbound. It is positive for the 'receive' category, and for the 'move' category for inbound funds. &quot;label&quot;: &quot;label&quot;, (string) A comment for the address/transaction, if any &quot;vout&quot;: n, (numeric) the vout value &quot;fee&quot;: x.xxx, (numeric) The amount of the fee in YERB. This is negative and only available for the 'send' category of transactions. &quot;confirmations&quot;: n, (numeric) The number of blockchain confirmations for the transaction. Available for 'send' and 'receive' category of transactions. Negative confirmations indicate the transation conflicts with the block chain &quot;instantlock&quot; : true|false, (bool) Current transaction lock state. Available for 'send' and 'receive' category of transactions. &quot;instantlock_internal&quot; : true|false, (bool) Current internal transaction lock state. Available for 'send' and 'receive' category of transactions. &quot;chainlock&quot; : true|false, (bool) The state of the corresponding block chainlock &quot;trusted&quot;: xxx, (bool) Whether we consider the outputs of this unconfirmed transaction safe to spend. &quot;blockhash&quot;: &quot;hashvalue&quot;, (string) The block hash containing the transaction. Available for 'send' and 'receive' category of transactions. &quot;blockindex&quot;: n, (numeric) The index of the transaction in the block that includes it. Available for 'send' and 'receive' category of transactions. &quot;blocktime&quot;: xxx, (numeric) The block time in seconds since epoch (1 Jan 1970 GMT). &quot;txid&quot;: &quot;transactionid&quot;, (string) The transaction id. Available for 'send' and 'receive' category of transactions. &quot;time&quot;: xxx, (numeric) The transaction time in seconds since epoch (midnight Jan 1 1970 GMT). &quot;timereceived&quot;: xxx, (numeric) The time received in seconds since epoch (midnight Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions. &quot;comment&quot;: &quot;...&quot;, (string) If a comment is associated with the transaction. &quot;otheraccount&quot;: &quot;accountname&quot;, (string) DEPRECATED. For the 'move' category of transactions, the account the funds came from (for receiving funds, positive amounts), or went to (for sending funds, negative amounts). &quot;abandoned&quot;: xxx (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the 'send' category of transactions. } ]  "},{"title":"Examples​","type":1,"pageTitle":"listtransactions","url":"/docs/wallet/cli-wallet/commands/wallet/listtransactions/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;listtransactions&quot;, &quot;params&quot;: [&quot;*&quot;, 20, 100] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"walletpassphrasechange","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/walletpassphrasechange/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"walletpassphrasechange","url":"/docs/wallet/cli-wallet/commands/wallet/walletpassphrasechange/#arguments","content":"Argument\tType\tDescription&quot;oldpassphrase&quot;\t(string)\tThe current passphrase &quot;newpassphrase&quot;\t(string)\tThe new passphrase Arguments: 1. &quot;oldpassphrase&quot; (string) The current passphrase 2. &quot;newpassphrase&quot; (string) The new passphrase  "},{"title":"Output​","type":1,"pageTitle":"walletpassphrasechange","url":"/docs/wallet/cli-wallet/commands/wallet/walletpassphrasechange/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"walletpassphrasechange","url":"/docs/wallet/cli-wallet/commands/wallet/walletpassphrasechange/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;walletpassphrasechange&quot;, &quot;params&quot;: [&quot;old one&quot;, &quot;new one&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"gobject","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/gobject/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"gobject","url":"/docs/wallet/cli-wallet/commands/yerbas/gobject/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"gobject","url":"/docs/wallet/cli-wallet/commands/yerbas/gobject/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;gobject&quot;, &quot;params&quot;: [&quot;check&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"privatesend","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/privatesend/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"privatesend","url":"/docs/wallet/cli-wallet/commands/yerbas/privatesend/#arguments","content":"Argument\tType\tDescription&quot;command&quot;\t(string)\tThe command to execute Arguments: 1. &quot;command&quot; (string or set of strings, required) The command to execute  "},{"title":"Output​","type":1,"pageTitle":"privatesend","url":"/docs/wallet/cli-wallet/commands/yerbas/privatesend/#output","content":"Result\tType\tDescription...\t...\t... Result: { }  "},{"title":"Examples​","type":1,"pageTitle":"privatesend","url":"/docs/wallet/cli-wallet/commands/yerbas/privatesend/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;privatesend&quot;, &quot;params&quot;: [&quot;start&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"walletpassphrase","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/wallet/walletpassphrase/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"walletpassphrase","url":"/docs/wallet/cli-wallet/commands/wallet/walletpassphrase/#arguments","content":"Argument\tType\tDescription&quot;passphrase&quot;\t(string)\tThe wallet passphrase timeout\t(numeric)\tThe time to keep the decryption key in seconds. mixingonly\t(boolean)\tIf is true sending functions are disabled Arguments: 1. &quot;passphrase&quot; (string, required) The wallet passphrase 2. timeout (numeric, required) The time to keep the decryption key in seconds. 3. mixingonly (boolean, optional, default=false) If is true sending functions are disabled.  "},{"title":"Output​","type":1,"pageTitle":"walletpassphrase","url":"/docs/wallet/cli-wallet/commands/wallet/walletpassphrase/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"walletpassphrase","url":"/docs/wallet/cli-wallet/commands/wallet/walletpassphrase/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;walletpassphrase&quot;, &quot;params&quot;: [&quot;my pass phrase&quot;, 60] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"Getting started","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/getting-started/","content":"","keywords":""},{"title":"Installation​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/cli-wallet/getting-started/#installation","content":"WindowsMacLinux Binaries: yerbas-win-2.1.1.4.zip "},{"title":"Setup​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/cli-wallet/getting-started/#setup","content":""},{"title":"Standalone Zip​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/cli-wallet/getting-started/#standalone-zip","content":"Extract the zipUse the following per use case: yerbasd - Yerbas Daemonyerbas-qt - Yerbas Wallet GUIyerbas-cli - Yerbas Wallet CLIyerbas-tx - Yerbas Tx Utility Run Daemon and ./yerbas-cli for Wallet CLIAllow Daemon to Sync (Use the bootstrap) "},{"title":"Precompiled Binaries​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/cli-wallet/getting-started/#precompiled-binaries","content":"Download release for Ubuntu 18 or 20:Extract contents: tar xzvf yerbas_1.2.15.2_ubuntu20_64.tar.gz Use the following per use case: yerbasd - Yerbas Daemonyerbas-qt - Yerbas Wallet GUIyerbas-cli - Yerbas Wallet CLIyerbas-tx - Yerbas Tx Utility Run Daemon and yerbas-cli for Wallet CLIAllow Daemon to Sync (Use the bootstrap) "},{"title":"spork","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/spork/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"spork","url":"/docs/wallet/cli-wallet/commands/yerbas/spork/#arguments","content":"Argument\tType\tDescription&quot;command&quot;\t(string)\tThe command to execute Arguments: 1. &quot;command&quot; (string or set of strings, required) The command to execute  "},{"title":"Output​","type":1,"pageTitle":"spork","url":"/docs/wallet/cli-wallet/commands/yerbas/spork/#output","content":"Result\tType\tDescription...\t...\t... Result: For 'show': { &quot;SPORK_NAME&quot; : spork_value, (number) The value of the specific spork with the name SPORK_NAME ... } For 'active': { &quot;SPORK_NAME&quot; : true|false, (boolean) 'true' for time-based sporks if spork is active and 'false' otherwise ... }  "},{"title":"Examples​","type":1,"pageTitle":"spork","url":"/docs/wallet/cli-wallet/commands/yerbas/spork/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;spork&quot;, &quot;params&quot;: [&quot;show&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"voteraw","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/voteraw/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"voteraw","url":"/docs/wallet/cli-wallet/commands/yerbas/voteraw/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"voteraw","url":"/docs/wallet/cli-wallet/commands/yerbas/voteraw/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;voteraw&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"Menu Options","type":0,"sectionRef":"#","url":"/docs/wallet/gui-wallet/guiwalletguide/menuoptions/","content":"","keywords":""},{"title":"File Menu​","type":1,"pageTitle":"Menu Options","url":"/docs/wallet/gui-wallet/guiwalletguide/menuoptions/#file-menu","content":" Open URI → Load a Payment Requestby URIBackup Wallet → Create a Backup Wallet.datSign Message → Allows Signing of aMessage to Prove Account OwnershipVerify Message → Allows Checking of aMessage and Signature to Verify it is ValidSending Addresses → List of Addresses you previously SENT YERB toReceiving Addresses → List of Addresses to RECEIVE YERB to your wallet with.Exit → Close the Wallet&amp; Exit "},{"title":"Settings Menu​","type":1,"pageTitle":"Menu Options","url":"/docs/wallet/gui-wallet/guiwalletguide/menuoptions/#settings-menu","content":" Encrypt Wallet → Encrypts the Wallet with PasswordChange Passphrase → Allows Changing the PasswordUnlock Wallet → Unlocks the Wallet forUseOptions → Opens up the WalletOptions Window "},{"title":"Tools Menu​","type":1,"pageTitle":"Menu Options","url":"/docs/wallet/gui-wallet/guiwalletguide/menuoptions/#tools-menu","content":" Information → Wallet &amp; NetworkInfoDebug Console → Allows Direct CommandInputsNetwork Monitor → Show Network TrafficInformationPeers List → Show Wallet ConnectionInformationWallet Repair Repair Functions(Backup FIRST)Open Wallet Conf... → Opens Wallet Config “yerbas.conf”Show Automatic Ba... → Opens Wallet Backups Folder "},{"title":"Help Menu​","type":1,"pageTitle":"Menu Options","url":"/docs/wallet/gui-wallet/guiwalletguide/menuoptions/#help-menu","content":" Command-line Options → List of Debug Console CommandsPrivateSend Information → Explains how PrivateSend WorksAbout Yerbas Core → Wallet Version &amp; Software InfoAbout Qt → Info about Qt Toolkit "},{"title":"Receive","type":0,"sectionRef":"#","url":"/docs/wallet/gui-wallet/guiwalletguide/receive/","content":"Receive Label the Receiving RequestAMOUNT of REQUEST(Optional) Add a Message to the RequestUses an Address Already Used in the Wallet (Not Recommended)Request Payment: Gives You a Wallet Address, URI, &amp; QR Code for requesting paymentsList of Past RequestsClick on a Request in the list and then → Show: Brings up the Old Request w/ QR code Remove: Deletes the Request from the list","keywords":""},{"title":"Getting started","type":0,"sectionRef":"#","url":"/docs/wallet/gui-wallet/getting-started/","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/gui-wallet/getting-started/#usage","content":""},{"title":"Binaries​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/gui-wallet/getting-started/#binaries","content":"yerbasd - Yerbas Daemonyerbas-qt - Yerbas Wallet GUIyerbas-cli - Yerbas Wallet CLIyerbas-tx - Yerbas Tx Utility "},{"title":"The basics​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/gui-wallet/getting-started/#the-basics","content":"Generating a new wallet address "},{"title":"Transactions​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/gui-wallet/getting-started/#transactions","content":"How to make a transaction How to receive a transaction How to verify a transaction Transaction confirmation on the blockchain Masternodes &amp; transaction security "},{"title":"Special features​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/gui-wallet/getting-started/#special-features","content":"Private Sending (PrivateSend/CoinJoin)SmartnodesAssets "},{"title":"Setup​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/gui-wallet/getting-started/#setup","content":"WindowsMacLinux Binaries: yerbas-win-2.1.1.4.zip "},{"title":"Installer​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/gui-wallet/getting-started/#installer","content":"Download the latest release [here][#setup] or on GitHubRun the installer (.exe or .dmg) and follow the stepsRun the YerbasCore Daemon (yerbasd)Open the wallet CLIRun yerbas-cli.exe from the command line to useGUIRun yerbas-qt.exe to open Allow Daemon to Sync (Use the bootstrap package) "},{"title":"Binaries​","type":1,"pageTitle":"Getting started","url":"/docs/wallet/gui-wallet/getting-started/#binaries-1","content":"Download the latest release [here][#setup] or on GitHubExtract the archive to your desired locationRun the YerbasCore Daemon (yerbasd)Open the wallet CLIRun yerbas-cli from the command line to useGUIRun yerbas-qt to open Allow Daemon to Sync (Use the bootstrap package) "},{"title":"Transactions","type":0,"sectionRef":"#","url":"/docs/wallet/gui-wallet/guiwalletguide/transactions/","content":"Transactions Status Unconfirmed | ConfirmedDate/Time of TXType of TXAddress (Received With OR Sent To)Amount of TX (Received OR Sent)Total of Selected TXs a. Click and Drag to Highlight Severalb. Ctrl + Click to Select each desired TXc. Click, Hold Shift, Click again to select everythingin between your clicks Export TXs to CSV File","keywords":""},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/wallet/gui-wallet/installation/","content":"","keywords":""},{"title":"Installer (Windows)​","type":1,"pageTitle":"Installation","url":"/docs/wallet/gui-wallet/installation/#installer-windows","content":"Download the latest installer (setup) release for WindowsExecute the .exe or .msi fileChoose a path to install the wallet or use the default pathThe wallet will startup and begin to Sync "},{"title":"Binaries (Windows)​","type":1,"pageTitle":"Installation","url":"/docs/wallet/gui-wallet/installation/#binaries-windows","content":"Download the latest wallet release for WindowsExtract the contents of the .zip fileRun: yerbas-qt.exeThe wallet will startup and begin to Sync "},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/wallet/gui-wallet/overview/","content":"","keywords":""},{"title":"Balances​","type":1,"pageTitle":"Overview","url":"/docs/wallet/gui-wallet/overview/#balances","content":"Available: Total of All Mature Inputs Pending: Pending TX totals Immature: Received TXs Waiting to Confirm Total: Available + Immature Balances "},{"title":"Private Send Info​","type":1,"pageTitle":"Overview","url":"/docs/wallet/gui-wallet/overview/#private-send-info","content":"note Can be used for privacy mixing of your funds Explained in Menu → Help → PrivateSend Status: Status of PrivateSend PrivateSend Balance: Current balance of PrivateSend Amount and Rounds: Amount to PrivateSend and mixing rounds "},{"title":"Recent Transactions​","type":1,"pageTitle":"Overview","url":"/docs/wallet/gui-wallet/overview/#recent-transactions","content":"Recent Transactions: Most Recent Wallet TXs (Inbound &amp; Outbound) "},{"title":"Syncing","type":0,"sectionRef":"#","url":"/docs/wallet/gui-wallet/guiwalletguide/syncing/","content":"Syncing Syncing If this is the first time running the YERB wallet,it may take several minutes to an hour to sync. Sync status will appear in the bottom left of the window. note The wallet must sync fully to the current network block height before you can see your current balance or send funds from it! You can always check the network's current block height at the Yerbas Explorer You will see the status if you hover your mouse icon over the the bottom right corner of the wallet: When fully synced, you will see:","keywords":""},{"title":"Send","type":0,"sectionRef":"#","url":"/docs/wallet/gui-wallet/guiwalletguide/send/","content":"Send YERB Address you are sending to.(Optional) A text label to attach to the address you are sending to.Amount of YERB you want to send.Include fee in the sending amount (or not to).Address Book, Paste Address From Clipboard, ClearTX InfoChoose the fee to send your TX with → This can affect the time to confirm your TX.Send. Click here to send the TX → (You must wait 3s &amp; then click YES to send)Use Privacy Mixing to send TX.Available balance.","keywords":""},{"title":"smartnodelist","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/smartnodelist/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"smartnodelist","url":"/docs/wallet/cli-wallet/commands/yerbas/smartnodelist/#arguments","content":"Argument\tType\tDescription&quot;mode&quot;\t(string)\tThe mode to run list in &quot;filter&quot;\t(string)\tFilter results. Partial match by outpoint by default in all modes, additional matches in some modes are also available Arguments: 1. &quot;mode&quot; (string, optional/required to use filter, defaults = json) The mode to run list in 2. &quot;filter&quot; (string, optional) Filter results. Partial match by outpoint by default in all modes, additional matches in some modes are also available  "},{"title":"Output​","type":1,"pageTitle":"smartnodelist","url":"/docs/wallet/cli-wallet/commands/yerbas/smartnodelist/#output","content":"Result\tType\tDescription...\t...\t... Result: { }  "},{"title":"Examples​","type":1,"pageTitle":"smartnodelist","url":"/docs/wallet/cli-wallet/commands/yerbas/smartnodelist/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;smartnodelist&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"getprivatesendinfo","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/getprivatesendinfo/","content":"","keywords":""},{"title":"Output​","type":1,"pageTitle":"getprivatesendinfo","url":"/docs/wallet/cli-wallet/commands/yerbas/getprivatesendinfo/#output","content":"Result\tType\tDescription...\t...\t... Result (for regular nodes): { &quot;enabled&quot;: true|false, (bool) Whether mixing functionality is enabled &quot;running&quot;: true|false, (bool) Whether mixing is currently running &quot;multisession&quot;: true|false, (bool) Whether PrivateSend Multisession option is enabled &quot;max_sessions&quot;: xxx, (numeric) How many parallel mixing sessions can there be at once &quot;max_rounds&quot;: xxx, (numeric) How many rounds to mix &quot;max_amount&quot;: xxx, (numeric) Target PrivateSend balance in YERB &quot;max_denoms&quot;: xxx, (numeric) How many inputs of each denominated amount to create &quot;queue_size&quot;: xxx, (numeric) How many queues there are currently on the network &quot;sessions&quot;: (array of json objects) [ { &quot;protxhash&quot;: &quot;...&quot;, (string) The ProTxHash of the smartnode &quot;outpoint&quot;: &quot;txid-index&quot;, (string) The outpoint of the smartnode &quot;service&quot;: &quot;host:port&quot;, (string) The IP address and port of the smartnode &quot;denomination&quot;: xxx, (numeric) The denomination of the mixing session in YERB &quot;state&quot;: &quot;...&quot;, (string) Current state of the mixing session &quot;entries_count&quot;: xxx, (numeric) The number of entries in the mixing session } ,... ], &quot;keys_left&quot;: xxx, (numeric) How many new keys are left since last automatic backup &quot;warnings&quot;: &quot;...&quot; (string) Warnings if any } Result (for smartnodes): { &quot;queue_size&quot;: xxx, (numeric) How many queues there are currently on the network &quot;denomination&quot;: xxx, (numeric) The denomination of the mixing session in YERB &quot;state&quot;: &quot;...&quot;, (string) Current state of the mixing session &quot;entries_count&quot;: xxx, (numeric) The number of entries in the mixing session }  "},{"title":"Examples​","type":1,"pageTitle":"getprivatesendinfo","url":"/docs/wallet/cli-wallet/commands/yerbas/getprivatesendinfo/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getprivatesendinfo&quot;, &quot;params&quot;: [] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"smartnode","type":0,"sectionRef":"#","url":"/docs/wallet/cli-wallet/commands/yerbas/smartnode/","content":"","keywords":""},{"title":"Arguments​","type":1,"pageTitle":"smartnode","url":"/docs/wallet/cli-wallet/commands/yerbas/smartnode/#arguments","content":"Argument\tType\tDescription&quot;command&quot;\t(string)\tThe command to execute Arguments: 1. &quot;command&quot; (string or set of strings, required) The command to execute  "},{"title":"Output​","type":1,"pageTitle":"smartnode","url":"/docs/wallet/cli-wallet/commands/yerbas/smartnode/#output","content":"Result\tType\tDescription...\t...\t... Result: { ... }  "},{"title":"Examples​","type":1,"pageTitle":"smartnode","url":"/docs/wallet/cli-wallet/commands/yerbas/smartnode/#examples","content":"curl --user myusername --data-binary '{&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;smartnode&quot;, &quot;params&quot;: [&quot;count&quot;] }' -H 'content-type: text/plain;' http://127.0.0.1:9998/  "},{"title":"Maintenance","type":0,"sectionRef":"#","url":"/docs/wallet/maintenance/","content":"","keywords":""},{"title":"Restoring from backup​","type":1,"pageTitle":"Maintenance","url":"/docs/wallet/maintenance/#restoring-from-backup","content":"Each time your wallet closes, it automatically makes a backup of your wallet.dat file. These are automatically renamed by their date of creation, and copied to the backups folder in your YerbasCore Data directory. Stop the wallet, wait two minutes.Rename the current wallet.dat so it does not get overwritten, if you know for sure it is not used you can delete it.Copy in your backup and if necessary rename it to wallet.dat.Start your wallet, wait for it to rescan and fully resynchronize with the Yerbas blockchain. To restore a Yerbascore wallet which is using HD mode with mnemonic phrase see below: Info You should always have a recent encrypted wallet.dat backup saved in multiple locations as well as offline, such on a safely stored USB drive. One copy is no copies, two copies is one copy. "},{"title":"Moving Wallet To Another PC​","type":1,"pageTitle":"Maintenance","url":"/docs/wallet/maintenance/#moving-wallet-to-another-pc","content":"Close Yerbascore.Transfer the wallet.dat file from Yerbascore data directory to the other PC.Alternatively you can copy the entire Yerbascore directory over to save time on synchronizing.Create the Yerbascore directory on the destination PC, check the Restoring From Backup part of this guide for paths and naming.Put your wallet.dat in this directory as well as any other files and folders (if you copied over the entire Yerbascore directory).Start Yerbascore. "},{"title":"Encrypt & Backup","type":0,"sectionRef":"#","url":"/docs/wallet/gui-wallet/guiwalletguide/encryptbackup/","content":"","keywords":""},{"title":"Encrypting​","type":1,"pageTitle":"Encrypt & Backup","url":"/docs/wallet/gui-wallet/guiwalletguide/encryptbackup/#encrypting","content":"Private keys are stored in your wallet. When you first load the wallet there is no password and it is NOT encrypted. To encrypt the wallet, go to the Settings menu dropdown and select Encrypt Wallet  caution SAVE THIS PASSWORD - Losing this password means you lose access to all of your Yerbas funds! The wallet will now restart with the encrypted file. "},{"title":"Backup​","type":1,"pageTitle":"Encrypt & Backup","url":"/docs/wallet/gui-wallet/guiwalletguide/encryptbackup/#backup","content":"Backup the following items: Wallet File: Your wallet keeps backup files from the last 10 successful closes of the application. It also keeps a single current version that it uses when loading. You can find the file that holds your private keys in the Yerbas core data folder that you installed the wallet to. By default it is named wallet.dat Private Keys: When in the wallet, go to the Tools dropdown and select Debug Console. Enter the following to retrieve your keys: Single Address Private Key: dumpprivkey ADDRESS  Entire Wallet All Keys dumpwallet FILENAME  info This will dump all your keys to a txt file in your qt .exe folder "},{"title":"PrivateSend","type":0,"sectionRef":"#","url":"/docs/wallet/gui-wallet/guiwalletguide/privatesend/","content":"","keywords":""},{"title":"Using PrivateSend​","type":1,"pageTitle":"PrivateSend","url":"/docs/wallet/gui-wallet/guiwalletguide/privatesend/#using-privatesend","content":"Info To start you must have automatic backups enabled (on by default) and your wallet must be encrypted. Go to Settings &gt; Options, and set PrivateSend Rounds to use and Target PrivateSend balance. The default amount of rounds is 4, increasing that increases privacy but also mixing time. PrivateSend balance is the balance mixing will stop at AKA your amount of private coins.  There are a few other options in the above screenshot which you can enable or disable as you like. Enable advanced PrivateSend interface: This will display additional detailed information just above the &quot;Stop Mixing&quot; button.Show popups for PrivateSend transactions: Mixing creates quite a few transactions so you may want to disable this.Warn if PrivateSend is running out of keys: Displays a warning if running low on keys. No action is needed by the user here, the wallet will create more as needed. But make sure to create a new backup of your wallet if you see this warning and more keys are created. To begin the process click the &quot;Start Mixing&quot; button. Mixing transactions are atomic which means they either take place completely or not at all. You can interrupt the mixing process safely at any time. This means stopping the mixing process, closing the wallet, killing the wallet (PC reboots for example), or disabling the PrivateSend feature before mixing is complete. "},{"title":"Sending PrivateSend Coins​","type":1,"pageTitle":"PrivateSend","url":"/docs/wallet/gui-wallet/guiwalletguide/privatesend/#sending-privatesend-coins","content":"In the Receive section of your wallet in the bottom right hand corner you will see a box that needs to be marked in order for you to send PrivateSend YERB. When you mark it, the balance will change to show you your current PrivateSend balance.  Once that box is marked you may send mixed Yerbas for increased privacy. If you run into an error when sending mixed YERB which mentions not enough inputs selecting the Subtract fee from amount box on the sending screen will usually resolve it. PrivateSend transactions must spend all inputs completely so PrivateSend transaction amount will be rounded up to accommodate. PrivateSend transaction size is generally larger then a regular transaction and require a slightly larger fee. You can see all available PrivateSend inputs in your wallets Coin Control section, the PS column shows the amount of mixing rounds.  Making your PrivateSend transactions can slightly increase your privacy, you can do so by selecting the most efficient (least) amount of inputs from Coin Control when sending. If you want to see what a PrivateSend transaction looks like &quot;on-chain&quot; you can check here. "},{"title":"Quick Start","type":0,"sectionRef":"#","url":"/docs/wallet/quick-start/","content":"","keywords":""},{"title":"Setup​","type":1,"pageTitle":"Quick Start","url":"/docs/wallet/quick-start/#setup","content":"WindowsMacLinux Binaries: yerbas-win-2.1.1.4.zip "},{"title":"Installer​","type":1,"pageTitle":"Quick Start","url":"/docs/wallet/quick-start/#installer","content":"Download the latest release [here][#setup] or on GitHubRun the installer (.exe or .dmg) and follow the stepsRun the YerbasCore Daemon (yerbasd)Open the wallet CLIRun yerbas-cli.exe from the command line to useGUIRun yerbas-qt.exe to open Allow Daemon to Sync (Use the bootstrap package) "},{"title":"Binaries​","type":1,"pageTitle":"Quick Start","url":"/docs/wallet/quick-start/#binaries","content":"Download the latest release [here][#setup] or on GitHubExtract the archive to your desired locationRun the YerbasCore Daemon (yerbasd)Open the wallet CLIRun yerbas-cli from the command line to useGUIRun yerbas-qt to open Allow Daemon to Sync (Use the bootstrap package) "},{"title":"Yerbas","type":0,"sectionRef":"#","url":"/docs/yerbas/","content":"","keywords":""},{"title":"How Yerbas works​","type":1,"pageTitle":"Yerbas","url":"/docs/yerbas/#how-yerbas-works","content":"Launched on May 9th, 2022. Yerbas is an open-source project designed to enable instant payments to anyone around the world. The aim of the project is to create a blockchain optimized specifically for the transfer of assets such as tokens from one holder to another. Read the Papers » "},{"title":"POW (Proof Of Work) and Mining​","type":1,"pageTitle":"Yerbas","url":"/docs/yerbas/#pow-proof-of-work-and-mining","content":"Yerbas uses an algorithm code named GhostRider. This algorithm was designed to keep ASICS and FPGAs off of the network by making entry cost prohibitive and risky. This allows anybody to mine Yerbas with their CPU and earn a reasonable amount of YERB coins. Yerbas will also be mineable with GPU when a miner has been released. Initial testing shows that GPU will not have an advantage over CPU. $1000 worth of GPU and $1000 worth of CPU may give very similar rewards. The fact that anyone anywhere can contribute to the network and earn should increase the projects decentralization, unlike networks where ASIC are present or GPU have such a large advantage that CPUs become obsolete. The GhostRider algorithms whitepaper is here: "},{"title":"Yerbas Assets​","type":1,"pageTitle":"Yerbas","url":"/docs/yerbas/#yerbas-assets","content":"A Yerbas asset (also less commonly referred to as a token) is an on-chain way of creating, storing, and transfering custom end-user generated information. Assets come with a unique, user-chosen name which can allow for assets to be verified by name only and metadata (which we will look into later). Learn more about Assets on Yerbas » "},{"title":"Yerbas PrivateSend​","type":1,"pageTitle":"Yerbas","url":"/docs/yerbas/#yerbas-privatesend","content":"Private send is a Yerbas feature inherited from DASH, it allows you to obscure the source of sent YERB. To do this it uses mixing which takes place on the Smartnode network and uses inputs (inputs = coins) from at least two other users that have enabled mixing in their wallets. Your coins never leave your wallet. Learn more about PrivateSend » "},{"title":"PrivateSend","type":0,"sectionRef":"#","url":"/docs/wallet/privatesend/","content":"","keywords":""},{"title":"Yerbas PrivateSend​","type":1,"pageTitle":"PrivateSend","url":"/docs/wallet/privatesend/#yerbas-privatesend","content":"Private send is a Yerbas feature inherited from DASH, it allows you to obscure the source of sent YERB. To do this it uses mixing which takes place on the Smartnode network and uses inputs (inputs = coins) from at least two other users that have enabled mixing in their wallets. Your coins never leave your wallet. GUI Wallet Guide for PrivateSend » "},{"title":"How it Works​","type":1,"pageTitle":"PrivateSend","url":"/docs/wallet/privatesend/#how-it-works","content":"When enabling mixing Private Send breaks your inputs down into standard denominations like 0.001, 0.01, 0.1, 1, 10.Your mixing request is sent to the Smartnode network. No identifying information is sent to the Smartnode network, IP address for example. Which Smartnodes are used is random so it cannot be anticipated.When two other people enable mixing with the same denominations a mixing session begins. The Smartnode mixes the inputs of all three users wallets to pay the mixed denomination (input) back to themselves. Your wallet pays the denomination back to itself using a change address.When starting a mixing session you can choose between 1 and 16 rounds. Each round makes it exponentially harder to track where private send coins came from. The default amount of rounds is 4. Your wallet needs to complete X amount of rounds for each denomination.Mixing takes time to complete, the less users that are using the longer it might take. If planning to use private send it is best to make a mixing session before you expect to spend private send coins. note By default the core wallet contains 1000 change addresses, each mixing event will use one. If these addresses become depleted the wallet will automatically create more. In order for it to create more automatic backups must be enabled (on by default). This is a failsafe feature to make sure you have a backup of the new keys once they are generated as they would not exist in previous backups. "},{"title":"Troubleshooting","type":0,"sectionRef":"#","url":"/docs/wallet/troubleshooting/","content":"","keywords":""},{"title":"Yerbascore Fails To Synchronize​","type":1,"pageTitle":"Troubleshooting","url":"/docs/wallet/troubleshooting/#yerbascore-fails-to-synchronize","content":"Yerbascore can fail to synchronize for a few different reasons, the most common ones being: A bad / invalid header or block locally. In your debug console &gt; Peers you will see peers connecting and then being banned as a symptom.Corrupted database files. Wallet will fail to progress on synchronization.Errors related to .dat files, most commonly mncache.dat and sporks.dat. To fix the first two issues it is best to resynchronize the wallet either from scratch or from bootstrap. Using the bootstrap is much faster. Either option starts with removing the following folders from Yerbascore data directory: blocks chainstate evodb llmq  If you want to resynchronize from scratch start the wallet now. If you want to use the bootstrap: Download bootstrap.zip listed on our latest release: https://github.com/The-Yerbas-Endeavor/yerbas/releases/Unzip the bootstrap and copy the folders into Yerbascore data directory.Start the wallet. "},{"title":"Fixing .dat Related Errors​","type":1,"pageTitle":"Troubleshooting","url":"/docs/wallet/troubleshooting/#fixing-dat-related-errors","content":"In most cases stopping the wallet and removing the mentioned .dat file is enough. If after starting the wallet you receive further .dat errors or the same .dat error then remove all .dat files except for any wallet.dat files, and start the wallet. note The first time starting Yerbascore progress will seem quite slow, this does not mean the wallet is not synchronizing, it can take up to a day for it to fully synchronize. The slow part is when it says &quot;Synchronizing headers&quot; after that it progresses much quicker. "},{"title":"Yerbascore is Showing Incorrect Balance​","type":1,"pageTitle":"Troubleshooting","url":"/docs/wallet/troubleshooting/#yerbascore-is-showing-incorrect-balance","content":"Go to Tools &gt; Wallet Repair &gt; Rescan blockchain files. Using CLI you can do this by using the -rescan flag when starting yerbasd: ./yerbasd -rescan  "},{"title":"Fixing Long Synchronization Times​","type":1,"pageTitle":"Troubleshooting","url":"/docs/wallet/troubleshooting/#fixing-long-synchronization-times","content":"The first time you synchronize YerbasCore it can take up to a day to fully synchronize. You can reduce this time in most cases to less than one hour by using a bootstrap. We provide a bootstrap with our releases on Github for this reason, it is updated once per month. You can use the bootstrap like so: Download: (Yerbas bootstrap packages)[https://bootstrap.yerbas.com/] Stop wallet or daemon In your wallets data directory delete folders: blocks chainstate evodb llmq Unzip bootstrap and copy folder into your data directory Start wallet "},{"title":"Miscellaneous​","type":1,"pageTitle":"Troubleshooting","url":"/docs/wallet/troubleshooting/#miscellaneous","content":"If you are experiencing errors or having a hard time synchronizing the wallet and do not see your specific issue above removing all files in your Yerbascore data directory except: wallet.dat files.&quot;backups&quot; directory.yerbas.conf if used. Using the bootstrap will in most cases fix the problem. If not make sure you are using the correct wallet for your operating system. If you cannot resolve the issue don't hesitate to drop in on our Discord for support. "},{"title":"YERB Exchanges","type":0,"sectionRef":"#","url":"/docs/yerbas/exchanges/","content":"","keywords":""},{"title":"Pairs & Exchanges​","type":1,"pageTitle":"YERB Exchanges","url":"/docs/yerbas/exchanges/#pairs--exchanges","content":""},{"title":"YERB/USDT​","type":1,"pageTitle":"YERB Exchanges","url":"/docs/yerbas/exchanges/#yerbusdt","content":"Exbitron YERB/USDT: https://www.exbitron.com/trading/yerbusdt Bitoreum YERB/USDT: https://www.bitoreum.exchange/market/yerbusdt "},{"title":"wYERB Bridges & Swaps​","type":1,"pageTitle":"YERB Exchanges","url":"/docs/yerbas/exchanges/#wyerb-bridges--swaps","content":""},{"title":"wYERB on BSC​","type":1,"pageTitle":"YERB Exchanges","url":"/docs/yerbas/exchanges/#wyerb-on-bsc","content":"Yerbas Bridge: https://wrap.yerbas.org/ PancakeSwap: https://pancakeswap.finance/swap?outputCurrency=0x2100591c0b692c53a0E11cc328646309e6ea12eF&amp;inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56 "},{"title":"Yerbas Whitepaper","type":0,"sectionRef":"#","url":"/docs/yerbas/papers/yerbaswhitepaper/","content":"Yerbas Whitepaper Page 1 of 📜 Download ← PreviousNext → Loading PDF…","keywords":""},{"title":"Ghostrider Whitepaper","type":0,"sectionRef":"#","url":"/docs/yerbas/papers/ghostriderwhitepaper/","content":"Ghostrider Whitepaper Page 1 of 📜 Download ← PreviousNext → Loading PDF…","keywords":""},{"title":"Reward & Emissions","type":0,"sectionRef":"#","url":"/docs/yerbas/papers/rewardemissions/","content":"","keywords":""},{"title":"At every 1,000,000 blocks, Yerbas has implemented a custom reward structure that not only makes Yerb emissions smooth, but also unique.","type":1,"pageTitle":"Reward & Emissions","url":"/docs/yerbas/papers/rewardemissions/##","content":"The block reward emission schedule: Block#\tBlockreward\tMiner Reward\tSmartnode Reward\tDev Reward 0 - 420\t4.2\t4.2\t0\t0 421 – 1,000,000\t100\t75\t20\t5 1,000,000 - 2,000,000\t80\t60\t16\t4 2,000,000 - 3,000,000\t70\t52.5\t14\t3.5 3,000,000 - 4,000,000\t50\t37.5\t10\t2.5 4,000,000 - 5,000,000\t40\t30\t8\t2 5,000,000 - 6,000,000\t20\t15\t4\t1 6,000,000 - 7,000,000\t10\t7.5\t2\t0.5 7,000,000 - 8,000,000\t9\t6.75\t1.8\t0.45 8,000,000 - 9,000,000\t8\t6\t1.6\t0.4 9,000,000 - 10,000,000\t7\t5.25\t1.4\t0.35 10,000,000 - 11,000,000\t6\t4.5\t1.6\t0.3 11,000,000 - 12,000,000\t5\t3.75\t1.\t0.25 12,000,000 - 13,000,000\t4.20\t3.15\t0.84\t0.21 13,000,000 - 14,000,000\t3\t2.25\t0.6\t0.15 14,000,000 - 15,000,000\t2\t1.5\t0.4\t0.1 15,000,000 - 16,000,000\t1\t0.75\t0.2\t0.05 16,000,000 +\t0.420\t0.315\t0.084\t0.021 "},{"title":"How many days is 1,000,000 blocks?","type":1,"pageTitle":"Reward & Emissions","url":"/docs/yerbas/papers/rewardemissions/##","content":"1,000,000 blocks = 1,388.88 days @ 2 minute blocks "},{"title":"What is that in years?","type":1,"pageTitle":"Reward & Emissions","url":"/docs/yerbas/papers/rewardemissions/##","content":"1,388.88 / 365.25 = 3.80 years (with one leap year) "},{"title":"How accurate are those timelines","type":1,"pageTitle":"Reward & Emissions","url":"/docs/yerbas/papers/rewardemissions/##","content":"This is all dependent on the number of blocks, not calendar time. If the block speed is faster than two minutes, it will be sooner. If slower, it will be longer than the 3.8 years. "},{"title":"Social","type":0,"sectionRef":"#","url":"/docs/yerbas/yerbassocial/","content":"Social DiscordTelegramRedditFacebookTwitterBitcointalk","keywords":""},{"title":"Use HD Wallet","type":0,"sectionRef":"#","url":"/docs/wallet/hdwallet/","content":"","keywords":""},{"title":"Unix​","type":1,"pageTitle":"Use HD Wallet","url":"/docs/wallet/hdwallet/#unix","content":"Enter the following command from the command line. This will start a yerbas wallet with a randomly generated HD wallet seed and no mnemonic passphrase: ./yerbas-qt --usehd=1  After the wallet starts it will warn you that you need to encrypt your wallet after verifying that it works. Open the wallet debug console from Tools -&gt; Debug Console and type the command to see your randomly generated 24-word mnemonic seed phrase as well as your seed in hexadecimal: dumphdinfo  To restore an HD wallet you will need this 24-word seed phrase. You can restore a lost wallet, or create a new wallet with a custom separately generated 24-word mnemonic and passphrase, by running the following command from your command line. Make sure no existing wallet.dat file exists in the wallets data directory: ./yerbas-qt --usehd=1 --mnemonic=&quot;YOUR 24-WORD SEED PHRASE&quot; --mnemonicpassphrase=&quot;OPTIONAL PASSPHRASE&quot;  The HD wallet will be restored and your private keys regenerated and your balance will appear after the blockchain sync has finished. "},{"title":"Windows​","type":1,"pageTitle":"Use HD Wallet","url":"/docs/wallet/hdwallet/#windows","content":"Download the latest Yerbas wallet from https://github.com/the-yerbas-endeavor/yerbas/releases. I recommend getting the windows zip file and not the setup.exe as the steps shown below will use that file  Unzip this file and place it somewhere easy to navigate to. DO NOT run the wallet executable yet. You will need to navigate to it from the windows command line. Open your windows command prompt by typing cmd in your windows search bar in your start bar  Navigate in the command prompt to wherever you extracted the zip file and run the exe with the --usehd=1 parameter. yerbas-qt.exe --usehd=1   This will launch and start a new Yerbas Core Wallet. Select where the wallet will save its data and hit ok The wallet will give you a warning about encrypting your wallet. Select ok to continue. We will encrypt your wallet in a few minutes.  Once the wallet fully loads you can click hide to hide the status window about downloading the blockchain information. We can do these other steps while the wallet downloads and syncs the blockchain. Open the Debug console so we can have the wallet display the 24-word mnemonic seed phrase you will need to store securely. This is your wallets recovery seed, anyone with this seed can regenerate your wallet and recover (or steal!) your coins. To open the console click Tools -&gt; Debug console.  On the debug console we need to enter the dumphdinfo command. This will display the randomly generated 24-word mnemonic seed phrase as well as your seed in hexadecimal format. note The following image contains an actual seed phrase that I generated strictly for purposes of this guide. It contains no coins. Never share your seed phrase with anyone and store it securely!  Write down the &quot;mnemonic&quot; that is displayed. This is the 24-words you need to recover your wallet in case of loss. Remember order and spelling matter and you need to capture this exactly as displayed. Store it somewhere securely. Engrave it on metal (seriously these products exist). At a minimum store it in a secure and well regarded password manager. Word of Caution It is a very bad idea to just paste your wallet seed phrase into a text document on your desktop. Next we will encrypt your wallet. This helps keep it secure while it is running on your computer. Click Settings -&gt; Encrypt Wallet... and enter a password for your wallet. If you lose this password you will lose access to your coins. You will need to enter it to run some console commands such as dumphdinfo as well as any time you send coins.  You are now done generating your HD wallet. "},{"title":"Restoring a lost HD wallet​","type":1,"pageTitle":"Use HD Wallet","url":"/docs/wallet/hdwallet/#restoring-a-lost-hd-wallet","content":"You can restore your wallet with this seed phrase from the command line similar to the way you generated the HD wallet. You can restore a lost wallet by running the following command from your command line. Make sure no existing wallet.dat file exists in the wallets data directory: yerbas-qt.exe --usehd=1 --mnemonic=&quot;YOUR 24-WORD SEED PHRASE&quot; --mnemonicpassphrase=&quot;OPTIONAL PASSPHRASE&quot;  note The mnemonicpassphrase is NOT your wallet encryption passphrase, this is an optional &quot;25th-word&quot; you can use when creating a wallet with a custom passphrase if you wish. The HD wallet will be restored and your private keys regenerated and your balance will appear after the blockchain sync has finished. "}]